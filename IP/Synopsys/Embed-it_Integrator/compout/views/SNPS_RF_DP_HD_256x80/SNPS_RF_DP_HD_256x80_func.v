/*---------------------------------------------------------------------*/
/*               Copyright(c) Synopsys, Inc.                           */
/*     All Rights reserved - Unpublished -rights reserved under        */
/*     the Copyright laws of the United States of America.             */
/*                                                                     */
/*  U.S. Patents: 7,093,156 B1 and 7,406,620 B2 (and more pending).    */
/*                                                                     */
/*  This file includes the Confidential information of Synopsys, Inc.  */
/*  and GLOBALFOUNDRIES.                                               */
/*  The receiver of this Confidential Information shall not disclose   */
/*  it to any third party and shall protect its confidentiality by     */
/*  using the same degree of care, but not less than a reasonable      */
/*  degree of care, as the receiver uses to protect receiver's own     */
/*  Confidential Information.                                          */
/*  Licensee acknowledges and agrees that all output generated for     */
/*  Licensee by Synopsys, Inc. as described in the pertinent Program   */
/*  Schedule(s), or generated by Licensee through use of any Compiler  */
/*  licensed hereunder contains information that complies with the     */
/*  Virtual Component Identification Physical Tagging Standard (VCID)  */
/*  as maintained by the Virtual Socket Interface Alliance (VSIA).     */
/*  Such information may be expressed in GDSII Layer 63 or other such  */
/*  layer designated by the VSIA, hardware definition languages, or    */
/*  other formats.  Licensee is not authorized to alter or change any  */
/*  such information.                                                  */
/*---------------------------------------------------------------------*/
/*                                                                     */
/*  Built for linux64 and running on linux64.                          */
/*                                                                     */
/*  Software           : Rev: U-2022.12                                */
/*  Library Format     : Rev: 1.05.00                                  */
/*  Compiler Name      : gf22nsd42p11s1drl128sa04p1                    */
/*  Platform           : Linux3.10.0-957.5.1.el7.x86_64                */
/*                     : #1 SMP Wed Dec 19 10:46:58 EST 2018x86_64     */
/*  Date of Generation : Fri Dec 09 16:07:28 CET 2022                  */
/*                                                                     */
/*---------------------------------------------------------------------*/

`timescale 1 ns / 1 ps

module mm17a04_u_hdrf2p_io_pin_m2_empty_lt ();
endmodule

module mm17a04_u_hdrf2p_rebuf_pin_m2_lt ();
endmodule

module mm17a04_u_hdrf2p_rw_edgel_dummy ();
endmodule

module mm17a04_u_hdrf2p_rw_dummy ();
endmodule

module mm17a04_u_hdrf2p_rwbuf_dummy ();
endmodule

module mm17a04_u_hdrf2p_rar2x4m1_dummy ();
endmodule

module mm17a04_u_hdrf2p_rwrebuf_dummy ();
endmodule

module mm17a04_u_hdrf2p_pg_pwedge_dummy ();
endmodule

module SNPS_RF_DP_HD_256x80_pin_cnt (ARYSD, CLKRD, CLKWR, DS, FISO, LOG0, LOG1,
       LS, MERD, MEWR, PROCOM, RA, RMERD, RMEWR, RMRD, RMWR, RSCEN, RSCIN,
       RSCLK, RSCOUT, RSCRST, TEST1RD, TEST1WR, TEST_RNM, VBN, VBP, VDDA, VDDP,
       VDDPI, VSS, WA, WE, WP, XADRRD, XADRWR, YADRRD, YADRWR);
    inout ARYSD;
    inout CLKRD;
    inout CLKWR;
    inout DS;
    inout FISO;
    inout LOG0;
    inout LOG1;
    inout LS;
    inout MERD;
    inout MEWR;
    wire [1:0] POFF;
    inout [1:0] PROCOM;
    inout [1:0] RA;
    inout RMERD;
    inout RMEWR;
    inout [3:0] RMRD;
    inout [3:0] RMWR;
    inout RSCEN;
    inout RSCIN;
    inout RSCLK;
    inout RSCOUT;
    inout RSCRST;
    inout TEST1RD;
    inout TEST1WR;
    inout TEST_RNM;
    inout [2:0] VBN;
    supply0 [2:0] VBN;
    inout [2:0] VBP;
    supply0 [2:0] VBP;
    inout [1:0] VDDA;
    supply1 [1:0] VDDA;
    inout [2:0] VDDP;
    supply1 [2:0] VDDP;
    inout [1:0] VDDPI;
    inout [2:0] VSS;
    supply0 [2:0] VSS;
    inout [1:0] WA;
    inout WE;
    inout [2:0] WP;
    inout [7:0] XADRRD;
    inout [7:0] XADRWR;
    inout [1:0] YADRRD;
    inout [1:0] YADRWR;

    //*** Jumper Report ***
    // Jumper: LOG0 DS FISO PROCOM[0] RA[0] RA[1] RSCEN RSCIN RSCLK RSCRST XADRRD[3] XADRWR[3] YADRRD[1] YADRWR[1]
    // Jumper: LOG1 PROCOM[1]

    mm17a04_u_hdrf2p_ctrl_edgel_pin X_mm17a04_u_hdrf2p_ctrl_edgel_pin_m2
        (VDDA[0], VDDP[0], VSS[0], VBP[0], VBN[0]);
    mm17a04_u_hdrf2p_ctrl_pin_lt X_mm17a04_u_hdrf2p_ctrl_pin_lt (VDDP[1],
        VDDPI[0], VSS[1], VBP[1], VBN[1], CLKRD, CLKWR, DS, FISO, LOG0, LOG1,
        LS, MERD, MEWR, POFF[0], POFF[1], PROCOM[0], PROCOM[1], RA[0], RA[1],
        RMERD, RMEWR, RMRD[0], RMRD[1], RMRD[2], RMRD[3], RMWR[0], RMWR[1],
        RMWR[2], RMWR[3], RSCEN, RSCIN, RSCLK, RSCOUT, RSCRST, ARYSD, TEST1RD,
        TEST1WR, TEST_RNM, WA[0], WA[1], WE, WP[0], WP[1], WP[2], XADRRD[0],
        XADRRD[1], XADRRD[2], XADRRD[3], XADRRD[4], XADRRD[5], XADRRD[6],
        XADRRD[7], XADRWR[0], XADRWR[1], XADRWR[2], XADRWR[3], XADRWR[4],
        XADRWR[5], XADRWR[6], XADRWR[7], YADRRD[0], YADRRD[1], YADRWR[0],
        YADRWR[1]);
    mm17a04_u_hdrf2p_buf_pin_lt X_mm17a04_u_hdrf2p_buf_pin_m2_lt (VDDA[1],
        VDDP[2], VDDPI[1], VSS[2], VBP[2], VBN[2], LOG1);
endmodule

module SNPS_RF_DP_HD_256x80_pin_rt_seg1 (D, Q, VBN, VBP, VDDP, VDDPI, VSS, WEM);
    inout [39:0] D;
    inout [39:0] Q;
    inout [39:0] VBN;
    supply0 [39:0] VBN;
    inout [39:0] VBP;
    supply0 [39:0] VBP;
    inout [39:0] VDDP;
    supply1 [39:0] VDDP;
    inout [39:0] VDDPI;
    inout [39:0] VSS;
    supply0 [39:0] VSS;
    inout [39:0] WEM;
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S0 (VDDP[0],
        VDDPI[0], VSS[0], VBP[0], VBN[0], D[0], Q[0], WEM[0]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S0
        ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S1
        ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S1 (VDDP[1],
        VDDPI[1], VSS[1], VBP[1], VBN[1], D[1], Q[1], WEM[1]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S2 (VDDP[2],
        VDDPI[2], VSS[2], VBP[2], VBN[2], D[2], Q[2], WEM[2]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S2
        ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S3
        ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S3 (VDDP[3],
        VDDPI[3], VSS[3], VBP[3], VBN[3], D[3], Q[3], WEM[3]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S4 (VDDP[4],
        VDDPI[4], VSS[4], VBP[4], VBN[4], D[4], Q[4], WEM[4]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S4
        ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S5
        ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S5 (VDDP[5],
        VDDPI[5], VSS[5], VBP[5], VBN[5], D[5], Q[5], WEM[5]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S6 (VDDP[6],
        VDDPI[6], VSS[6], VBP[6], VBN[6], D[6], Q[6], WEM[6]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S6
        ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S7
        ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S7 (VDDP[7],
        VDDPI[7], VSS[7], VBP[7], VBN[7], D[7], Q[7], WEM[7]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S8 (VDDP[8],
        VDDPI[8], VSS[8], VBP[8], VBN[8], D[8], Q[8], WEM[8]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S8
        ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S9
        ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S9 (VDDP[9],
        VDDPI[9], VSS[9], VBP[9], VBN[9], D[9], Q[9], WEM[9]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S10 (VDDP[10],
        VDDPI[10], VSS[10], VBP[10], VBN[10], D[10], Q[10], WEM[10]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S10 ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S11 ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S11 (VDDP[11],
        VDDPI[11], VSS[11], VBP[11], VBN[11], D[11], Q[11], WEM[11]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S12 (VDDP[12],
        VDDPI[12], VSS[12], VBP[12], VBN[12], D[12], Q[12], WEM[12]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S12 ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S13 ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S13 (VDDP[13],
        VDDPI[13], VSS[13], VBP[13], VBN[13], D[13], Q[13], WEM[13]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S14 (VDDP[14],
        VDDPI[14], VSS[14], VBP[14], VBN[14], D[14], Q[14], WEM[14]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S14 ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S15 ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S15 (VDDP[15],
        VDDPI[15], VSS[15], VBP[15], VBN[15], D[15], Q[15], WEM[15]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S16 (VDDP[16],
        VDDPI[16], VSS[16], VBP[16], VBN[16], D[16], Q[16], WEM[16]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S16 ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S17 ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S17 (VDDP[17],
        VDDPI[17], VSS[17], VBP[17], VBN[17], D[17], Q[17], WEM[17]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S18 (VDDP[18],
        VDDPI[18], VSS[18], VBP[18], VBN[18], D[18], Q[18], WEM[18]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S18 ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_S19 ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_S19 (VDDP[19],
        VDDPI[19], VSS[19], VBP[19], VBN[19], D[19], Q[19], WEM[19]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F19 (VDDP[20],
        VDDPI[20], VSS[20], VBP[20], VBN[20], D[20], Q[20], WEM[20]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F19 ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F18 ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F18 (VDDP[21],
        VDDPI[21], VSS[21], VBP[21], VBN[21], D[21], Q[21], WEM[21]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F17 (VDDP[22],
        VDDPI[22], VSS[22], VBP[22], VBN[22], D[22], Q[22], WEM[22]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F17 ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F16 ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F16 (VDDP[23],
        VDDPI[23], VSS[23], VBP[23], VBN[23], D[23], Q[23], WEM[23]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F15 (VDDP[24],
        VDDPI[24], VSS[24], VBP[24], VBN[24], D[24], Q[24], WEM[24]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F15 ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F14 ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F14 (VDDP[25],
        VDDPI[25], VSS[25], VBP[25], VBN[25], D[25], Q[25], WEM[25]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F13 (VDDP[26],
        VDDPI[26], VSS[26], VBP[26], VBN[26], D[26], Q[26], WEM[26]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F13 ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F12 ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F12 (VDDP[27],
        VDDPI[27], VSS[27], VBP[27], VBN[27], D[27], Q[27], WEM[27]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F11 (VDDP[28],
        VDDPI[28], VSS[28], VBP[28], VBN[28], D[28], Q[28], WEM[28]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F11 ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt
        X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F10 ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F10 (VDDP[29],
        VDDPI[29], VSS[29], VBP[29], VBN[29], D[29], Q[29], WEM[29]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F9 (VDDP[30],
        VDDPI[30], VSS[30], VBP[30], VBN[30], D[30], Q[30], WEM[30]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F9
        ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F8
        ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F8 (VDDP[31],
        VDDPI[31], VSS[31], VBP[31], VBN[31], D[31], Q[31], WEM[31]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F7 (VDDP[32],
        VDDPI[32], VSS[32], VBP[32], VBN[32], D[32], Q[32], WEM[32]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F7
        ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F6
        ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F6 (VDDP[33],
        VDDPI[33], VSS[33], VBP[33], VBN[33], D[33], Q[33], WEM[33]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F5 (VDDP[34],
        VDDPI[34], VSS[34], VBP[34], VBN[34], D[34], Q[34], WEM[34]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F5
        ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F4
        ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F4 (VDDP[35],
        VDDPI[35], VSS[35], VBP[35], VBN[35], D[35], Q[35], WEM[35]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F3 (VDDP[36],
        VDDPI[36], VSS[36], VBP[36], VBN[36], D[36], Q[36], WEM[36]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F3
        ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F2
        ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F2 (VDDP[37],
        VDDPI[37], VSS[37], VBP[37], VBN[37], D[37], Q[37], WEM[37]);
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F1 (VDDP[38],
        VDDPI[38], VSS[38], VBP[38], VBN[38], D[38], Q[38], WEM[38]);
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F1
        ();
    mm17a04_u_hdrf2p_io_pin_m2_empty_lt X_mm17a04_u_hdrf2p_io_pin_m2_empty_lt_F0
        ();
    mm17a04_u_hdrf2p_io_pin_lt X_mm17a04_u_hdrf2p_io_pin_m2_lt_F0 (VDDP[39],
        VDDPI[39], VSS[39], VBP[39], VBN[39], D[39], Q[39], WEM[39]);
endmodule

module SNPS_RF_DP_HD_256x80_pin_rt (D, LOG0, LOG1, Q, ROP, VBN, VBP, VDDA, VDDP,
       VDDPI, VSS, WEM);
    inout [79:0] D;
    inout LOG0;
    inout LOG1;
    inout [79:0] Q;
    inout ROP;
    inout [80:0] VBN;
    supply0 [80:0] VBN;
    inout [80:0] VBP;
    supply0 [80:0] VBP;
    inout VDDA;
    supply1 VDDA;
    inout [80:0] VDDP;
    supply1 [80:0] VDDP;
    inout [80:0] VDDPI;
    inout [80:0] VSS;
    supply0 [80:0] VSS;
    inout [79:0] WEM;
    SNPS_RF_DP_HD_256x80_pin_rt_seg1 X_pin_rt_seg1_S0
        (.D({D[39],D[38],D[37],D[36],D[35],D[34],D[33],D[32],D[31],D[30],D[29],D[28],D[27],D[26],D[25],D[24],D[23],D[22],D[21],D[20],D[19],D[18],D[17],D[16],D[15],D[14],D[13],D[12],D[11],D[10],D[9],D[8],D[7],D[6],D[5],D[4],D[3],D[2],D[1],D[0]}),
        .Q({Q[39],Q[38],Q[37],Q[36],Q[35],Q[34],Q[33],Q[32],Q[31],Q[30],Q[29],Q[28],Q[27],Q[26],Q[25],Q[24],Q[23],Q[22],Q[21],Q[20],Q[19],Q[18],Q[17],Q[16],Q[15],Q[14],Q[13],Q[12],Q[11],Q[10],Q[9],Q[8],Q[7],Q[6],Q[5],Q[4],Q[3],Q[2],Q[1],Q[0]}),
        .VBN({VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDP({VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VSS({VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WEM({WEM[39],WEM[38],WEM[37],WEM[36],WEM[35],WEM[34],WEM[33],WEM[32],WEM[31],WEM[30],WEM[29],WEM[28],WEM[27],WEM[26],WEM[25],WEM[24],WEM[23],WEM[22],WEM[21],WEM[20],WEM[19],WEM[18],WEM[17],WEM[16],WEM[15],WEM[14],WEM[13],WEM[12],WEM[11],WEM[10],WEM[9],WEM[8],WEM[7],WEM[6],WEM[5],WEM[4],WEM[3],WEM[2],WEM[1],WEM[0]}));
    mm17a04_u_hdrf2p_rebuf_pin_m2_lt X_mm17a04_u_hdrf2p_rebuf_pin_m2_lt ();
    SNPS_RF_DP_HD_256x80_pin_rt_seg1 X_pin_rt_seg1_F0
        (.D({D[79],D[78],D[77],D[76],D[75],D[74],D[73],D[72],D[71],D[70],D[69],D[68],D[67],D[66],D[65],D[64],D[63],D[62],D[61],D[60],D[59],D[58],D[57],D[56],D[55],D[54],D[53],D[52],D[51],D[50],D[49],D[48],D[47],D[46],D[45],D[44],D[43],D[42],D[41],D[40]}),
        .Q({Q[79],Q[78],Q[77],Q[76],Q[75],Q[74],Q[73],Q[72],Q[71],Q[70],Q[69],Q[68],Q[67],Q[66],Q[65],Q[64],Q[63],Q[62],Q[61],Q[60],Q[59],Q[58],Q[57],Q[56],Q[55],Q[54],Q[53],Q[52],Q[51],Q[50],Q[49],Q[48],Q[47],Q[46],Q[45],Q[44],Q[43],Q[42],Q[41],Q[40]}),
        .VBN({VBN[79],VBN[78],VBN[77],VBN[76],VBN[75],VBN[74],VBN[73],VBN[72],VBN[71],VBN[70],VBN[69],VBN[68],VBN[67],VBN[66],VBN[65],VBN[64],VBN[63],VBN[62],VBN[61],VBN[60],VBN[59],VBN[58],VBN[57],VBN[56],VBN[55],VBN[54],VBN[53],VBN[52],VBN[51],VBN[50],VBN[49],VBN[48],VBN[47],VBN[46],VBN[45],VBN[44],VBN[43],VBN[42],VBN[41],VBN[40]}),
        .VBP({VBP[79],VBP[78],VBP[77],VBP[76],VBP[75],VBP[74],VBP[73],VBP[72],VBP[71],VBP[70],VBP[69],VBP[68],VBP[67],VBP[66],VBP[65],VBP[64],VBP[63],VBP[62],VBP[61],VBP[60],VBP[59],VBP[58],VBP[57],VBP[56],VBP[55],VBP[54],VBP[53],VBP[52],VBP[51],VBP[50],VBP[49],VBP[48],VBP[47],VBP[46],VBP[45],VBP[44],VBP[43],VBP[42],VBP[41],VBP[40]}),
        .VDDP({VDDP[79],VDDP[78],VDDP[77],VDDP[76],VDDP[75],VDDP[74],VDDP[73],VDDP[72],VDDP[71],VDDP[70],VDDP[69],VDDP[68],VDDP[67],VDDP[66],VDDP[65],VDDP[64],VDDP[63],VDDP[62],VDDP[61],VDDP[60],VDDP[59],VDDP[58],VDDP[57],VDDP[56],VDDP[55],VDDP[54],VDDP[53],VDDP[52],VDDP[51],VDDP[50],VDDP[49],VDDP[48],VDDP[47],VDDP[46],VDDP[45],VDDP[44],VDDP[43],VDDP[42],VDDP[41],VDDP[40]}),
        .VDDPI({VDDPI[79],VDDPI[78],VDDPI[77],VDDPI[76],VDDPI[75],VDDPI[74],VDDPI[73],VDDPI[72],VDDPI[71],VDDPI[70],VDDPI[69],VDDPI[68],VDDPI[67],VDDPI[66],VDDPI[65],VDDPI[64],VDDPI[63],VDDPI[62],VDDPI[61],VDDPI[60],VDDPI[59],VDDPI[58],VDDPI[57],VDDPI[56],VDDPI[55],VDDPI[54],VDDPI[53],VDDPI[52],VDDPI[51],VDDPI[50],VDDPI[49],VDDPI[48],VDDPI[47],VDDPI[46],VDDPI[45],VDDPI[44],VDDPI[43],VDDPI[42],VDDPI[41],VDDPI[40]}),
        .VSS({VSS[79],VSS[78],VSS[77],VSS[76],VSS[75],VSS[74],VSS[73],VSS[72],VSS[71],VSS[70],VSS[69],VSS[68],VSS[67],VSS[66],VSS[65],VSS[64],VSS[63],VSS[62],VSS[61],VSS[60],VSS[59],VSS[58],VSS[57],VSS[56],VSS[55],VSS[54],VSS[53],VSS[52],VSS[51],VSS[50],VSS[49],VSS[48],VSS[47],VSS[46],VSS[45],VSS[44],VSS[43],VSS[42],VSS[41],VSS[40]}),
        .WEM({WEM[79],WEM[78],WEM[77],WEM[76],WEM[75],WEM[74],WEM[73],WEM[72],WEM[71],WEM[70],WEM[69],WEM[68],WEM[67],WEM[66],WEM[65],WEM[64],WEM[63],WEM[62],WEM[61],WEM[60],WEM[59],WEM[58],WEM[57],WEM[56],WEM[55],WEM[54],WEM[53],WEM[52],WEM[51],WEM[50],WEM[49],WEM[48],WEM[47],WEM[46],WEM[45],WEM[44],WEM[43],WEM[42],WEM[41],WEM[40]}));
    mm17a04_u_hdrf2p_cap_pin_lt X_mm17a04_u_hdrf2p_cap_pin_m2_lt_pg0 (VDDA,
        VDDP[80], VDDPI[80], VSS[80], VBP[80], VBN[80], LOG0, LOG1, ROP);
endmodule

module SNPS_RF_DP_HD_256x80_pin_row (ARYSD, CLKRD, CLKWR, D, DS, FISO, LOG0,
       LOG1, LS, MERD, MEWR, PROCOM, Q, RA, RMERD, RMEWR, RMRD, RMWR, ROP,
       RSCEN, RSCIN, RSCLK, RSCOUT, RSCRST, TEST1RD, TEST1WR, TEST_RNM, VBN,
       VBP, VDDA, VDDP, VDDPI, VSS, WA, WE, WEM, WP, XADRRD, XADRWR, YADRRD,
       YADRWR);
    inout ARYSD;
    inout CLKRD;
    inout CLKWR;
    inout [79:0] D;
    inout DS;
    inout FISO;
    inout [1:0] LOG0;
    inout [1:0] LOG1;
    inout LS;
    inout MERD;
    inout MEWR;
    inout [1:0] PROCOM;
    inout [79:0] Q;
    inout [1:0] RA;
    inout RMERD;
    inout RMEWR;
    inout [3:0] RMRD;
    inout [3:0] RMWR;
    inout ROP;
    inout RSCEN;
    inout RSCIN;
    inout RSCLK;
    inout RSCOUT;
    inout RSCRST;
    inout TEST1RD;
    inout TEST1WR;
    inout TEST_RNM;
    inout [83:0] VBN;
    supply0 [83:0] VBN;
    inout [83:0] VBP;
    supply0 [83:0] VBP;
    inout [2:0] VDDA;
    supply1 [2:0] VDDA;
    inout [83:0] VDDP;
    supply1 [83:0] VDDP;
    inout [82:0] VDDPI;
    inout [83:0] VSS;
    supply0 [83:0] VSS;
    inout [1:0] WA;
    inout WE;
    inout [79:0] WEM;
    inout [2:0] WP;
    inout [7:0] XADRRD;
    inout [7:0] XADRWR;
    inout [1:0] YADRRD;
    inout [1:0] YADRWR;
    SNPS_RF_DP_HD_256x80_pin_cnt X_pin_cnt (.ARYSD(ARYSD), .CLKRD(CLKRD),
        .CLKWR(CLKWR), .DS(DS), .FISO(FISO), .LOG0(LOG0[0]), .LOG1(LOG1[0]),
        .LS(LS), .MERD(MERD), .MEWR(MEWR), .PROCOM({PROCOM[1],PROCOM[0]}),
        .RA({RA[1],RA[0]}), .RMERD(RMERD), .RMEWR(RMEWR),
        .RMRD({RMRD[3],RMRD[2],RMRD[1],RMRD[0]}),
        .RMWR({RMWR[3],RMWR[2],RMWR[1],RMWR[0]}), .RSCEN(RSCEN), .RSCIN(RSCIN),
        .RSCLK(RSCLK), .RSCOUT(RSCOUT), .RSCRST(RSCRST), .TEST1RD(TEST1RD),
        .TEST1WR(TEST1WR), .TEST_RNM(TEST_RNM), .VBN({VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[2],VBP[1],VBP[0]}), .VDDA({VDDA[1],VDDA[0]}),
        .VDDP({VDDP[2],VDDP[1],VDDP[0]}), .VDDPI({VDDPI[1],VDDPI[0]}),
        .VSS({VSS[2],VSS[1],VSS[0]}), .WA({WA[1],WA[0]}), .WE(WE),
        .WP({WP[2],WP[1],WP[0]}),
        .XADRRD({XADRRD[7],XADRRD[6],XADRRD[5],XADRRD[4],XADRRD[3],XADRRD[2],XADRRD[1],XADRRD[0]}),
        .XADRWR({XADRWR[7],XADRWR[6],XADRWR[5],XADRWR[4],XADRWR[3],XADRWR[2],XADRWR[1],XADRWR[0]}),
        .YADRRD({YADRRD[1],YADRRD[0]}), .YADRWR({YADRWR[1],YADRWR[0]}));
    SNPS_RF_DP_HD_256x80_pin_rt X_pin_rt
        (.D({D[79],D[78],D[77],D[76],D[75],D[74],D[73],D[72],D[71],D[70],D[69],D[68],D[67],D[66],D[65],D[64],D[63],D[62],D[61],D[60],D[59],D[58],D[57],D[56],D[55],D[54],D[53],D[52],D[51],D[50],D[49],D[48],D[47],D[46],D[45],D[44],D[43],D[42],D[41],D[40],D[39],D[38],D[37],D[36],D[35],D[34],D[33],D[32],D[31],D[30],D[29],D[28],D[27],D[26],D[25],D[24],D[23],D[22],D[21],D[20],D[19],D[18],D[17],D[16],D[15],D[14],D[13],D[12],D[11],D[10],D[9],D[8],D[7],D[6],D[5],D[4],D[3],D[2],D[1],D[0]}),
        .LOG0(LOG0[1]), .LOG1(LOG1[1]),
        .Q({Q[79],Q[78],Q[77],Q[76],Q[75],Q[74],Q[73],Q[72],Q[71],Q[70],Q[69],Q[68],Q[67],Q[66],Q[65],Q[64],Q[63],Q[62],Q[61],Q[60],Q[59],Q[58],Q[57],Q[56],Q[55],Q[54],Q[53],Q[52],Q[51],Q[50],Q[49],Q[48],Q[47],Q[46],Q[45],Q[44],Q[43],Q[42],Q[41],Q[40],Q[39],Q[38],Q[37],Q[36],Q[35],Q[34],Q[33],Q[32],Q[31],Q[30],Q[29],Q[28],Q[27],Q[26],Q[25],Q[24],Q[23],Q[22],Q[21],Q[20],Q[19],Q[18],Q[17],Q[16],Q[15],Q[14],Q[13],Q[12],Q[11],Q[10],Q[9],Q[8],Q[7],Q[6],Q[5],Q[4],Q[3],Q[2],Q[1],Q[0]}),
        .ROP(ROP),
        .VBN({}),
        .VBP({}),
        .VDDA(VDDA[2]),
        .VDDP({VDDP[83],VDDP[82],VDDP[81],VDDP[80],VDDP[79],VDDP[78],VDDP[77],VDDP[76],VDDP[75],VDDP[74],VDDP[73],VDDP[72],VDDP[71],VDDP[70],VDDP[69],VDDP[68],VDDP[67],VDDP[66],VDDP[65],VDDP[64],VDDP[63],VDDP[62],VDDP[61],VDDP[60],VDDP[59],VDDP[58],VDDP[57],VDDP[56],VDDP[55],VDDP[54],VDDP[53],VDDP[52],VDDP[51],VDDP[50],VDDP[49],VDDP[48],VDDP[47],VDDP[46],VDDP[45],VDDP[44],VDDP[43],VDDP[42],VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3]}),
        .VDDPI({VDDPI[82],VDDPI[81],VDDPI[80],VDDPI[79],VDDPI[78],VDDPI[77],VDDPI[76],VDDPI[75],VDDPI[74],VDDPI[73],VDDPI[72],VDDPI[71],VDDPI[70],VDDPI[69],VDDPI[68],VDDPI[67],VDDPI[66],VDDPI[65],VDDPI[64],VDDPI[63],VDDPI[62],VDDPI[61],VDDPI[60],VDDPI[59],VDDPI[58],VDDPI[57],VDDPI[56],VDDPI[55],VDDPI[54],VDDPI[53],VDDPI[52],VDDPI[51],VDDPI[50],VDDPI[49],VDDPI[48],VDDPI[47],VDDPI[46],VDDPI[45],VDDPI[44],VDDPI[43],VDDPI[42],VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2]}),
        .VSS({VSS[83],VSS[82],VSS[81],VSS[80],VSS[79],VSS[78],VSS[77],VSS[76],VSS[75],VSS[74],VSS[73],VSS[72],VSS[71],VSS[70],VSS[69],VSS[68],VSS[67],VSS[66],VSS[65],VSS[64],VSS[63],VSS[62],VSS[61],VSS[60],VSS[59],VSS[58],VSS[57],VSS[56],VSS[55],VSS[54],VSS[53],VSS[52],VSS[51],VSS[50],VSS[49],VSS[48],VSS[47],VSS[46],VSS[45],VSS[44],VSS[43],VSS[42],VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3]}),
        .WEM({WEM[79],WEM[78],WEM[77],WEM[76],WEM[75],WEM[74],WEM[73],WEM[72],WEM[71],WEM[70],WEM[69],WEM[68],WEM[67],WEM[66],WEM[65],WEM[64],WEM[63],WEM[62],WEM[61],WEM[60],WEM[59],WEM[58],WEM[57],WEM[56],WEM[55],WEM[54],WEM[53],WEM[52],WEM[51],WEM[50],WEM[49],WEM[48],WEM[47],WEM[46],WEM[45],WEM[44],WEM[43],WEM[42],WEM[41],WEM[40],WEM[39],WEM[38],WEM[37],WEM[36],WEM[35],WEM[34],WEM[33],WEM[32],WEM[31],WEM[30],WEM[29],WEM[28],WEM[27],WEM[26],WEM[25],WEM[24],WEM[23],WEM[22],WEM[21],WEM[20],WEM[19],WEM[18],WEM[17],WEM[16],WEM[15],WEM[14],WEM[13],WEM[12],WEM[11],WEM[10],WEM[9],WEM[8],WEM[7],WEM[6],WEM[5],WEM[4],WEM[3],WEM[2],WEM[1],WEM[0]}));
endmodule

module SNPS_RF_DP_HD_256x80_gio_cnt (ARYSD, CENDP, CKGATE_RD, CLKRD, CLKWR,
       DCLKT_H, .DEF1_RD({DEF1_RD[1]}), .DEF1_WR({DEF1_WR[1]}), DFTCKRD,
       DFTCKWR, DFT_OR_SERD, DFT_OR_SEWR, DLYPDB, DLYPW, DSORSD, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, FISO, LCLKRDB, LCLKRDT, LCLKWRB, LCLKWRT,
       LITESLP, LMERD, LMEWR, LME_GATING_RD, LME_GATING_WR, LOG0, LOG1,
       LOG1RMRD_VDDPI, LOG1RMWR_VDDPI, LOG1_RMRD, LOG1_RMWR, LRWMEB, LS, LWE,
       LXADRBRD, LXADRBWR, LXADRRD, LXADRWR, LYADRBRD, LYADRBWR, LYADRRD,
       LYADRWR, MCLKRDB, MCLKRDT, MCLKWRB, MCLKWRT, MERD, MEWR, PROCOM, RA,
       RASSB_H, RFLOAT, RFLT_RET, RMDEF12_RD_PROCOM00, RMDEF12_RD_PROCOM01,
       RMDEF12_WR_PROCOM00, RMDEF12_WR_PROCOM01, RMERD, RMEWR, RMRD, RMTRD,
       RMTWR, RMWR, RSCEN, RSCIN, RSCLK, RSCOUT, RSCRST, RWLCKB, SEDB, SEDT,
       SE_DB, SE_DT, STRSB, T1TRD, T1TWR, TEST1RD, TEST1WR, TEST_RNM, TKEEPB,
       VBN, VBP, VDDA, VDDP, VDDPI, VSS, WA, WABUF, WE, WFLOAT, WFLT_RET, WP,
       WPBUF, XADRRD, XADRWR, YADRRD, YADRWR, YCOLRD, YSELB_H, YSELRD);
    inout ARYSD;
    inout CENDP;
    output CKGATE_RD;
    input CLKRD;
    input CLKWR;
    output DCLKT_H;
    output [1:0] DEF1_RD;
    output [1:0] DEF1_WR;
    input DFTCKRD;
    input DFTCKWR;
    input DFT_OR_SERD;
    input DFT_OR_SEWR;
    input DLYPDB;
    input DLYPW;
    input DSORSD;
    output FAST1_RD;
    output FAST1_WR;
    output FAST2_RD;
    output FAST2_WR;
    inout FISO;
    inout LCLKRDB;
    inout LCLKRDT;
    output LCLKWRB;
    output LCLKWRT;
    output LITESLP;
    output LMERD;
    output LMEWR;
    input LME_GATING_RD;
    input LME_GATING_WR;
    inout LOG0;
    inout LOG1;
    inout LOG1RMRD_VDDPI;
    inout LOG1RMWR_VDDPI;
    inout LOG1_RMRD;
    inout LOG1_RMWR;
    output LRWMEB;
    input LS;
    output LWE;
    output [7:0] LXADRBRD;
    output [7:0] LXADRBWR;
    output [7:0] LXADRRD;
    output [7:0] LXADRWR;
    output [1:0] LYADRBRD;
    output [1:0] LYADRBWR;
    output [1:0] LYADRRD;
    output [1:0] LYADRWR;
    output MCLKRDB;
    output MCLKRDT;
    output MCLKWRB;
    output MCLKWRT;
    input MERD;
    input MEWR;
    wire [3:0] OPT_Y;
    input [1:0] PROCOM;
    input [1:0] RA;
    wire [1:0] RABUF;
    output [1:0] RASSB_H;
    output RFLOAT;
    input RFLT_RET;
    input [3:0] RMDEF12_RD_PROCOM00;
    input [3:0] RMDEF12_RD_PROCOM01;
    input [3:0] RMDEF12_WR_PROCOM00;
    input [3:0] RMDEF12_WR_PROCOM01;
    wire [3:0] RMDEF1_RD;
    wire [3:0] RMDEF1_WR;
    wire [3:0] RMDEF2_RD;
    wire [3:0] RMDEF2_WR;
    wire [2:0] RMENI_RD;
    wire [2:0] RMENI_WR;
    input RMERD;
    input RMEWR;
    input [3:0] RMRD;
    wire [3:0] RMSLOW_RD;
    wire [3:0] RMSLOW_WR;
    output [3:0] RMTRD;
    output [3:0] RMTWR;
    input [3:0] RMWR;
    inout RSCEN;
    inout RSCIN;
    inout RSCLK;
    inout RSCOUT;
    inout RSCRST;
    output RWLCKB;
    input SEDB;
    input SEDT;
    output SE_DB;
    output SE_DT;
    output STRSB;
    output T1TRD;
    output T1TWR;
    input TEST1RD;
    input TEST1WR;
    input TEST_RNM;
    output TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VSS;
    supply0 VSS;
    input [1:0] WA;
    output [2:0] WABUF;
    input WE;
    output WFLOAT;
    input WFLT_RET;
    input [2:0] WP;
    output [2:0] WPBUF;
    input [7:0] XADRRD;
    input [7:0] XADRWR;
    input [1:0] YADRRD;
    input [1:0] YADRWR;
    inout [3:0] YCOLRD;
    output [3:0] YSELB_H;
    wire [3:0] YSELIO;
    output [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: CLKDELRD CLKFLTRD
    // Jumper: CLKDELWR CLKFLTWR
    // Jumper: CLKRDB CLKMXB_RD
    // Jumper: CLKWRB CLKMXB_WR
    // Jumper: LCLKWRT_DEL_2 LCLKWRT_prog
    // Jumper: LOG0 ARYSD CENDP DFTCKRD DFTCKWR DFT_OR_SERD DFT_OR_SEWR DLYPW DSORSD SEDT CLPSEBUF RMENI_RD[2] RMENI_WR[2]
    // Jumper: LOG1 DLYPDB LME_GATING_RD LME_GATING_WR SEDB RMENI_RD[0] RMENI_RD[1] RMENI_WR[0] RMENI_WR[1]
    // Jumper: LOG1RMRD_VDDPI LOG1_RMRD RMDEF1_RD[0] RMDEF1_RD[2] RMDEF1_RD[3] RMDEF2_RD[0] RMDEF2_RD[2] RMDEF2_RD[3] RMSLOW_RD[1] RMSLOW_RD[2] RMSLOW_RD[3]
    // Jumper: LOG1RMWR_VDDPI LOG1_RMWR RMDEF1_WR[0] RMDEF1_WR[2] RMDEF2_WR[3] RMSLOW_WR[0] RMSLOW_WR[1] RMSLOW_WR[3]
    // Jumper: VDDP VDDA VDDPI
    // Jumper: VSS RMDEF1_RD[1] RMDEF1_WR[1] RMDEF1_WR[3] RMDEF2_RD[1] RMDEF2_WR[0] RMDEF2_WR[1] RMDEF2_WR[2] RMSLOW_RD[0] RMSLOW_WR[2]
    // Jumper: YCOLRD[0] OPT_Y[0] OPT_Y[2]
    // Jumper: YCOLRD[1] OPT_Y[1] OPT_Y[3]

    mm17a04_u_hdrf2p_gcen_edgel_cm2_cm4 X_mm17a04_u_hdrf2p_gcen_edgel_cm2_cm4
        (VDDA, VDDP, VSS, VBP, VBN);
    mm17a04_u_hdrf2p_gcen X_mm17a04_u_hdrf2p_gcen_cm2_cm4 (VDDP, VDDPI, VSS,
        VBP, VBN, CKGATE_RD, CLKDELRD, CLKDELWR, CLKRDB, CLKWRB, DCKBIO_L,
        DCKBIO_R, DEF1B_RD, DEF1B_WR, DEF1_RD[0], DEF1_WR[0], DEF2B_RD,
        DEF2B_WR, DEF2_RD, DEF2_WR, DEF1_RD[1], DEF1_WR[1], FAST1_RD, FAST1_WR,
        FAST2_RD, FAST2_WR, LCLKRDB, LCLKRDT, LCLKWRB, LCLKWRT, LCLKWRT_DEL_2,
        LCLKWRT_DEL_4, LITESLP, LMERD, LMEWR, LRWMEB, LWE, LXADRBRD[0],
        LXADRBRD[1], LXADRBRD[2], LXADRBRD[3], LXADRBRD[4], LXADRBRD[5],
        LXADRBRD[6], LXADRBRD[7], LXADRBWR[0], LXADRBWR[1], LXADRBWR[2],
        LXADRBWR[3], LXADRBWR[4], LXADRBWR[5], LXADRBWR[6], LXADRBWR[7],
        LXADRRD[0], LXADRRD[1], LXADRRD[2], LXADRRD[3], LXADRRD[4], LXADRRD[5],
        LXADRRD[6], LXADRRD[7], LXADRWR[0], LXADRWR[1], LXADRWR[2], LXADRWR[3],
        LXADRWR[4], LXADRWR[5], LXADRWR[6], LXADRWR[7], LYADRBRD[0],
        LYADRBRD[1], LYADRBWR[0], LYADRBWR[1], LYADRRD[0], LYADRRD[1],
        LYADRWR[0], LYADRWR[1], MCLKRDB, MCLKRDT, MCLKWRB, MCLKWRT, RABUF[0],
        RABUF[1], RFLOAT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLCKB, STRSB, T1TRD, T1TWR, TKEEPB,
        WABUF[0], WABUF[1], WABUF[2], WFLOAT, WPBUF[0], WPBUF[1], WPBUF[2],
        YSELIO[0], YSELIO[1], YSELIO[2], YSELIO[3], YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], ARYSD, CENDP, FISO, LOG0, LOG1, LOG1RMRD_VDDPI,
        LOG1RMWR_VDDPI, LOG1_RMRD, LOG1_RMWR, RSCEN, RSCIN, RSCLK, RSCOUT,
        RSCRST, YCOLRD[0], YCOLRD[1], YCOLRD[2], YCOLRD[3], CLKDELRD, CLKDELWR,
        CLKRDB, CLKWRB, CLKRD, CLKWR, LOG0, DEF12B_RD_PGM, DEF12B_WR_PGM,
        DEF12_RD_PGM, DEF12_WR_PGM, DEF_RD_PGM, DEF_WR_PGM, DFTCKRD, DFTCKWR,
        DFT_OR_SERD, DFT_OR_SEWR, DLYPW, DSORSD, LCLKWRT_DEL_2, LME_GATING_RD,
        LME_GATING_WR, LS, MERD, MEWR, YCOLRD[0], YCOLRD[1], YCOLRD[0],
        YCOLRD[1], PROCOM[0], PROCOM[1], RA[0], RA[1], RFLT_RET,
        RMDEF12_RD_PROCOM00[0], RMDEF12_RD_PROCOM00[1], RMDEF12_RD_PROCOM00[2],
        RMDEF12_RD_PROCOM00[3], RMDEF12_RD_PROCOM01[0], RMDEF12_RD_PROCOM01[1],
        RMDEF12_RD_PROCOM01[2], RMDEF12_RD_PROCOM01[3], RMDEF12_WR_PROCOM00[0],
        RMDEF12_WR_PROCOM00[1], RMDEF12_WR_PROCOM00[2], RMDEF12_WR_PROCOM00[3],
        RMDEF12_WR_PROCOM01[0], RMDEF12_WR_PROCOM01[1], RMDEF12_WR_PROCOM01[2],
        RMDEF12_WR_PROCOM01[3], LOG1RMRD_VDDPI, VSS, LOG1RMRD_VDDPI,
        LOG1RMRD_VDDPI, LOG1RMWR_VDDPI, VSS, LOG1RMWR_VDDPI, VSS,
        LOG1RMRD_VDDPI, VSS, LOG1RMRD_VDDPI, LOG1RMRD_VDDPI, VSS, VSS, VSS,
        LOG1RMWR_VDDPI, LOG1, LOG1, LOG0, LOG1, LOG1, LOG0, RMERD, RMEWR,
        RMRD[0], RMRD[1], RMRD[2], RMRD[3], VSS, LOG1RMRD_VDDPI, LOG1RMRD_VDDPI,
        LOG1RMRD_VDDPI, LOG1RMWR_VDDPI, LOG1RMWR_VDDPI, VSS, LOG1RMWR_VDDPI,
        RMWR[0], RMWR[1], RMWR[2], RMWR[3], TEST1RD, TEST1WR, TEST_RNM, WA[0],
        WA[1], WE, WFLT_RET, WP[0], WP[1], WP[2], XADRRD[0], XADRRD[1],
        XADRRD[2], XADRRD[3], XADRRD[4], XADRRD[5], XADRRD[6], XADRRD[7],
        XADRWR[0], XADRWR[1], XADRWR[2], XADRWR[3], XADRWR[4], XADRWR[5],
        XADRWR[6], XADRWR[7], YADRRD[0], YADRRD[1], YADRWR[0], YADRWR[1]);
    mm17a04_u_hdrf2p_gcenbuf X_mm17a04_u_hdrf2p_gcenbuf_cm2_cm4 (VDDA, VDDP,
        VDDPI, VSS, VBP, VBN, DCLKT_H, RASSB_H[0], RASSB_H[1], SE_DB, SE_DT,
        YSELB_H[0], YSELB_H[1], YSELB_H[2], YSELB_H[3], LOG0, LOG1, DCKBIO_R,
        DLYPDB, LCLKRDB, LCLKRDT, RABUF[0], RABUF[1], SEDB, SEDT, YSELIO[0],
        YSELIO[1], YSELIO[2], YSELIO[3]);
endmodule

module SNPS_RF_DP_HD_256x80_gio_rt_seg1 (CB, CT, D, DCLKT, DFTBIO, DFTBIOB,
       DIB_LT, DINB, LDIB, LOG0, LOG1, LQB, Q, QT, RASSB, SE_DB, SE_DT, VBN,
       VBP, VDDP, VDDPI, VSS, WBI, WEM, WEMB, WTI, YSELB);
    inout [19:0] CB;
    inout [19:0] CT;
    input [39:0] D;
    input DCLKT;
    input [19:0] DFTBIO;
    input [19:0] DFTBIOB;
    inout [39:0] DIB_LT;
    input [39:0] DINB;
    wire [39:0] D_AL;
    output [39:0] LDIB;
    inout LOG0;
    inout LOG1;
    inout [39:0] LQB;
    output [39:0] Q;
    input [79:0] QT;
    inout [1:0] RASSB;
    input SE_DB;
    input SE_DT;
    inout [19:0] VBN;
    supply0 [19:0] VBN;
    inout [19:0] VBP;
    supply0 [19:0] VBP;
    inout [19:0] VDDP;
    supply1 [19:0] VDDP;
    inout [19:0] VDDPI;
    inout [19:0] VSS;
    supply0 [19:0] VSS;
    output [39:0] WBI;
    input [39:0] WEM;
    input [39:0] WEMB;
    wire [39:0] WEM_AL;
    output [39:0] WTI;
    input [3:0] YSELB;

    //*** Jumper Report ***
    // Jumper: DINB[0] D_AL[0]
    // Jumper: DINB[1] D_AL[1]
    // Jumper: DINB[2] D_AL[2]
    // Jumper: DINB[3] D_AL[3]
    // Jumper: DINB[4] D_AL[4]
    // Jumper: DINB[5] D_AL[5]
    // Jumper: DINB[6] D_AL[6]
    // Jumper: DINB[7] D_AL[7]
    // Jumper: DINB[8] D_AL[8]
    // Jumper: DINB[9] D_AL[9]
    // Jumper: DINB[10] D_AL[10]
    // Jumper: DINB[11] D_AL[11]
    // Jumper: DINB[12] D_AL[12]
    // Jumper: DINB[13] D_AL[13]
    // Jumper: DINB[14] D_AL[14]
    // Jumper: DINB[15] D_AL[15]
    // Jumper: DINB[16] D_AL[16]
    // Jumper: DINB[17] D_AL[17]
    // Jumper: DINB[18] D_AL[18]
    // Jumper: DINB[19] D_AL[19]
    // Jumper: DINB[20] D_AL[20]
    // Jumper: DINB[21] D_AL[21]
    // Jumper: DINB[22] D_AL[22]
    // Jumper: DINB[23] D_AL[23]
    // Jumper: DINB[24] D_AL[24]
    // Jumper: DINB[25] D_AL[25]
    // Jumper: DINB[26] D_AL[26]
    // Jumper: DINB[27] D_AL[27]
    // Jumper: DINB[28] D_AL[28]
    // Jumper: DINB[29] D_AL[29]
    // Jumper: DINB[30] D_AL[30]
    // Jumper: DINB[31] D_AL[31]
    // Jumper: DINB[32] D_AL[32]
    // Jumper: DINB[33] D_AL[33]
    // Jumper: DINB[34] D_AL[34]
    // Jumper: DINB[35] D_AL[35]
    // Jumper: DINB[36] D_AL[36]
    // Jumper: DINB[37] D_AL[37]
    // Jumper: DINB[38] D_AL[38]
    // Jumper: DINB[39] D_AL[39]
    // Jumper: LOG0 DFTBIO[0] DFTBIO[1] DFTBIO[2] DFTBIO[3] DFTBIO[4] DFTBIO[5] DFTBIO[6] DFTBIO[7] DFTBIO[8] DFTBIO[9] DFTBIO[10] DFTBIO[11] DFTBIO[12] DFTBIO[13] DFTBIO[14] DFTBIO[15] DFTBIO[16] DFTBIO[17] DFTBIO[18] DFTBIO[19]
    // Jumper: LOG1 DFTBIOB[0] DFTBIOB[1] DFTBIOB[2] DFTBIOB[3] DFTBIOB[4] DFTBIOB[5] DFTBIOB[6] DFTBIOB[7] DFTBIOB[8] DFTBIOB[9] DFTBIOB[10] DFTBIOB[11] DFTBIOB[12] DFTBIOB[13] DFTBIOB[14] DFTBIOB[15] DFTBIOB[16] DFTBIOB[17] DFTBIOB[18] DFTBIOB[19] WEM[0] WEM[1] WEM[2] WEM[3] WEM[4] WEM[5] WEM[6] WEM[7] WEM[8] WEM[9] WEM[10] WEM[11] WEM[12] WEM[13] WEM[14] WEM[15] WEM[16] WEM[17] WEM[18] WEM[19] WEM[20] WEM[21] WEM[22] WEM[23] WEM[24] WEM[25] WEM[26] WEM[27] WEM[28] WEM[29] WEM[30] WEM[31] WEM[32] WEM[33] WEM[34] WEM[35] WEM[36] WEM[37] WEM[38] WEM[39]
    // Jumper: VDDP[0] VDDPI[0]
    // Jumper: VDDP[1] VDDPI[1]
    // Jumper: VDDP[2] VDDPI[2]
    // Jumper: VDDP[3] VDDPI[3]
    // Jumper: VDDP[4] VDDPI[4]
    // Jumper: VDDP[5] VDDPI[5]
    // Jumper: VDDP[6] VDDPI[6]
    // Jumper: VDDP[7] VDDPI[7]
    // Jumper: VDDP[8] VDDPI[8]
    // Jumper: VDDP[9] VDDPI[9]
    // Jumper: VDDP[10] VDDPI[10]
    // Jumper: VDDP[11] VDDPI[11]
    // Jumper: VDDP[12] VDDPI[12]
    // Jumper: VDDP[13] VDDPI[13]
    // Jumper: VDDP[14] VDDPI[14]
    // Jumper: VDDP[15] VDDPI[15]
    // Jumper: VDDP[16] VDDPI[16]
    // Jumper: VDDP[17] VDDPI[17]
    // Jumper: VDDP[18] VDDPI[18]
    // Jumper: VDDP[19] VDDPI[19]
    // Jumper: WEMB[0] WEM_AL[0]
    // Jumper: WEMB[1] WEM_AL[1]
    // Jumper: WEMB[2] WEM_AL[2]
    // Jumper: WEMB[3] WEM_AL[3]
    // Jumper: WEMB[4] WEM_AL[4]
    // Jumper: WEMB[5] WEM_AL[5]
    // Jumper: WEMB[6] WEM_AL[6]
    // Jumper: WEMB[7] WEM_AL[7]
    // Jumper: WEMB[8] WEM_AL[8]
    // Jumper: WEMB[9] WEM_AL[9]
    // Jumper: WEMB[10] WEM_AL[10]
    // Jumper: WEMB[11] WEM_AL[11]
    // Jumper: WEMB[12] WEM_AL[12]
    // Jumper: WEMB[13] WEM_AL[13]
    // Jumper: WEMB[14] WEM_AL[14]
    // Jumper: WEMB[15] WEM_AL[15]
    // Jumper: WEMB[16] WEM_AL[16]
    // Jumper: WEMB[17] WEM_AL[17]
    // Jumper: WEMB[18] WEM_AL[18]
    // Jumper: WEMB[19] WEM_AL[19]
    // Jumper: WEMB[20] WEM_AL[20]
    // Jumper: WEMB[21] WEM_AL[21]
    // Jumper: WEMB[22] WEM_AL[22]
    // Jumper: WEMB[23] WEM_AL[23]
    // Jumper: WEMB[24] WEM_AL[24]
    // Jumper: WEMB[25] WEM_AL[25]
    // Jumper: WEMB[26] WEM_AL[26]
    // Jumper: WEMB[27] WEM_AL[27]
    // Jumper: WEMB[28] WEM_AL[28]
    // Jumper: WEMB[29] WEM_AL[29]
    // Jumper: WEMB[30] WEM_AL[30]
    // Jumper: WEMB[31] WEM_AL[31]
    // Jumper: WEMB[32] WEM_AL[32]
    // Jumper: WEMB[33] WEM_AL[33]
    // Jumper: WEMB[34] WEM_AL[34]
    // Jumper: WEMB[35] WEM_AL[35]
    // Jumper: WEMB[36] WEM_AL[36]
    // Jumper: WEMB[37] WEM_AL[37]
    // Jumper: WEMB[38] WEM_AL[38]
    // Jumper: WEMB[39] WEM_AL[39]

    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_S0 (VDDP[0], VDDPI[0],
        VSS[0], VBP[0], VBN[0], DINB[0], DINB[1], LDIB[0], LDIB[1], Q[0], Q[1],
        WBI[0], WBI[1], WEMB[0], WEMB[1], WTI[0], WTI[1], CB[0], CT[0],
        DIB_LT[0], DIB_LT[1], LOG0, LOG1, LQB[0], LQB[1], RASSB[0], RASSB[1],
        D[0], D[1], DCLKT, DFTBIO[0], DFTBIOB[0], DINB[0], DINB[1], QT[0],
        QT[1], QT[2], QT[3], SE_DB, SE_DT, WEM[0], WEM[1], WEMB[0], WEMB[1],
        YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_S1 (VDDP[1], VDDPI[1],
        VSS[1], VBP[1], VBN[1], DINB[2], DINB[3], LDIB[2], LDIB[3], Q[2], Q[3],
        WBI[2], WBI[3], WEMB[2], WEMB[3], WTI[2], WTI[3], CB[1], CT[1],
        DIB_LT[2], DIB_LT[3], LOG0, LOG1, LQB[2], LQB[3], RASSB[0], RASSB[1],
        D[2], D[3], DCLKT, DFTBIO[1], DFTBIOB[1], DINB[2], DINB[3], QT[4],
        QT[5], QT[6], QT[7], SE_DB, SE_DT, WEM[2], WEM[3], WEMB[2], WEMB[3],
        YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_S2 (VDDP[2], VDDPI[2],
        VSS[2], VBP[2], VBN[2], DINB[4], DINB[5], LDIB[4], LDIB[5], Q[4], Q[5],
        WBI[4], WBI[5], WEMB[4], WEMB[5], WTI[4], WTI[5], CB[2], CT[2],
        DIB_LT[4], DIB_LT[5], LOG0, LOG1, LQB[4], LQB[5], RASSB[0], RASSB[1],
        D[4], D[5], DCLKT, DFTBIO[2], DFTBIOB[2], DINB[4], DINB[5], QT[8],
        QT[9], QT[10], QT[11], SE_DB, SE_DT, WEM[4], WEM[5], WEMB[4], WEMB[5],
        YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_S3 (VDDP[3], VDDPI[3],
        VSS[3], VBP[3], VBN[3], DINB[6], DINB[7], LDIB[6], LDIB[7], Q[6], Q[7],
        WBI[6], WBI[7], WEMB[6], WEMB[7], WTI[6], WTI[7], CB[3], CT[3],
        DIB_LT[6], DIB_LT[7], LOG0, LOG1, LQB[6], LQB[7], RASSB[0], RASSB[1],
        D[6], D[7], DCLKT, DFTBIO[3], DFTBIOB[3], DINB[6], DINB[7], QT[12],
        QT[13], QT[14], QT[15], SE_DB, SE_DT, WEM[6], WEM[7], WEMB[6], WEMB[7],
        YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_S4 (VDDP[4], VDDPI[4],
        VSS[4], VBP[4], VBN[4], DINB[8], DINB[9], LDIB[8], LDIB[9], Q[8], Q[9],
        WBI[8], WBI[9], WEMB[8], WEMB[9], WTI[8], WTI[9], CB[4], CT[4],
        DIB_LT[8], DIB_LT[9], LOG0, LOG1, LQB[8], LQB[9], RASSB[0], RASSB[1],
        D[8], D[9], DCLKT, DFTBIO[4], DFTBIOB[4], DINB[8], DINB[9], QT[16],
        QT[17], QT[18], QT[19], SE_DB, SE_DT, WEM[8], WEM[9], WEMB[8], WEMB[9],
        YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_S5 (VDDP[5], VDDPI[5],
        VSS[5], VBP[5], VBN[5], DINB[10], DINB[11], LDIB[10], LDIB[11], Q[10],
        Q[11], WBI[10], WBI[11], WEMB[10], WEMB[11], WTI[10], WTI[11], CB[5],
        CT[5], DIB_LT[10], DIB_LT[11], LOG0, LOG1, LQB[10], LQB[11], RASSB[0],
        RASSB[1], D[10], D[11], DCLKT, DFTBIO[5], DFTBIOB[5], DINB[10],
        DINB[11], QT[20], QT[21], QT[22], QT[23], SE_DB, SE_DT, WEM[10],
        WEM[11], WEMB[10], WEMB[11], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_S6 (VDDP[6], VDDPI[6],
        VSS[6], VBP[6], VBN[6], DINB[12], DINB[13], LDIB[12], LDIB[13], Q[12],
        Q[13], WBI[12], WBI[13], WEMB[12], WEMB[13], WTI[12], WTI[13], CB[6],
        CT[6], DIB_LT[12], DIB_LT[13], LOG0, LOG1, LQB[12], LQB[13], RASSB[0],
        RASSB[1], D[12], D[13], DCLKT, DFTBIO[6], DFTBIOB[6], DINB[12],
        DINB[13], QT[24], QT[25], QT[26], QT[27], SE_DB, SE_DT, WEM[12],
        WEM[13], WEMB[12], WEMB[13], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_S7 (VDDP[7], VDDPI[7],
        VSS[7], VBP[7], VBN[7], DINB[14], DINB[15], LDIB[14], LDIB[15], Q[14],
        Q[15], WBI[14], WBI[15], WEMB[14], WEMB[15], WTI[14], WTI[15], CB[7],
        CT[7], DIB_LT[14], DIB_LT[15], LOG0, LOG1, LQB[14], LQB[15], RASSB[0],
        RASSB[1], D[14], D[15], DCLKT, DFTBIO[7], DFTBIOB[7], DINB[14],
        DINB[15], QT[28], QT[29], QT[30], QT[31], SE_DB, SE_DT, WEM[14],
        WEM[15], WEMB[14], WEMB[15], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_S8 (VDDP[8], VDDPI[8],
        VSS[8], VBP[8], VBN[8], DINB[16], DINB[17], LDIB[16], LDIB[17], Q[16],
        Q[17], WBI[16], WBI[17], WEMB[16], WEMB[17], WTI[16], WTI[17], CB[8],
        CT[8], DIB_LT[16], DIB_LT[17], LOG0, LOG1, LQB[16], LQB[17], RASSB[0],
        RASSB[1], D[16], D[17], DCLKT, DFTBIO[8], DFTBIOB[8], DINB[16],
        DINB[17], QT[32], QT[33], QT[34], QT[35], SE_DB, SE_DT, WEM[16],
        WEM[17], WEMB[16], WEMB[17], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_S9 (VDDP[9], VDDPI[9],
        VSS[9], VBP[9], VBN[9], DINB[18], DINB[19], LDIB[18], LDIB[19], Q[18],
        Q[19], WBI[18], WBI[19], WEMB[18], WEMB[19], WTI[18], WTI[19], CB[9],
        CT[9], DIB_LT[18], DIB_LT[19], LOG0, LOG1, LQB[18], LQB[19], RASSB[0],
        RASSB[1], D[18], D[19], DCLKT, DFTBIO[9], DFTBIOB[9], DINB[18],
        DINB[19], QT[36], QT[37], QT[38], QT[39], SE_DB, SE_DT, WEM[18],
        WEM[19], WEMB[18], WEMB[19], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_F9 (VDDP[10], VDDPI[10],
        VSS[10], VBP[10], VBN[10], DINB[20], DINB[21], LDIB[20], LDIB[21],
        Q[20], Q[21], WBI[20], WBI[21], WEMB[20], WEMB[21], WTI[20], WTI[21],
        CB[10], CT[10], DIB_LT[20], DIB_LT[21], LOG0, LOG1, LQB[20], LQB[21],
        RASSB[0], RASSB[1], D[20], D[21], DCLKT, DFTBIO[10], DFTBIOB[10],
        DINB[20], DINB[21], QT[40], QT[41], QT[42], QT[43], SE_DB, SE_DT,
        WEM[20], WEM[21], WEMB[20], WEMB[21], YSELB[0], YSELB[1], YSELB[2],
        YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_F8 (VDDP[11], VDDPI[11],
        VSS[11], VBP[11], VBN[11], DINB[22], DINB[23], LDIB[22], LDIB[23],
        Q[22], Q[23], WBI[22], WBI[23], WEMB[22], WEMB[23], WTI[22], WTI[23],
        CB[11], CT[11], DIB_LT[22], DIB_LT[23], LOG0, LOG1, LQB[22], LQB[23],
        RASSB[0], RASSB[1], D[22], D[23], DCLKT, DFTBIO[11], DFTBIOB[11],
        DINB[22], DINB[23], QT[44], QT[45], QT[46], QT[47], SE_DB, SE_DT,
        WEM[22], WEM[23], WEMB[22], WEMB[23], YSELB[0], YSELB[1], YSELB[2],
        YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_F7 (VDDP[12], VDDPI[12],
        VSS[12], VBP[12], VBN[12], DINB[24], DINB[25], LDIB[24], LDIB[25],
        Q[24], Q[25], WBI[24], WBI[25], WEMB[24], WEMB[25], WTI[24], WTI[25],
        CB[12], CT[12], DIB_LT[24], DIB_LT[25], LOG0, LOG1, LQB[24], LQB[25],
        RASSB[0], RASSB[1], D[24], D[25], DCLKT, DFTBIO[12], DFTBIOB[12],
        DINB[24], DINB[25], QT[48], QT[49], QT[50], QT[51], SE_DB, SE_DT,
        WEM[24], WEM[25], WEMB[24], WEMB[25], YSELB[0], YSELB[1], YSELB[2],
        YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_F6 (VDDP[13], VDDPI[13],
        VSS[13], VBP[13], VBN[13], DINB[26], DINB[27], LDIB[26], LDIB[27],
        Q[26], Q[27], WBI[26], WBI[27], WEMB[26], WEMB[27], WTI[26], WTI[27],
        CB[13], CT[13], DIB_LT[26], DIB_LT[27], LOG0, LOG1, LQB[26], LQB[27],
        RASSB[0], RASSB[1], D[26], D[27], DCLKT, DFTBIO[13], DFTBIOB[13],
        DINB[26], DINB[27], QT[52], QT[53], QT[54], QT[55], SE_DB, SE_DT,
        WEM[26], WEM[27], WEMB[26], WEMB[27], YSELB[0], YSELB[1], YSELB[2],
        YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_F5 (VDDP[14], VDDPI[14],
        VSS[14], VBP[14], VBN[14], DINB[28], DINB[29], LDIB[28], LDIB[29],
        Q[28], Q[29], WBI[28], WBI[29], WEMB[28], WEMB[29], WTI[28], WTI[29],
        CB[14], CT[14], DIB_LT[28], DIB_LT[29], LOG0, LOG1, LQB[28], LQB[29],
        RASSB[0], RASSB[1], D[28], D[29], DCLKT, DFTBIO[14], DFTBIOB[14],
        DINB[28], DINB[29], QT[56], QT[57], QT[58], QT[59], SE_DB, SE_DT,
        WEM[28], WEM[29], WEMB[28], WEMB[29], YSELB[0], YSELB[1], YSELB[2],
        YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_F4 (VDDP[15], VDDPI[15],
        VSS[15], VBP[15], VBN[15], DINB[30], DINB[31], LDIB[30], LDIB[31],
        Q[30], Q[31], WBI[30], WBI[31], WEMB[30], WEMB[31], WTI[30], WTI[31],
        CB[15], CT[15], DIB_LT[30], DIB_LT[31], LOG0, LOG1, LQB[30], LQB[31],
        RASSB[0], RASSB[1], D[30], D[31], DCLKT, DFTBIO[15], DFTBIOB[15],
        DINB[30], DINB[31], QT[60], QT[61], QT[62], QT[63], SE_DB, SE_DT,
        WEM[30], WEM[31], WEMB[30], WEMB[31], YSELB[0], YSELB[1], YSELB[2],
        YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_F3 (VDDP[16], VDDPI[16],
        VSS[16], VBP[16], VBN[16], DINB[32], DINB[33], LDIB[32], LDIB[33],
        Q[32], Q[33], WBI[32], WBI[33], WEMB[32], WEMB[33], WTI[32], WTI[33],
        CB[16], CT[16], DIB_LT[32], DIB_LT[33], LOG0, LOG1, LQB[32], LQB[33],
        RASSB[0], RASSB[1], D[32], D[33], DCLKT, DFTBIO[16], DFTBIOB[16],
        DINB[32], DINB[33], QT[64], QT[65], QT[66], QT[67], SE_DB, SE_DT,
        WEM[32], WEM[33], WEMB[32], WEMB[33], YSELB[0], YSELB[1], YSELB[2],
        YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_F2 (VDDP[17], VDDPI[17],
        VSS[17], VBP[17], VBN[17], DINB[34], DINB[35], LDIB[34], LDIB[35],
        Q[34], Q[35], WBI[34], WBI[35], WEMB[34], WEMB[35], WTI[34], WTI[35],
        CB[17], CT[17], DIB_LT[34], DIB_LT[35], LOG0, LOG1, LQB[34], LQB[35],
        RASSB[0], RASSB[1], D[34], D[35], DCLKT, DFTBIO[17], DFTBIOB[17],
        DINB[34], DINB[35], QT[68], QT[69], QT[70], QT[71], SE_DB, SE_DT,
        WEM[34], WEM[35], WEMB[34], WEMB[35], YSELB[0], YSELB[1], YSELB[2],
        YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_F1 (VDDP[18], VDDPI[18],
        VSS[18], VBP[18], VBN[18], DINB[36], DINB[37], LDIB[36], LDIB[37],
        Q[36], Q[37], WBI[36], WBI[37], WEMB[36], WEMB[37], WTI[36], WTI[37],
        CB[18], CT[18], DIB_LT[36], DIB_LT[37], LOG0, LOG1, LQB[36], LQB[37],
        RASSB[0], RASSB[1], D[36], D[37], DCLKT, DFTBIO[18], DFTBIOB[18],
        DINB[36], DINB[37], QT[72], QT[73], QT[74], QT[75], SE_DB, SE_DT,
        WEM[36], WEM[37], WEMB[36], WEMB[37], YSELB[0], YSELB[1], YSELB[2],
        YSELB[3]);
    mm17a04_u_hdrf2p_giom2x2 X_mm17a04_u_hdrf2p_giom2x2_F0 (VDDP[19], VDDPI[19],
        VSS[19], VBP[19], VBN[19], DINB[38], DINB[39], LDIB[38], LDIB[39],
        Q[38], Q[39], WBI[38], WBI[39], WEMB[38], WEMB[39], WTI[38], WTI[39],
        CB[19], CT[19], DIB_LT[38], DIB_LT[39], LOG0, LOG1, LQB[38], LQB[39],
        RASSB[0], RASSB[1], D[38], D[39], DCLKT, DFTBIO[19], DFTBIOB[19],
        DINB[38], DINB[39], QT[76], QT[77], QT[78], QT[79], SE_DB, SE_DT,
        WEM[38], WEM[39], WEMB[38], WEMB[39], YSELB[0], YSELB[1], YSELB[2],
        YSELB[3]);
endmodule

module SNPS_RF_DP_HD_256x80_gio_rt (CB, CT, D, DCLKT, DFTBIO, DFTBIOB, DIB_LT,
       DINB, LDIB, LOG0, LOG1, LQB, PWDO, Q, QT, .RASSB({RASSB[1], RASSB[0]}),
       RERASSB, SE_DB, SE_DT, VBN, VBP, VDDA, VDDP, VDDPI, VEDGE, VSS, WBI, WEM,
       WEMB, WTI, YSELB);
    inout [39:0] CB;
    inout [39:0] CT;
    input [79:0] D;
    input DCLKT;
    input [39:0] DFTBIO;
    input [39:0] DFTBIOB;
    inout [79:0] DIB_LT;
    input [79:0] DINB;
    output [79:0] LDIB;
    inout LOG0;
    inout LOG1;
    inout [79:0] LQB;
    inout PWDO;
    output [79:0] Q;
    input [159:0] QT;
    inout [3:0] RASSB;
    output [1:0] RERASSB;
    wire [3:0] REYSELB;
    input SE_DB;
    input SE_DT;
    inout [41:0] VBN;
    supply0 [41:0] VBN;
    inout [41:0] VBP;
    supply0 [41:0] VBP;
    inout [1:0] VDDA;
    supply1 [1:0] VDDA;
    inout [41:0] VDDP;
    supply1 [41:0] VDDP;
    inout [41:0] VDDPI;
    inout VEDGE;
    inout [41:0] VSS;
    supply0 [41:0] VSS;
    output [79:0] WBI;
    input [79:0] WEM;
    input [79:0] WEMB;
    output [79:0] WTI;
    input [3:0] YSELB;
    SNPS_RF_DP_HD_256x80_gio_rt_seg1 X_gio_rt_seg1_S0
        (.CB({CB[19],CB[18],CB[17],CB[16],CB[15],CB[14],CB[13],CB[12],CB[11],CB[10],CB[9],CB[8],CB[7],CB[6],CB[5],CB[4],CB[3],CB[2],CB[1],CB[0]}),
        .CT({CT[19],CT[18],CT[17],CT[16],CT[15],CT[14],CT[13],CT[12],CT[11],CT[10],CT[9],CT[8],CT[7],CT[6],CT[5],CT[4],CT[3],CT[2],CT[1],CT[0]}),
        .D({D[39],D[38],D[37],D[36],D[35],D[34],D[33],D[32],D[31],D[30],D[29],D[28],D[27],D[26],D[25],D[24],D[23],D[22],D[21],D[20],D[19],D[18],D[17],D[16],D[15],D[14],D[13],D[12],D[11],D[10],D[9],D[8],D[7],D[6],D[5],D[4],D[3],D[2],D[1],D[0]}),
        .DCLKT(DCLKT),
        .DFTBIO({DFTBIO[19],DFTBIO[18],DFTBIO[17],DFTBIO[16],DFTBIO[15],DFTBIO[14],DFTBIO[13],DFTBIO[12],DFTBIO[11],DFTBIO[10],DFTBIO[9],DFTBIO[8],DFTBIO[7],DFTBIO[6],DFTBIO[5],DFTBIO[4],DFTBIO[3],DFTBIO[2],DFTBIO[1],DFTBIO[0]}),
        .DFTBIOB({DFTBIOB[19],DFTBIOB[18],DFTBIOB[17],DFTBIOB[16],DFTBIOB[15],DFTBIOB[14],DFTBIOB[13],DFTBIOB[12],DFTBIOB[11],DFTBIOB[10],DFTBIOB[9],DFTBIOB[8],DFTBIOB[7],DFTBIOB[6],DFTBIOB[5],DFTBIOB[4],DFTBIOB[3],DFTBIOB[2],DFTBIOB[1],DFTBIOB[0]}),
        .DIB_LT({DIB_LT[39],DIB_LT[38],DIB_LT[37],DIB_LT[36],DIB_LT[35],DIB_LT[34],DIB_LT[33],DIB_LT[32],DIB_LT[31],DIB_LT[30],DIB_LT[29],DIB_LT[28],DIB_LT[27],DIB_LT[26],DIB_LT[25],DIB_LT[24],DIB_LT[23],DIB_LT[22],DIB_LT[21],DIB_LT[20],DIB_LT[19],DIB_LT[18],DIB_LT[17],DIB_LT[16],DIB_LT[15],DIB_LT[14],DIB_LT[13],DIB_LT[12],DIB_LT[11],DIB_LT[10],DIB_LT[9],DIB_LT[8],DIB_LT[7],DIB_LT[6],DIB_LT[5],DIB_LT[4],DIB_LT[3],DIB_LT[2],DIB_LT[1],DIB_LT[0]}),
        .DINB({DINB[39],DINB[38],DINB[37],DINB[36],DINB[35],DINB[34],DINB[33],DINB[32],DINB[31],DINB[30],DINB[29],DINB[28],DINB[27],DINB[26],DINB[25],DINB[24],DINB[23],DINB[22],DINB[21],DINB[20],DINB[19],DINB[18],DINB[17],DINB[16],DINB[15],DINB[14],DINB[13],DINB[12],DINB[11],DINB[10],DINB[9],DINB[8],DINB[7],DINB[6],DINB[5],DINB[4],DINB[3],DINB[2],DINB[1],DINB[0]}),
        .LDIB({LDIB[39],LDIB[38],LDIB[37],LDIB[36],LDIB[35],LDIB[34],LDIB[33],LDIB[32],LDIB[31],LDIB[30],LDIB[29],LDIB[28],LDIB[27],LDIB[26],LDIB[25],LDIB[24],LDIB[23],LDIB[22],LDIB[21],LDIB[20],LDIB[19],LDIB[18],LDIB[17],LDIB[16],LDIB[15],LDIB[14],LDIB[13],LDIB[12],LDIB[11],LDIB[10],LDIB[9],LDIB[8],LDIB[7],LDIB[6],LDIB[5],LDIB[4],LDIB[3],LDIB[2],LDIB[1],LDIB[0]}),
        .LOG0(LOG0), .LOG1(LOG1),
        .LQB({LQB[39],LQB[38],LQB[37],LQB[36],LQB[35],LQB[34],LQB[33],LQB[32],LQB[31],LQB[30],LQB[29],LQB[28],LQB[27],LQB[26],LQB[25],LQB[24],LQB[23],LQB[22],LQB[21],LQB[20],LQB[19],LQB[18],LQB[17],LQB[16],LQB[15],LQB[14],LQB[13],LQB[12],LQB[11],LQB[10],LQB[9],LQB[8],LQB[7],LQB[6],LQB[5],LQB[4],LQB[3],LQB[2],LQB[1],LQB[0]}),
        .Q({Q[39],Q[38],Q[37],Q[36],Q[35],Q[34],Q[33],Q[32],Q[31],Q[30],Q[29],Q[28],Q[27],Q[26],Q[25],Q[24],Q[23],Q[22],Q[21],Q[20],Q[19],Q[18],Q[17],Q[16],Q[15],Q[14],Q[13],Q[12],Q[11],Q[10],Q[9],Q[8],Q[7],Q[6],Q[5],Q[4],Q[3],Q[2],Q[1],Q[0]}),
        .QT({QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RASSB({RASSB[1],RASSB[0]}), .SE_DB(SE_DB), .SE_DT(SE_DT),
        .VBN({VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDP({VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VSS({VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WBI({WBI[39],WBI[38],WBI[37],WBI[36],WBI[35],WBI[34],WBI[33],WBI[32],WBI[31],WBI[30],WBI[29],WBI[28],WBI[27],WBI[26],WBI[25],WBI[24],WBI[23],WBI[22],WBI[21],WBI[20],WBI[19],WBI[18],WBI[17],WBI[16],WBI[15],WBI[14],WBI[13],WBI[12],WBI[11],WBI[10],WBI[9],WBI[8],WBI[7],WBI[6],WBI[5],WBI[4],WBI[3],WBI[2],WBI[1],WBI[0]}),
        .WEM({WEM[39],WEM[38],WEM[37],WEM[36],WEM[35],WEM[34],WEM[33],WEM[32],WEM[31],WEM[30],WEM[29],WEM[28],WEM[27],WEM[26],WEM[25],WEM[24],WEM[23],WEM[22],WEM[21],WEM[20],WEM[19],WEM[18],WEM[17],WEM[16],WEM[15],WEM[14],WEM[13],WEM[12],WEM[11],WEM[10],WEM[9],WEM[8],WEM[7],WEM[6],WEM[5],WEM[4],WEM[3],WEM[2],WEM[1],WEM[0]}),
        .WEMB({WEMB[39],WEMB[38],WEMB[37],WEMB[36],WEMB[35],WEMB[34],WEMB[33],WEMB[32],WEMB[31],WEMB[30],WEMB[29],WEMB[28],WEMB[27],WEMB[26],WEMB[25],WEMB[24],WEMB[23],WEMB[22],WEMB[21],WEMB[20],WEMB[19],WEMB[18],WEMB[17],WEMB[16],WEMB[15],WEMB[14],WEMB[13],WEMB[12],WEMB[11],WEMB[10],WEMB[9],WEMB[8],WEMB[7],WEMB[6],WEMB[5],WEMB[4],WEMB[3],WEMB[2],WEMB[1],WEMB[0]}),
        .WTI({WTI[39],WTI[38],WTI[37],WTI[36],WTI[35],WTI[34],WTI[33],WTI[32],WTI[31],WTI[30],WTI[29],WTI[28],WTI[27],WTI[26],WTI[25],WTI[24],WTI[23],WTI[22],WTI[21],WTI[20],WTI[19],WTI[18],WTI[17],WTI[16],WTI[15],WTI[14],WTI[13],WTI[12],WTI[11],WTI[10],WTI[9],WTI[8],WTI[7],WTI[6],WTI[5],WTI[4],WTI[3],WTI[2],WTI[1],WTI[0]}),
        .YSELB({YSELB[3],YSELB[2],YSELB[1],YSELB[0]}));
    mm17a04_u_hdrf2p_gcenrebuf X_mm17a04_u_hdrf2p_gcenrebuf_cm2_cm4 (VDDA[0],
        VDDP[20], VDDPI[20], VSS[20], VBP[20], VBN[20], REDCLKT, RERASSB[0],
        RERASSB[1], RESE_DB, RESE_DT, REYSELB[0], REYSELB[1], REYSELB[2],
        REYSELB[3], LOG0, LOG1, DCLKT, RASSB[0], RASSB[1], SE_DB, SE_DT,
        YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    SNPS_RF_DP_HD_256x80_gio_rt_seg1 X_gio_rt_seg1_F0
        (.CB({CB[39],CB[38],CB[37],CB[36],CB[35],CB[34],CB[33],CB[32],CB[31],CB[30],CB[29],CB[28],CB[27],CB[26],CB[25],CB[24],CB[23],CB[22],CB[21],CB[20]}),
        .CT({CT[39],CT[38],CT[37],CT[36],CT[35],CT[34],CT[33],CT[32],CT[31],CT[30],CT[29],CT[28],CT[27],CT[26],CT[25],CT[24],CT[23],CT[22],CT[21],CT[20]}),
        .D({D[79],D[78],D[77],D[76],D[75],D[74],D[73],D[72],D[71],D[70],D[69],D[68],D[67],D[66],D[65],D[64],D[63],D[62],D[61],D[60],D[59],D[58],D[57],D[56],D[55],D[54],D[53],D[52],D[51],D[50],D[49],D[48],D[47],D[46],D[45],D[44],D[43],D[42],D[41],D[40]}),
        .DCLKT(REDCLKT),
        .DFTBIO({DFTBIO[39],DFTBIO[38],DFTBIO[37],DFTBIO[36],DFTBIO[35],DFTBIO[34],DFTBIO[33],DFTBIO[32],DFTBIO[31],DFTBIO[30],DFTBIO[29],DFTBIO[28],DFTBIO[27],DFTBIO[26],DFTBIO[25],DFTBIO[24],DFTBIO[23],DFTBIO[22],DFTBIO[21],DFTBIO[20]}),
        .DFTBIOB({DFTBIOB[39],DFTBIOB[38],DFTBIOB[37],DFTBIOB[36],DFTBIOB[35],DFTBIOB[34],DFTBIOB[33],DFTBIOB[32],DFTBIOB[31],DFTBIOB[30],DFTBIOB[29],DFTBIOB[28],DFTBIOB[27],DFTBIOB[26],DFTBIOB[25],DFTBIOB[24],DFTBIOB[23],DFTBIOB[22],DFTBIOB[21],DFTBIOB[20]}),
        .DIB_LT({DIB_LT[79],DIB_LT[78],DIB_LT[77],DIB_LT[76],DIB_LT[75],DIB_LT[74],DIB_LT[73],DIB_LT[72],DIB_LT[71],DIB_LT[70],DIB_LT[69],DIB_LT[68],DIB_LT[67],DIB_LT[66],DIB_LT[65],DIB_LT[64],DIB_LT[63],DIB_LT[62],DIB_LT[61],DIB_LT[60],DIB_LT[59],DIB_LT[58],DIB_LT[57],DIB_LT[56],DIB_LT[55],DIB_LT[54],DIB_LT[53],DIB_LT[52],DIB_LT[51],DIB_LT[50],DIB_LT[49],DIB_LT[48],DIB_LT[47],DIB_LT[46],DIB_LT[45],DIB_LT[44],DIB_LT[43],DIB_LT[42],DIB_LT[41],DIB_LT[40]}),
        .DINB({DINB[79],DINB[78],DINB[77],DINB[76],DINB[75],DINB[74],DINB[73],DINB[72],DINB[71],DINB[70],DINB[69],DINB[68],DINB[67],DINB[66],DINB[65],DINB[64],DINB[63],DINB[62],DINB[61],DINB[60],DINB[59],DINB[58],DINB[57],DINB[56],DINB[55],DINB[54],DINB[53],DINB[52],DINB[51],DINB[50],DINB[49],DINB[48],DINB[47],DINB[46],DINB[45],DINB[44],DINB[43],DINB[42],DINB[41],DINB[40]}),
        .LDIB({LDIB[79],LDIB[78],LDIB[77],LDIB[76],LDIB[75],LDIB[74],LDIB[73],LDIB[72],LDIB[71],LDIB[70],LDIB[69],LDIB[68],LDIB[67],LDIB[66],LDIB[65],LDIB[64],LDIB[63],LDIB[62],LDIB[61],LDIB[60],LDIB[59],LDIB[58],LDIB[57],LDIB[56],LDIB[55],LDIB[54],LDIB[53],LDIB[52],LDIB[51],LDIB[50],LDIB[49],LDIB[48],LDIB[47],LDIB[46],LDIB[45],LDIB[44],LDIB[43],LDIB[42],LDIB[41],LDIB[40]}),
        .LOG0(LOG0), .LOG1(LOG1),
        .LQB({LQB[79],LQB[78],LQB[77],LQB[76],LQB[75],LQB[74],LQB[73],LQB[72],LQB[71],LQB[70],LQB[69],LQB[68],LQB[67],LQB[66],LQB[65],LQB[64],LQB[63],LQB[62],LQB[61],LQB[60],LQB[59],LQB[58],LQB[57],LQB[56],LQB[55],LQB[54],LQB[53],LQB[52],LQB[51],LQB[50],LQB[49],LQB[48],LQB[47],LQB[46],LQB[45],LQB[44],LQB[43],LQB[42],LQB[41],LQB[40]}),
        .Q({Q[79],Q[78],Q[77],Q[76],Q[75],Q[74],Q[73],Q[72],Q[71],Q[70],Q[69],Q[68],Q[67],Q[66],Q[65],Q[64],Q[63],Q[62],Q[61],Q[60],Q[59],Q[58],Q[57],Q[56],Q[55],Q[54],Q[53],Q[52],Q[51],Q[50],Q[49],Q[48],Q[47],Q[46],Q[45],Q[44],Q[43],Q[42],Q[41],Q[40]}),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80]}),
        .RASSB({RASSB[3],RASSB[2]}), .SE_DB(RESE_DB), .SE_DT(RESE_DT),
        .VBN({VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21]}),
        .VBP({VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21]}),
        .VDDP({VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21]}),
        .VDDPI({VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21]}),
        .VSS({VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21]}),
        .WBI({WBI[79],WBI[78],WBI[77],WBI[76],WBI[75],WBI[74],WBI[73],WBI[72],WBI[71],WBI[70],WBI[69],WBI[68],WBI[67],WBI[66],WBI[65],WBI[64],WBI[63],WBI[62],WBI[61],WBI[60],WBI[59],WBI[58],WBI[57],WBI[56],WBI[55],WBI[54],WBI[53],WBI[52],WBI[51],WBI[50],WBI[49],WBI[48],WBI[47],WBI[46],WBI[45],WBI[44],WBI[43],WBI[42],WBI[41],WBI[40]}),
        .WEM({WEM[79],WEM[78],WEM[77],WEM[76],WEM[75],WEM[74],WEM[73],WEM[72],WEM[71],WEM[70],WEM[69],WEM[68],WEM[67],WEM[66],WEM[65],WEM[64],WEM[63],WEM[62],WEM[61],WEM[60],WEM[59],WEM[58],WEM[57],WEM[56],WEM[55],WEM[54],WEM[53],WEM[52],WEM[51],WEM[50],WEM[49],WEM[48],WEM[47],WEM[46],WEM[45],WEM[44],WEM[43],WEM[42],WEM[41],WEM[40]}),
        .WEMB({WEMB[79],WEMB[78],WEMB[77],WEMB[76],WEMB[75],WEMB[74],WEMB[73],WEMB[72],WEMB[71],WEMB[70],WEMB[69],WEMB[68],WEMB[67],WEMB[66],WEMB[65],WEMB[64],WEMB[63],WEMB[62],WEMB[61],WEMB[60],WEMB[59],WEMB[58],WEMB[57],WEMB[56],WEMB[55],WEMB[54],WEMB[53],WEMB[52],WEMB[51],WEMB[50],WEMB[49],WEMB[48],WEMB[47],WEMB[46],WEMB[45],WEMB[44],WEMB[43],WEMB[42],WEMB[41],WEMB[40]}),
        .WTI({WTI[79],WTI[78],WTI[77],WTI[76],WTI[75],WTI[74],WTI[73],WTI[72],WTI[71],WTI[70],WTI[69],WTI[68],WTI[67],WTI[66],WTI[65],WTI[64],WTI[63],WTI[62],WTI[61],WTI[60],WTI[59],WTI[58],WTI[57],WTI[56],WTI[55],WTI[54],WTI[53],WTI[52],WTI[51],WTI[50],WTI[49],WTI[48],WTI[47],WTI[46],WTI[45],WTI[44],WTI[43],WTI[42],WTI[41],WTI[40]}),
        .YSELB({REYSELB[3],REYSELB[2],REYSELB[1],REYSELB[0]}));
    mm17a04_u_hdrf2p_capgio X_mm17a04_u_hdrf2p_capgio_cm2_cm4 (VDDA[1],
        VDDP[41], VDDPI[41], VSS[41], VBP[41], VBN[41], LOG0, LOG1, PWDO,
        VEDGE);
endmodule

module SNPS_RF_DP_HD_256x80_gio_row (ARYSD, CB, CENDP, CKGATE_RD, CLKRD, CLKWR,
       CT, D, DEF1_RD, DEF1_WR, DFTBIO, DFTBIOB, DFTCKRD, DFTCKWR, DFT_OR_SERD,
       DFT_OR_SEWR, DIB_LT, DINB, DLYPDB, DLYPW, DSORSD, FAST1_RD, FAST1_WR,
       FAST2_RD, FAST2_WR, FISO, LCLKRDB, LCLKRDT, LCLKWRB, LCLKWRT, LDIB,
       LITESLP, LMERD, LMEWR, LME_GATING_RD, LME_GATING_WR, LOG0, LOG1,
       LOG1RMRD_VDDPI, LOG1RMWR_VDDPI, LOG1_RMRD, LOG1_RMWR, LQB, LRWMEB, LS,
       LWE, LXADRBRD, LXADRBWR, LXADRRD, LXADRWR, LYADRBRD, LYADRBWR, LYADRRD,
       LYADRWR, MCLKRDB, MCLKRDT, MCLKWRB, MCLKWRT, MERD, MEWR, PROCOM, PWDO, Q,
       QT, RA, RASSB_H, RERASSB, RFLOAT, RFLT_RET, RMDEF12_RD_PROCOM00,
       RMDEF12_RD_PROCOM01, RMDEF12_WR_PROCOM00, RMDEF12_WR_PROCOM01, RMERD,
       RMEWR, RMRD, RMTRD, RMTWR, RMWR, RSCEN, RSCIN, RSCLK, RSCOUT, RSCRST,
       RWLCKB, SEDB, SEDT, STRSB, T1TRD, T1TWR, TEST1RD, TEST1WR, TEST_RNM,
       TKEEPB, VBN, VBP, VDDA, VDDP, VDDPI, VEDGE, VSS, WA, WABUF, WBI, WE, WEM,
       WEMB, WFLOAT, WFLT_RET, WP, WPBUF, WTI, XADRRD, XADRWR, YADRRD, YADRWR,
       YCOLRD, YSELRD);
    inout ARYSD;
    inout [39:0] CB;
    inout CENDP;
    output CKGATE_RD;
    input CLKRD;
    input CLKWR;
    inout [39:0] CT;
    input [79:0] D;
    output DEF1_RD;
    output DEF1_WR;
    input [39:0] DFTBIO;
    input [39:0] DFTBIOB;
    input DFTCKRD;
    input DFTCKWR;
    input DFT_OR_SERD;
    input DFT_OR_SEWR;
    inout [79:0] DIB_LT;
    input [79:0] DINB;
    input DLYPDB;
    input DLYPW;
    input DSORSD;
    output FAST1_RD;
    output FAST1_WR;
    output FAST2_RD;
    output FAST2_WR;
    inout FISO;
    inout LCLKRDB;
    inout LCLKRDT;
    output LCLKWRB;
    output LCLKWRT;
    output [79:0] LDIB;
    output LITESLP;
    output LMERD;
    output LMEWR;
    input LME_GATING_RD;
    input LME_GATING_WR;
    inout LOG0;
    inout LOG1;
    inout LOG1RMRD_VDDPI;
    inout LOG1RMWR_VDDPI;
    inout LOG1_RMRD;
    inout LOG1_RMWR;
    inout [79:0] LQB;
    output LRWMEB;
    input LS;
    output LWE;
    output [7:0] LXADRBRD;
    output [7:0] LXADRBWR;
    output [7:0] LXADRRD;
    output [7:0] LXADRWR;
    output [1:0] LYADRBRD;
    output [1:0] LYADRBWR;
    output [1:0] LYADRRD;
    output [1:0] LYADRWR;
    output MCLKRDB;
    output MCLKRDT;
    output MCLKWRB;
    output MCLKWRT;
    input MERD;
    input MEWR;
    input [1:0] PROCOM;
    inout PWDO;
    output [79:0] Q;
    input [159:0] QT;
    input [1:0] RA;
    inout [1:0] RASSB_H;
    output [1:0] RERASSB;
    output RFLOAT;
    input RFLT_RET;
    input [3:0] RMDEF12_RD_PROCOM00;
    input [3:0] RMDEF12_RD_PROCOM01;
    input [3:0] RMDEF12_WR_PROCOM00;
    input [3:0] RMDEF12_WR_PROCOM01;
    input RMERD;
    input RMEWR;
    input [3:0] RMRD;
    output [3:0] RMTRD;
    output [3:0] RMTWR;
    input [3:0] RMWR;
    inout RSCEN;
    inout RSCIN;
    inout RSCLK;
    inout RSCOUT;
    inout RSCRST;
    output RWLCKB;
    input SEDB;
    input SEDT;
    output STRSB;
    output T1TRD;
    output T1TWR;
    input TEST1RD;
    input TEST1WR;
    input TEST_RNM;
    output TKEEPB;
    inout [42:0] VBN;
    supply0 [42:0] VBN;
    inout [42:0] VBP;
    supply0 [42:0] VBP;
    inout [2:0] VDDA;
    supply1 [2:0] VDDA;
    inout [42:0] VDDP;
    supply1 [42:0] VDDP;
    inout [42:0] VDDPI;
    inout VEDGE;
    inout [42:0] VSS;
    supply0 [42:0] VSS;
    input [1:0] WA;
    output [2:0] WABUF;
    output [79:0] WBI;
    input WE;
    input [79:0] WEM;
    input [79:0] WEMB;
    output WFLOAT;
    input WFLT_RET;
    input [2:0] WP;
    output [2:0] WPBUF;
    output [79:0] WTI;
    input [7:0] XADRRD;
    input [7:0] XADRWR;
    input [1:0] YADRRD;
    input [1:0] YADRWR;
    inout [3:0] YCOLRD;
    wire [3:0] YSELB_H;
    output [3:0] YSELRD;
    SNPS_RF_DP_HD_256x80_gio_cnt X_gio_cnt (.ARYSD(ARYSD), .CENDP(CENDP),
        .CKGATE_RD(CKGATE_RD), .CLKRD(CLKRD), .CLKWR(CLKWR), .DCLKT_H(DCLKT_H),
        .DEF1_RD({DEF1_RD}), .DEF1_WR({DEF1_WR}), .DFTCKRD(DFTCKRD),
        .DFTCKWR(DFTCKWR), .DFT_OR_SERD(DFT_OR_SERD), .DFT_OR_SEWR(DFT_OR_SEWR),
        .DLYPDB(DLYPDB), .DLYPW(DLYPW), .DSORSD(DSORSD), .FAST1_RD(FAST1_RD),
        .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD), .FAST2_WR(FAST2_WR),
        .FISO(FISO), .LCLKRDB(LCLKRDB), .LCLKRDT(LCLKRDT), .LCLKWRB(LCLKWRB),
        .LCLKWRT(LCLKWRT), .LITESLP(LITESLP), .LMERD(LMERD), .LMEWR(LMEWR),
        .LME_GATING_RD(LME_GATING_RD), .LME_GATING_WR(LME_GATING_WR),
        .LOG0(LOG0), .LOG1(LOG1), .LOG1RMRD_VDDPI(LOG1RMRD_VDDPI),
        .LOG1RMWR_VDDPI(LOG1RMWR_VDDPI), .LOG1_RMRD(LOG1_RMRD),
        .LOG1_RMWR(LOG1_RMWR), .LRWMEB(LRWMEB), .LS(LS), .LWE(LWE),
        .LXADRBRD({LXADRBRD[7],LXADRBRD[6],LXADRBRD[5],LXADRBRD[4],LXADRBRD[3],LXADRBRD[2],LXADRBRD[1],LXADRBRD[0]}),
        .LXADRBWR({LXADRBWR[7],LXADRBWR[6],LXADRBWR[5],LXADRBWR[4],LXADRBWR[3],LXADRBWR[2],LXADRBWR[1],LXADRBWR[0]}),
        .LXADRRD({LXADRRD[7],LXADRRD[6],LXADRRD[5],LXADRRD[4],LXADRRD[3],LXADRRD[2],LXADRRD[1],LXADRRD[0]}),
        .LXADRWR({LXADRWR[7],LXADRWR[6],LXADRWR[5],LXADRWR[4],LXADRWR[3],LXADRWR[2],LXADRWR[1],LXADRWR[0]}),
        .LYADRBRD({LYADRBRD[1],LYADRBRD[0]}),
        .LYADRBWR({LYADRBWR[1],LYADRBWR[0]}), .LYADRRD({LYADRRD[1],LYADRRD[0]}),
        .LYADRWR({LYADRWR[1],LYADRWR[0]}), .MCLKRDB(MCLKRDB), .MCLKRDT(MCLKRDT),
        .MCLKWRB(MCLKWRB), .MCLKWRT(MCLKWRT), .MERD(MERD), .MEWR(MEWR),
        .PROCOM({PROCOM[1],PROCOM[0]}), .RA({RA[1],RA[0]}),
        .RASSB_H({RASSB_H[1],RASSB_H[0]}), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET),
        .RMDEF12_RD_PROCOM00({RMDEF12_RD_PROCOM00[3],RMDEF12_RD_PROCOM00[2],RMDEF12_RD_PROCOM00[1],RMDEF12_RD_PROCOM00[0]}),
        .RMDEF12_RD_PROCOM01({RMDEF12_RD_PROCOM01[3],RMDEF12_RD_PROCOM01[2],RMDEF12_RD_PROCOM01[1],RMDEF12_RD_PROCOM01[0]}),
        .RMDEF12_WR_PROCOM00({RMDEF12_WR_PROCOM00[3],RMDEF12_WR_PROCOM00[2],RMDEF12_WR_PROCOM00[1],RMDEF12_WR_PROCOM00[0]}),
        .RMDEF12_WR_PROCOM01({RMDEF12_WR_PROCOM01[3],RMDEF12_WR_PROCOM01[2],RMDEF12_WR_PROCOM01[1],RMDEF12_WR_PROCOM01[0]}),
        .RMERD(RMERD), .RMEWR(RMEWR), .RMRD({RMRD[3],RMRD[2],RMRD[1],RMRD[0]}),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}),
        .RMWR({RMWR[3],RMWR[2],RMWR[1],RMWR[0]}), .RSCEN(RSCEN), .RSCIN(RSCIN),
        .RSCLK(RSCLK), .RSCOUT(RSCOUT), .RSCRST(RSCRST), .RWLCKB(RWLCKB),
        .SEDB(SEDB), .SEDT(SEDT), .SE_DB(SE_DB), .SE_DT(SE_DT), .STRSB(STRSB),
        .T1TRD(T1TRD), .T1TWR(T1TWR), .TEST1RD(TEST1RD), .TEST1WR(TEST1WR),
        .TEST_RNM(TEST_RNM), .TKEEPB(TKEEPB), .VBN(VBN[0]), .VBP(VBP[0]),
        .VDDA(VDDA[0]), .VDDP(VDDP[0]), .VDDPI(VDDPI[0]), .VSS(VSS[0]),
        .WA({WA[1],WA[0]}), .WABUF({WABUF[2],WABUF[1],WABUF[0]}), .WE(WE),
        .WFLOAT(WFLOAT), .WFLT_RET(WFLT_RET), .WP({WP[2],WP[1],WP[0]}),
        .WPBUF({WPBUF[2],WPBUF[1],WPBUF[0]}),
        .XADRRD({XADRRD[7],XADRRD[6],XADRRD[5],XADRRD[4],XADRRD[3],XADRRD[2],XADRRD[1],XADRRD[0]}),
        .XADRWR({XADRWR[7],XADRWR[6],XADRWR[5],XADRWR[4],XADRWR[3],XADRWR[2],XADRWR[1],XADRWR[0]}),
        .YADRRD({YADRRD[1],YADRRD[0]}), .YADRWR({YADRWR[1],YADRWR[0]}),
        .YCOLRD({YCOLRD[3],YCOLRD[2],YCOLRD[1],YCOLRD[0]}),
        .YSELB_H({YSELB_H[3],YSELB_H[2],YSELB_H[1],YSELB_H[0]}),
        .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_gio_rt X_gio_rt
        (.CB({CB[39],CB[38],CB[37],CB[36],CB[35],CB[34],CB[33],CB[32],CB[31],CB[30],CB[29],CB[28],CB[27],CB[26],CB[25],CB[24],CB[23],CB[22],CB[21],CB[20],CB[19],CB[18],CB[17],CB[16],CB[15],CB[14],CB[13],CB[12],CB[11],CB[10],CB[9],CB[8],CB[7],CB[6],CB[5],CB[4],CB[3],CB[2],CB[1],CB[0]}),
        .CT({CT[39],CT[38],CT[37],CT[36],CT[35],CT[34],CT[33],CT[32],CT[31],CT[30],CT[29],CT[28],CT[27],CT[26],CT[25],CT[24],CT[23],CT[22],CT[21],CT[20],CT[19],CT[18],CT[17],CT[16],CT[15],CT[14],CT[13],CT[12],CT[11],CT[10],CT[9],CT[8],CT[7],CT[6],CT[5],CT[4],CT[3],CT[2],CT[1],CT[0]}),
        .D({D[79],D[78],D[77],D[76],D[75],D[74],D[73],D[72],D[71],D[70],D[69],D[68],D[67],D[66],D[65],D[64],D[63],D[62],D[61],D[60],D[59],D[58],D[57],D[56],D[55],D[54],D[53],D[52],D[51],D[50],D[49],D[48],D[47],D[46],D[45],D[44],D[43],D[42],D[41],D[40],D[39],D[38],D[37],D[36],D[35],D[34],D[33],D[32],D[31],D[30],D[29],D[28],D[27],D[26],D[25],D[24],D[23],D[22],D[21],D[20],D[19],D[18],D[17],D[16],D[15],D[14],D[13],D[12],D[11],D[10],D[9],D[8],D[7],D[6],D[5],D[4],D[3],D[2],D[1],D[0]}),
        .DCLKT(DCLKT_H),
        .DFTBIO({DFTBIO[39],DFTBIO[38],DFTBIO[37],DFTBIO[36],DFTBIO[35],DFTBIO[34],DFTBIO[33],DFTBIO[32],DFTBIO[31],DFTBIO[30],DFTBIO[29],DFTBIO[28],DFTBIO[27],DFTBIO[26],DFTBIO[25],DFTBIO[24],DFTBIO[23],DFTBIO[22],DFTBIO[21],DFTBIO[20],DFTBIO[19],DFTBIO[18],DFTBIO[17],DFTBIO[16],DFTBIO[15],DFTBIO[14],DFTBIO[13],DFTBIO[12],DFTBIO[11],DFTBIO[10],DFTBIO[9],DFTBIO[8],DFTBIO[7],DFTBIO[6],DFTBIO[5],DFTBIO[4],DFTBIO[3],DFTBIO[2],DFTBIO[1],DFTBIO[0]}),
        .DFTBIOB({DFTBIOB[39],DFTBIOB[38],DFTBIOB[37],DFTBIOB[36],DFTBIOB[35],DFTBIOB[34],DFTBIOB[33],DFTBIOB[32],DFTBIOB[31],DFTBIOB[30],DFTBIOB[29],DFTBIOB[28],DFTBIOB[27],DFTBIOB[26],DFTBIOB[25],DFTBIOB[24],DFTBIOB[23],DFTBIOB[22],DFTBIOB[21],DFTBIOB[20],DFTBIOB[19],DFTBIOB[18],DFTBIOB[17],DFTBIOB[16],DFTBIOB[15],DFTBIOB[14],DFTBIOB[13],DFTBIOB[12],DFTBIOB[11],DFTBIOB[10],DFTBIOB[9],DFTBIOB[8],DFTBIOB[7],DFTBIOB[6],DFTBIOB[5],DFTBIOB[4],DFTBIOB[3],DFTBIOB[2],DFTBIOB[1],DFTBIOB[0]}),
        .DIB_LT({DIB_LT[79],DIB_LT[78],DIB_LT[77],DIB_LT[76],DIB_LT[75],DIB_LT[74],DIB_LT[73],DIB_LT[72],DIB_LT[71],DIB_LT[70],DIB_LT[69],DIB_LT[68],DIB_LT[67],DIB_LT[66],DIB_LT[65],DIB_LT[64],DIB_LT[63],DIB_LT[62],DIB_LT[61],DIB_LT[60],DIB_LT[59],DIB_LT[58],DIB_LT[57],DIB_LT[56],DIB_LT[55],DIB_LT[54],DIB_LT[53],DIB_LT[52],DIB_LT[51],DIB_LT[50],DIB_LT[49],DIB_LT[48],DIB_LT[47],DIB_LT[46],DIB_LT[45],DIB_LT[44],DIB_LT[43],DIB_LT[42],DIB_LT[41],DIB_LT[40],DIB_LT[39],DIB_LT[38],DIB_LT[37],DIB_LT[36],DIB_LT[35],DIB_LT[34],DIB_LT[33],DIB_LT[32],DIB_LT[31],DIB_LT[30],DIB_LT[29],DIB_LT[28],DIB_LT[27],DIB_LT[26],DIB_LT[25],DIB_LT[24],DIB_LT[23],DIB_LT[22],DIB_LT[21],DIB_LT[20],DIB_LT[19],DIB_LT[18],DIB_LT[17],DIB_LT[16],DIB_LT[15],DIB_LT[14],DIB_LT[13],DIB_LT[12],DIB_LT[11],DIB_LT[10],DIB_LT[9],DIB_LT[8],DIB_LT[7],DIB_LT[6],DIB_LT[5],DIB_LT[4],DIB_LT[3],DIB_LT[2],DIB_LT[1],DIB_LT[0]}),
        .DINB({DINB[79],DINB[78],DINB[77],DINB[76],DINB[75],DINB[74],DINB[73],DINB[72],DINB[71],DINB[70],DINB[69],DINB[68],DINB[67],DINB[66],DINB[65],DINB[64],DINB[63],DINB[62],DINB[61],DINB[60],DINB[59],DINB[58],DINB[57],DINB[56],DINB[55],DINB[54],DINB[53],DINB[52],DINB[51],DINB[50],DINB[49],DINB[48],DINB[47],DINB[46],DINB[45],DINB[44],DINB[43],DINB[42],DINB[41],DINB[40],DINB[39],DINB[38],DINB[37],DINB[36],DINB[35],DINB[34],DINB[33],DINB[32],DINB[31],DINB[30],DINB[29],DINB[28],DINB[27],DINB[26],DINB[25],DINB[24],DINB[23],DINB[22],DINB[21],DINB[20],DINB[19],DINB[18],DINB[17],DINB[16],DINB[15],DINB[14],DINB[13],DINB[12],DINB[11],DINB[10],DINB[9],DINB[8],DINB[7],DINB[6],DINB[5],DINB[4],DINB[3],DINB[2],DINB[1],DINB[0]}),
        .LDIB({LDIB[79],LDIB[78],LDIB[77],LDIB[76],LDIB[75],LDIB[74],LDIB[73],LDIB[72],LDIB[71],LDIB[70],LDIB[69],LDIB[68],LDIB[67],LDIB[66],LDIB[65],LDIB[64],LDIB[63],LDIB[62],LDIB[61],LDIB[60],LDIB[59],LDIB[58],LDIB[57],LDIB[56],LDIB[55],LDIB[54],LDIB[53],LDIB[52],LDIB[51],LDIB[50],LDIB[49],LDIB[48],LDIB[47],LDIB[46],LDIB[45],LDIB[44],LDIB[43],LDIB[42],LDIB[41],LDIB[40],LDIB[39],LDIB[38],LDIB[37],LDIB[36],LDIB[35],LDIB[34],LDIB[33],LDIB[32],LDIB[31],LDIB[30],LDIB[29],LDIB[28],LDIB[27],LDIB[26],LDIB[25],LDIB[24],LDIB[23],LDIB[22],LDIB[21],LDIB[20],LDIB[19],LDIB[18],LDIB[17],LDIB[16],LDIB[15],LDIB[14],LDIB[13],LDIB[12],LDIB[11],LDIB[10],LDIB[9],LDIB[8],LDIB[7],LDIB[6],LDIB[5],LDIB[4],LDIB[3],LDIB[2],LDIB[1],LDIB[0]}),
        .LOG0(LOG0), .LOG1(LOG1),
        .LQB({}),
        .PWDO(PWDO),
        .Q({Q[79],Q[78],Q[77],Q[76],Q[75],Q[74],Q[73],Q[72],Q[71],Q[70],Q[69],Q[68],Q[67],Q[66],Q[65],Q[64],Q[63],Q[62],Q[61],Q[60],Q[59],Q[58],Q[57],Q[56],Q[55],Q[54],Q[53],Q[52],Q[51],Q[50],Q[49],Q[48],Q[47],Q[46],Q[45],Q[44],Q[43],Q[42],Q[41],Q[40],Q[39],Q[38],Q[37],Q[36],Q[35],Q[34],Q[33],Q[32],Q[31],Q[30],Q[29],Q[28],Q[27],Q[26],Q[25],Q[24],Q[23],Q[22],Q[21],Q[20],Q[19],Q[18],Q[17],Q[16],Q[15],Q[14],Q[13],Q[12],Q[11],Q[10],Q[9],Q[8],Q[7],Q[6],Q[5],Q[4],Q[3],Q[2],Q[1],Q[0]}),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RASSB({RASSB_H[1],RASSB_H[0]}), .RERASSB({RERASSB[1],RERASSB[0]}),
        .SE_DB(SE_DB), .SE_DT(SE_DT),
        .VBN({VBN[42],VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1]}),
        .VBP({VBP[42],VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1]}),
        .VDDA({VDDA[2],VDDA[1]}),
        .VDDP({VDDP[42],VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1]}),
        .VDDPI({VDDPI[42],VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1]}),
        .VEDGE(VEDGE),
        .VSS({VSS[42],VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1]}),
        .WBI({WBI[79],WBI[78],WBI[77],WBI[76],WBI[75],WBI[74],WBI[73],WBI[72],WBI[71],WBI[70],WBI[69],WBI[68],WBI[67],WBI[66],WBI[65],WBI[64],WBI[63],WBI[62],WBI[61],WBI[60],WBI[59],WBI[58],WBI[57],WBI[56],WBI[55],WBI[54],WBI[53],WBI[52],WBI[51],WBI[50],WBI[49],WBI[48],WBI[47],WBI[46],WBI[45],WBI[44],WBI[43],WBI[42],WBI[41],WBI[40],WBI[39],WBI[38],WBI[37],WBI[36],WBI[35],WBI[34],WBI[33],WBI[32],WBI[31],WBI[30],WBI[29],WBI[28],WBI[27],WBI[26],WBI[25],WBI[24],WBI[23],WBI[22],WBI[21],WBI[20],WBI[19],WBI[18],WBI[17],WBI[16],WBI[15],WBI[14],WBI[13],WBI[12],WBI[11],WBI[10],WBI[9],WBI[8],WBI[7],WBI[6],WBI[5],WBI[4],WBI[3],WBI[2],WBI[1],WBI[0]}),
        .WEM({WEM[79],WEM[78],WEM[77],WEM[76],WEM[75],WEM[74],WEM[73],WEM[72],WEM[71],WEM[70],WEM[69],WEM[68],WEM[67],WEM[66],WEM[65],WEM[64],WEM[63],WEM[62],WEM[61],WEM[60],WEM[59],WEM[58],WEM[57],WEM[56],WEM[55],WEM[54],WEM[53],WEM[52],WEM[51],WEM[50],WEM[49],WEM[48],WEM[47],WEM[46],WEM[45],WEM[44],WEM[43],WEM[42],WEM[41],WEM[40],WEM[39],WEM[38],WEM[37],WEM[36],WEM[35],WEM[34],WEM[33],WEM[32],WEM[31],WEM[30],WEM[29],WEM[28],WEM[27],WEM[26],WEM[25],WEM[24],WEM[23],WEM[22],WEM[21],WEM[20],WEM[19],WEM[18],WEM[17],WEM[16],WEM[15],WEM[14],WEM[13],WEM[12],WEM[11],WEM[10],WEM[9],WEM[8],WEM[7],WEM[6],WEM[5],WEM[4],WEM[3],WEM[2],WEM[1],WEM[0]}),
        .WEMB({}),
        .WTI({}),
        .YSELB({YSELB_H[3],YSELB_H[2],YSELB_H[1],YSELB_H[0]}));
endmodule

module SNPS_RF_DP_HD_256x80_was_cnt (ARYSD, CENDP, CKGATE_RD, DEF1_RD, DEF1_WR,
       FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR, LIOPD, LITESLP, LOG0, LOG1,
       LRWMEB, LXADRBRD, LXADRBWR, LXADRRD, LXADRWR, LYADRBRD, LYADRBWR,
       LYADRRD, LYADRWR, PAARD, PAAWR, PAWR, PBRD, PBWR, PCRD, PCWR, RASSB_H,
       RBLWA, RFLOAT, RFLT_RET, RM3CNT, RMTRD, RMTWR, STCLK, STRSB, T1TRD,
       T1TWR, TKEEPB, VBN, VBP, VDDA, VDDF, VDDP, VDDPI, VSS, WABUF, WAB_H,
       WAPCLK, WAPRCLKB_RET, WAPRCLKB_RET_DEL, WAPRCLKB_RET_DEL_2,
       WAPRCLKB_RET_DEL_4, WAPRCLKB_RET_LCEN, WFLOAT, WFLT_RET, WPBUF, YCOLRD,
       YCOLWR, YSELRD);
    inout ARYSD;
    inout CENDP;
    inout CKGATE_RD;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    input LIOPD;
    inout LITESLP;
    inout [1:0] LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [7:0] LXADRBRD;
    inout [7:0] LXADRBWR;
    inout [7:0] LXADRRD;
    inout [7:0] LXADRWR;
    inout [1:0] LYADRBRD;
    inout [1:0] LYADRBWR;
    inout [1:0] LYADRRD;
    inout [1:0] LYADRWR;
    inout [3:0] PAARD;
    inout [3:0] PAAWR;
    inout [3:0] PAWR;
    inout [3:0] PBRD;
    inout [3:0] PBWR;
    inout [3:0] PCRD;
    inout [3:0] PCWR;
    inout [1:0] RASSB_H;
    input RBLWA;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    input STCLK;
    inout STRSB;
    inout T1TRD;
    inout T1TWR;
    wire [3:0] TAP;
    inout TKEEPB;
    inout [2:0] VBN;
    supply0 [2:0] VBN;
    inout [2:0] VBP;
    supply0 [2:0] VBP;
    inout [2:0] VDDA;
    supply1 [2:0] VDDA;
    inout VDDF;
    supply1 VDDF;
    inout [2:0] VDDP;
    supply1 [2:0] VDDP;
    inout [2:0] VDDPI;
    inout [2:0] VSS;
    supply0 [2:0] VSS;
    inout [2:0] WABUF;
    output [1:0] WAB_H;
    output WAPCLK;
    inout WAPRCLKB_RET;
    inout WAPRCLKB_RET_DEL;
    inout WAPRCLKB_RET_DEL_2;
    inout WAPRCLKB_RET_DEL_4;
    inout WAPRCLKB_RET_LCEN;
    inout WFLOAT;
    inout WFLT_RET;
    input [2:0] WPBUF;
    inout [3:0] YCOLRD;
    inout [3:0] YCOLWR;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: LIOPD LOG0[1]
    // Jumper: PRCKDLY TAP[1]
    // Jumper: VDDA[1] VDDF VDDP[1] VDDPI[1]
    // Jumper: VDDA[2] VDDP[2] VDDPI[2]
    // Jumper: WAPRCLKB_RET_LCEN WAPRCLKB_RET

    mm17a04_u_hdrf2p_lcen_wa_edgel X_mm17a04_u_hdrf2p_lcen_wa_edgel_cm2
        (VDDA[0], VDDP[0], VDDPI[0], VSS[0], VBP[0], VBN[0]);
    mm17a04_u_hdrf2p_lcen_wa X_mm17a04_u_hdrf2p_lcen_wa_cm2 (VDDA[1], VDDF,
        VDDP[1], VDDPI[1], VSS[1], VBP[1], VBN[1], TAP[0], PRCKDLY, TAP[2],
        TAP[3], WAPCLKB, ARYSD, CENDP, CKGATE_RD, DEF1_RD, DEF1_WR, FAST1_RD,
        FAST1_WR, FAST2_RD, FAST2_WR, LITESLP, LOG0[0], LOG1, LRWMEB,
        LXADRBRD[0], LXADRBRD[1], LXADRBRD[2], LXADRBRD[3], LXADRBRD[4],
        LXADRBRD[5], LXADRBRD[6], LXADRBRD[7], LXADRBWR[0], LXADRBWR[1],
        LXADRBWR[2], LXADRBWR[3], LXADRBWR[4], LXADRBWR[5], LXADRBWR[6],
        LXADRBWR[7], LXADRRD[0], LXADRRD[1], LXADRRD[2], LXADRRD[3], LXADRRD[4],
        LXADRRD[5], LXADRRD[6], LXADRRD[7], LXADRWR[0], LXADRWR[1], LXADRWR[2],
        LXADRWR[3], LXADRWR[4], LXADRWR[5], LXADRWR[6], LXADRWR[7], LYADRBRD[0],
        LYADRBRD[1], LYADRBWR[0], LYADRBWR[1], LYADRRD[0], LYADRRD[1],
        LYADRWR[0], LYADRWR[1], PAARD[0], PAARD[1], PAARD[2], PAARD[3],
        PAAWR[0], PAAWR[1], PAAWR[2], PAAWR[3], PAWR[0], PAWR[1], PAWR[2],
        PAWR[3], PBRD[0], PBRD[1], PBRD[2], PBRD[3], PBWR[0], PBWR[1], PBWR[2],
        PBWR[3], PCRD[0], PCRD[1], PCRD[2], PCRD[3], PCWR[0], PCWR[1], PCWR[2],
        PCWR[3], RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2],
        RMTRD[3], RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], STRSB, T1TRD, T1TWR,
        TKEEPB, WABUF[0], WABUF[1], WABUF[2], WAPRCLKB_RET, WAPRCLKB_RET_DEL,
        WAPRCLKB_RET_DEL_2, WAPRCLKB_RET_DEL_4, WAPRCLKB_RET_LCEN, WFLOAT,
        WFLT_RET, YCOLRD[0], YCOLRD[1], YCOLRD[2], YCOLRD[3], YCOLWR[0],
        YCOLWR[1], YCOLWR[2], YCOLWR[3], YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], PRCKDLY, RBLWA, STCLK, WPBUF[0], WPBUF[1], WPBUF[2]);
    mm17a04_u_hdrf2p_lcenbuf_wa X_mm17a04_u_hdrf2p_lcenbuf_wa_cm2 (VDDA[2],
        VDDP[2], VDDPI[2], VSS[2], VBP[2], VBN[2], WAB_H[0], WAB_H[1], WAPCLK,
        LOG0[1], RASSB_H[0], RASSB_H[1], WAPRCLKB_RET, LIOPD, WABUF[0],
        WABUF[1], WAPCLKB);
endmodule

module SNPS_RF_DP_HD_256x80_was_rt_seg1 (BADB, QT, VBN, VBP, VDDA, VDDAI,
       VDDAI_SAC, VDDP, VDDPI, VSS, WAB, WACKB, WAGND, WAPCLK, WBI, WTI);
    inout [19:0] BADB;
    inout [79:0] QT;
    inout [19:0] VBN;
    supply0 [19:0] VBN;
    inout [19:0] VBP;
    supply0 [19:0] VBP;
    inout [19:0] VDDA;
    supply1 [19:0] VDDA;
    inout [19:0] VDDAI;
    inout [19:0] VDDAI_SAC;
    inout VDDP;
    supply1 VDDP;
    inout [19:0] VDDPI;
    inout [19:0] VSS;
    supply0 [19:0] VSS;
    inout [1:0] WAB;
    inout WACKB;
    inout [39:0] WAGND;
    inout WAPCLK;
    inout [39:0] WBI;
    inout [39:0] WTI;

    //*** Jumper Report ***
    // Jumper: VDDP VDDA[0] VDDA[1] VDDA[2] VDDA[3] VDDA[4] VDDA[5] VDDA[6] VDDA[7] VDDA[8] VDDA[9] VDDA[10] VDDA[11] VDDA[12] VDDA[13] VDDA[14] VDDA[15] VDDA[16] VDDA[17] VDDA[18] VDDA[19] VDDPI[0] VDDPI[1] VDDPI[2] VDDPI[3] VDDPI[4] VDDPI[5] VDDPI[6] VDDPI[7] VDDPI[8] VDDPI[9] VDDPI[10] VDDPI[11] VDDPI[12] VDDPI[13] VDDPI[14] VDDPI[15] VDDPI[16] VDDPI[17] VDDPI[18] VDDPI[19]

    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_S0
        (VDDA[0], VDDAI[0], VDDAI_SAC[0], VDDP, VDDPI[0], VSS[0], VBP[0],
        VBN[0], BADB[0], QT[0], QT[1], QT[2], QT[3], WAB[0], WAB[1], WACKB,
        WAGND[0], WAGND[1], WAPCLK, WBI[0], WBI[1], WTI[0], WTI[1]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_S1
        (VDDA[1], VDDAI[1], VDDAI_SAC[1], VDDP, VDDPI[1], VSS[1], VBP[1],
        VBN[1], BADB[1], QT[4], QT[5], QT[6], QT[7], WAB[0], WAB[1], WACKB,
        WAGND[2], WAGND[3], WAPCLK, WBI[2], WBI[3], WTI[2], WTI[3]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_S2
        (VDDA[2], VDDAI[2], VDDAI_SAC[2], VDDP, VDDPI[2], VSS[2], VBP[2],
        VBN[2], BADB[2], QT[8], QT[9], QT[10], QT[11], WAB[0], WAB[1], WACKB,
        WAGND[4], WAGND[5], WAPCLK, WBI[4], WBI[5], WTI[4], WTI[5]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_S3
        (VDDA[3], VDDAI[3], VDDAI_SAC[3], VDDP, VDDPI[3], VSS[3], VBP[3],
        VBN[3], BADB[3], QT[12], QT[13], QT[14], QT[15], WAB[0], WAB[1], WACKB,
        WAGND[6], WAGND[7], WAPCLK, WBI[6], WBI[7], WTI[6], WTI[7]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_S4
        (VDDA[4], VDDAI[4], VDDAI_SAC[4], VDDP, VDDPI[4], VSS[4], VBP[4],
        VBN[4], BADB[4], QT[16], QT[17], QT[18], QT[19], WAB[0], WAB[1], WACKB,
        WAGND[8], WAGND[9], WAPCLK, WBI[8], WBI[9], WTI[8], WTI[9]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_S5
        (VDDA[5], VDDAI[5], VDDAI_SAC[5], VDDP, VDDPI[5], VSS[5], VBP[5],
        VBN[5], BADB[5], QT[20], QT[21], QT[22], QT[23], WAB[0], WAB[1], WACKB,
        WAGND[10], WAGND[11], WAPCLK, WBI[10], WBI[11], WTI[10], WTI[11]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_S6
        (VDDA[6], VDDAI[6], VDDAI_SAC[6], VDDP, VDDPI[6], VSS[6], VBP[6],
        VBN[6], BADB[6], QT[24], QT[25], QT[26], QT[27], WAB[0], WAB[1], WACKB,
        WAGND[12], WAGND[13], WAPCLK, WBI[12], WBI[13], WTI[12], WTI[13]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_S7
        (VDDA[7], VDDAI[7], VDDAI_SAC[7], VDDP, VDDPI[7], VSS[7], VBP[7],
        VBN[7], BADB[7], QT[28], QT[29], QT[30], QT[31], WAB[0], WAB[1], WACKB,
        WAGND[14], WAGND[15], WAPCLK, WBI[14], WBI[15], WTI[14], WTI[15]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_S8
        (VDDA[8], VDDAI[8], VDDAI_SAC[8], VDDP, VDDPI[8], VSS[8], VBP[8],
        VBN[8], BADB[8], QT[32], QT[33], QT[34], QT[35], WAB[0], WAB[1], WACKB,
        WAGND[16], WAGND[17], WAPCLK, WBI[16], WBI[17], WTI[16], WTI[17]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_S9
        (VDDA[9], VDDAI[9], VDDAI_SAC[9], VDDP, VDDPI[9], VSS[9], VBP[9],
        VBN[9], BADB[9], QT[36], QT[37], QT[38], QT[39], WAB[0], WAB[1], WACKB,
        WAGND[18], WAGND[19], WAPCLK, WBI[18], WBI[19], WTI[18], WTI[19]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_F9
        (VDDA[10], VDDAI[10], VDDAI_SAC[10], VDDP, VDDPI[10], VSS[10], VBP[10],
        VBN[10], BADB[10], QT[40], QT[41], QT[42], QT[43], WAB[0], WAB[1],
        WACKB, WAGND[20], WAGND[21], WAPCLK, WBI[20], WBI[21], WTI[20],
        WTI[21]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_F8
        (VDDA[11], VDDAI[11], VDDAI_SAC[11], VDDP, VDDPI[11], VSS[11], VBP[11],
        VBN[11], BADB[11], QT[44], QT[45], QT[46], QT[47], WAB[0], WAB[1],
        WACKB, WAGND[22], WAGND[23], WAPCLK, WBI[22], WBI[23], WTI[22],
        WTI[23]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_F7
        (VDDA[12], VDDAI[12], VDDAI_SAC[12], VDDP, VDDPI[12], VSS[12], VBP[12],
        VBN[12], BADB[12], QT[48], QT[49], QT[50], QT[51], WAB[0], WAB[1],
        WACKB, WAGND[24], WAGND[25], WAPCLK, WBI[24], WBI[25], WTI[24],
        WTI[25]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_F6
        (VDDA[13], VDDAI[13], VDDAI_SAC[13], VDDP, VDDPI[13], VSS[13], VBP[13],
        VBN[13], BADB[13], QT[52], QT[53], QT[54], QT[55], WAB[0], WAB[1],
        WACKB, WAGND[26], WAGND[27], WAPCLK, WBI[26], WBI[27], WTI[26],
        WTI[27]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_F5
        (VDDA[14], VDDAI[14], VDDAI_SAC[14], VDDP, VDDPI[14], VSS[14], VBP[14],
        VBN[14], BADB[14], QT[56], QT[57], QT[58], QT[59], WAB[0], WAB[1],
        WACKB, WAGND[28], WAGND[29], WAPCLK, WBI[28], WBI[29], WTI[28],
        WTI[29]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_F4
        (VDDA[15], VDDAI[15], VDDAI_SAC[15], VDDP, VDDPI[15], VSS[15], VBP[15],
        VBN[15], BADB[15], QT[60], QT[61], QT[62], QT[63], WAB[0], WAB[1],
        WACKB, WAGND[30], WAGND[31], WAPCLK, WBI[30], WBI[31], WTI[30],
        WTI[31]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_F3
        (VDDA[16], VDDAI[16], VDDAI_SAC[16], VDDP, VDDPI[16], VSS[16], VBP[16],
        VBN[16], BADB[16], QT[64], QT[65], QT[66], QT[67], WAB[0], WAB[1],
        WACKB, WAGND[32], WAGND[33], WAPCLK, WBI[32], WBI[33], WTI[32],
        WTI[33]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_F2
        (VDDA[17], VDDAI[17], VDDAI_SAC[17], VDDP, VDDPI[17], VSS[17], VBP[17],
        VBN[17], BADB[17], QT[68], QT[69], QT[70], QT[71], WAB[0], WAB[1],
        WACKB, WAGND[34], WAGND[35], WAPCLK, WBI[34], WBI[35], WTI[34],
        WTI[35]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_F1
        (VDDA[18], VDDAI[18], VDDAI_SAC[18], VDDP, VDDPI[18], VSS[18], VBP[18],
        VBN[18], BADB[18], QT[72], QT[73], QT[74], QT[75], WAB[0], WAB[1],
        WACKB, WAGND[36], WAGND[37], WAPCLK, WBI[36], WBI[37], WTI[36],
        WTI[37]);
    mm17a04_u_hdrf2p_cmux2x2_wa_128 X_mm17a04_u_hdrf2p_cmux2x2_wa_128_F0
        (VDDA[19], VDDAI[19], VDDAI_SAC[19], VDDP, VDDPI[19], VSS[19], VBP[19],
        VBN[19], BADB[19], QT[76], QT[77], QT[78], QT[79], WAB[0], WAB[1],
        WACKB, WAGND[38], WAGND[39], WAPCLK, WBI[38], WBI[39], WTI[38],
        WTI[39]);
endmodule

module SNPS_RF_DP_HD_256x80_was_rt (BADB, LIOPD, LOG0, .LOG1({LOG1[1]}), PGIOI,
       QT, RERASSB, VBN, VBP, VDDA, VDDAIR1, VDDAIR2, VDDAI_SACR1, VDDAI_SACR2,
       VDDP, VDDPI, VEDGE, VSS, WAB, .WACKB({WACKB[0]}), WAGND, WAPCLK, WBI,
       WTI);
    inout [39:0] BADB;
    input LIOPD;
    inout [1:0] LOG0;
    inout [1:0] LOG1;
    inout PGIOI;
    inout [159:0] QT;
    inout [1:0] RERASSB;
    wire [1:0] REWAB;
    inout [41:0] VBN;
    supply0 [41:0] VBN;
    inout [41:0] VBP;
    supply0 [41:0] VBP;
    inout [40:0] VDDA;
    supply1 [40:0] VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout [3:0] VDDP;
    supply1 [3:0] VDDP;
    inout [41:0] VDDPI;
    inout VEDGE;
    inout [41:0] VSS;
    supply0 [41:0] VSS;
    inout [1:0] WAB;
    inout [1:0] WACKB;
    inout [79:0] WAGND;
    inout WAPCLK;
    inout [79:0] WBI;
    inout [79:0] WTI;

    //*** Jumper Report ***
    // Jumper: LIOPD LOG0[0]
    // Jumper: VDDA[20] VDDP[1]
    // Jumper: WACKB[0] REWAPCLK
    // Jumper: WACKB[1] WAPCLK_RET

    SNPS_RF_DP_HD_256x80_was_rt_seg1 X_was_rt_seg1_S0
        (.BADB({BADB[19],BADB[18],BADB[17],BADB[16],BADB[15],BADB[14],BADB[13],BADB[12],BADB[11],BADB[10],BADB[9],BADB[8],BADB[7],BADB[6],BADB[5],BADB[4],BADB[3],BADB[2],BADB[1],BADB[0]}),
        .QT({QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .VBN({VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAI({VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1}),
        .VDDAI_SAC({VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1}),
        .VDDP(VDDP[0]),
        .VDDPI({VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VSS({VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WAB({WAB[1],WAB[0]}), .WACKB(WACKB[0]),
        .WAGND({WAGND[39],WAGND[38],WAGND[37],WAGND[36],WAGND[35],WAGND[34],WAGND[33],WAGND[32],WAGND[31],WAGND[30],WAGND[29],WAGND[28],WAGND[27],WAGND[26],WAGND[25],WAGND[24],WAGND[23],WAGND[22],WAGND[21],WAGND[20],WAGND[19],WAGND[18],WAGND[17],WAGND[16],WAGND[15],WAGND[14],WAGND[13],WAGND[12],WAGND[11],WAGND[10],WAGND[9],WAGND[8],WAGND[7],WAGND[6],WAGND[5],WAGND[4],WAGND[3],WAGND[2],WAGND[1],WAGND[0]}),
        .WAPCLK(WAPCLK),
        .WBI({WBI[39],WBI[38],WBI[37],WBI[36],WBI[35],WBI[34],WBI[33],WBI[32],WBI[31],WBI[30],WBI[29],WBI[28],WBI[27],WBI[26],WBI[25],WBI[24],WBI[23],WBI[22],WBI[21],WBI[20],WBI[19],WBI[18],WBI[17],WBI[16],WBI[15],WBI[14],WBI[13],WBI[12],WBI[11],WBI[10],WBI[9],WBI[8],WBI[7],WBI[6],WBI[5],WBI[4],WBI[3],WBI[2],WBI[1],WBI[0]}),
        .WTI({WTI[39],WTI[38],WTI[37],WTI[36],WTI[35],WTI[34],WTI[33],WTI[32],WTI[31],WTI[30],WTI[29],WTI[28],WTI[27],WTI[26],WTI[25],WTI[24],WTI[23],WTI[22],WTI[21],WTI[20],WTI[19],WTI[18],WTI[17],WTI[16],WTI[15],WTI[14],WTI[13],WTI[12],WTI[11],WTI[10],WTI[9],WTI[8],WTI[7],WTI[6],WTI[5],WTI[4],WTI[3],WTI[2],WTI[1],WTI[0]}));
    mm17a04_u_hdrf2p_lcenrebuf_wa X_mm17a04_u_hdrf2p_lcenrebuf_wa_cm2 (VDDA[20],
        VDDP[1], VDDPI[20], VSS[20], VBP[20], VBN[20], REWAB[0], REWAB[1],
        WACKB[0], WACKB[0], LOG0[0], LOG1[0], RERASSB[0], RERASSB[1], LIOPD,
        WAB[0], WAB[1], WAPCLK);
    SNPS_RF_DP_HD_256x80_was_rt_seg1 X_was_rt_seg1_F0
        (.BADB({BADB[39],BADB[38],BADB[37],BADB[36],BADB[35],BADB[34],BADB[33],BADB[32],BADB[31],BADB[30],BADB[29],BADB[28],BADB[27],BADB[26],BADB[25],BADB[24],BADB[23],BADB[22],BADB[21],BADB[20]}),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80]}),
        .VBN({VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21]}),
        .VBP({VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21]}),
        .VDDA({VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21]}),
        .VDDAI({VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2}),
        .VDDAI_SAC({VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2}),
        .VDDP(VDDP[2]),
        .VDDPI({VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21]}),
        .VSS({VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21]}),
        .WAB({REWAB[1],REWAB[0]}), .WACKB(WACKB[1]),
        .WAGND({WAGND[79],WAGND[78],WAGND[77],WAGND[76],WAGND[75],WAGND[74],WAGND[73],WAGND[72],WAGND[71],WAGND[70],WAGND[69],WAGND[68],WAGND[67],WAGND[66],WAGND[65],WAGND[64],WAGND[63],WAGND[62],WAGND[61],WAGND[60],WAGND[59],WAGND[58],WAGND[57],WAGND[56],WAGND[55],WAGND[54],WAGND[53],WAGND[52],WAGND[51],WAGND[50],WAGND[49],WAGND[48],WAGND[47],WAGND[46],WAGND[45],WAGND[44],WAGND[43],WAGND[42],WAGND[41],WAGND[40]}),
        .WAPCLK(WACKB[0]),
        .WBI({WBI[79],WBI[78],WBI[77],WBI[76],WBI[75],WBI[74],WBI[73],WBI[72],WBI[71],WBI[70],WBI[69],WBI[68],WBI[67],WBI[66],WBI[65],WBI[64],WBI[63],WBI[62],WBI[61],WBI[60],WBI[59],WBI[58],WBI[57],WBI[56],WBI[55],WBI[54],WBI[53],WBI[52],WBI[51],WBI[50],WBI[49],WBI[48],WBI[47],WBI[46],WBI[45],WBI[44],WBI[43],WBI[42],WBI[41],WBI[40]}),
        .WTI({WTI[79],WTI[78],WTI[77],WTI[76],WTI[75],WTI[74],WTI[73],WTI[72],WTI[71],WTI[70],WTI[69],WTI[68],WTI[67],WTI[66],WTI[65],WTI[64],WTI[63],WTI[62],WTI[61],WTI[60],WTI[59],WTI[58],WTI[57],WTI[56],WTI[55],WTI[54],WTI[53],WTI[52],WTI[51],WTI[50],WTI[49],WTI[48],WTI[47],WTI[46],WTI[45],WTI[44],WTI[43],WTI[42],WTI[41],WTI[40]}));
    mm17a04_u_hdrf2p_capmux_wa X_mm17a04_u_hdrf2p_capmux_wa_cm2 (VDDP[3],
        VDDPI[41], VSS[41], VBP[41], VBN[41], WACKB[1], WACKB[1], LOG0[1],
        LOG1[1], PGIOI, VEDGE, WACKB[0]);
endmodule

module SNPS_RF_DP_HD_256x80_was_row (ARYSD, BADB, CENDP, CKGATE_RD, DEF1_RD,
       DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR, LIOPD, LITESLP, LOG0,
       LOG1, LRWMEB, LXADRBRD, LXADRBWR, LXADRRD, LXADRWR, LYADRBRD, LYADRBWR,
       LYADRRD, LYADRWR, PAARD, PAAWR, PAWR, PBRD, PBWR, PCRD, PCWR, PGIOI, QT,
       RASSB_H, RBLWA, RERASSB, RFLOAT, RFLT_RET, RM3CNT, RMTRD, RMTWR, STCLK,
       STRSB, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAIR1, VDDAIR2,
       VDDAI_SACR1, VDDAI_SACR2, VDDF, VDDP, VDDPI, VEDGE, VSS, WABUF, WAGND,
       WAPRCLKB_RET, WAPRCLKB_RET_DEL, WAPRCLKB_RET_DEL_2, WAPRCLKB_RET_DEL_4,
       WAPRCLKB_RET_LCEN, WBI, WFLOAT, WFLT_RET, WPBUF, WTI, YCOLRD, YCOLWR,
       YSELRD);
    inout ARYSD;
    inout [39:0] BADB;
    inout CENDP;
    inout CKGATE_RD;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    input [1:0] LIOPD;
    inout LITESLP;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [7:0] LXADRBRD;
    inout [7:0] LXADRBWR;
    inout [7:0] LXADRRD;
    inout [7:0] LXADRWR;
    inout [1:0] LYADRBRD;
    inout [1:0] LYADRBWR;
    inout [1:0] LYADRRD;
    inout [1:0] LYADRWR;
    inout [3:0] PAARD;
    inout [3:0] PAAWR;
    inout [3:0] PAWR;
    inout [3:0] PBRD;
    inout [3:0] PBWR;
    inout [3:0] PCRD;
    inout [3:0] PCWR;
    inout PGIOI;
    inout [159:0] QT;
    inout [1:0] RASSB_H;
    input RBLWA;
    inout [1:0] RERASSB;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    input STCLK;
    inout STRSB;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VEDGE;
    inout VSS;
    supply0 VSS;
    inout [2:0] WABUF;
    wire [1:0] WAB_H;
    inout [79:0] WAGND;
    inout WAPRCLKB_RET;
    inout WAPRCLKB_RET_DEL;
    inout WAPRCLKB_RET_DEL_2;
    inout WAPRCLKB_RET_DEL_4;
    inout WAPRCLKB_RET_LCEN;
    inout [79:0] WBI;
    inout WFLOAT;
    inout WFLT_RET;
    input [2:0] WPBUF;
    inout [79:0] WTI;
    inout [3:0] YCOLRD;
    inout [3:0] YCOLWR;
    inout [3:0] YSELRD;
    SNPS_RF_DP_HD_256x80_was_cnt X_was_cnt (.ARYSD(ARYSD), .CENDP(CENDP),
        .CKGATE_RD(CKGATE_RD), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LIOPD(LIOPD[0]), .LITESLP(LITESLP),
        .LOG0({LOG0,LOG0}), .LOG1(LOG1), .LRWMEB(LRWMEB),
        .LXADRBRD({LXADRBRD[7],LXADRBRD[6],LXADRBRD[5],LXADRBRD[4],LXADRBRD[3],LXADRBRD[2],LXADRBRD[1],LXADRBRD[0]}),
        .LXADRBWR({LXADRBWR[7],LXADRBWR[6],LXADRBWR[5],LXADRBWR[4],LXADRBWR[3],LXADRBWR[2],LXADRBWR[1],LXADRBWR[0]}),
        .LXADRRD({LXADRRD[7],LXADRRD[6],LXADRRD[5],LXADRRD[4],LXADRRD[3],LXADRRD[2],LXADRRD[1],LXADRRD[0]}),
        .LXADRWR({LXADRWR[7],LXADRWR[6],LXADRWR[5],LXADRWR[4],LXADRWR[3],LXADRWR[2],LXADRWR[1],LXADRWR[0]}),
        .LYADRBRD({LYADRBRD[1],LYADRBRD[0]}),
        .LYADRBWR({LYADRBWR[1],LYADRBWR[0]}), .LYADRRD({LYADRRD[1],LYADRRD[0]}),
        .LYADRWR({LYADRWR[1],LYADRWR[0]}),
        .PAARD({PAARD[3],PAARD[2],PAARD[1],PAARD[0]}),
        .PAAWR({PAAWR[3],PAAWR[2],PAAWR[1],PAAWR[0]}),
        .PAWR({PAWR[3],PAWR[2],PAWR[1],PAWR[0]}),
        .PBRD({PBRD[3],PBRD[2],PBRD[1],PBRD[0]}),
        .PBWR({PBWR[3],PBWR[2],PBWR[1],PBWR[0]}),
        .PCRD({PCRD[3],PCRD[2],PCRD[1],PCRD[0]}),
        .PCWR({PCWR[3],PCWR[2],PCWR[1],PCWR[0]}),
        .RASSB_H({RASSB_H[1],RASSB_H[0]}), .RBLWA(RBLWA), .RFLOAT(RFLOAT),
        .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .STCLK(STCLK),
        .STRSB(STRSB), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN({VBN,VBN,VBN}), .VBP({VBP,VBP,VBP}), .VDDA({VDDA,VDDA,VDDA}),
        .VDDF(VDDF), .VDDP({VDDP,VDDP,VDDP}), .VDDPI({VDDPI,VDDPI,VDDPI}),
        .VSS({VSS,VSS,VSS}), .WABUF({WABUF[2],WABUF[1],WABUF[0]}),
        .WAB_H({WAB_H[1],WAB_H[0]}), .WAPCLK(WAPCLK),
        .WAPRCLKB_RET(WAPRCLKB_RET), .WAPRCLKB_RET_DEL(WAPRCLKB_RET_DEL),
        .WAPRCLKB_RET_DEL_2(WAPRCLKB_RET_DEL_2),
        .WAPRCLKB_RET_DEL_4(WAPRCLKB_RET_DEL_4),
        .WAPRCLKB_RET_LCEN(WAPRCLKB_RET_LCEN), .WFLOAT(WFLOAT),
        .WFLT_RET(WFLT_RET), .WPBUF({WPBUF[2],WPBUF[1],WPBUF[0]}),
        .YCOLRD({YCOLRD[3],YCOLRD[2],YCOLRD[1],YCOLRD[0]}),
        .YCOLWR({YCOLWR[3],YCOLWR[2],YCOLWR[1],YCOLWR[0]}),
        .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_was_rt X_was_rt
        (.BADB({BADB[39],BADB[38],BADB[37],BADB[36],BADB[35],BADB[34],BADB[33],BADB[32],BADB[31],BADB[30],BADB[29],BADB[28],BADB[27],BADB[26],BADB[25],BADB[24],BADB[23],BADB[22],BADB[21],BADB[20],BADB[19],BADB[18],BADB[17],BADB[16],BADB[15],BADB[14],BADB[13],BADB[12],BADB[11],BADB[10],BADB[9],BADB[8],BADB[7],BADB[6],BADB[5],BADB[4],BADB[3],BADB[2],BADB[1],BADB[0]}),
        .LIOPD(LIOPD[1]), .LOG0({LOG0,LOG0}), .LOG1({LOG1}), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN}),
        .VBP({VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP}),
        .VDDA({VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2), .VDDP({VDDP,VDDP,VDDP,VDDP}),
        .VDDPI({VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI}),
        .VEDGE(VEDGE),
        .VSS({VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS}),
        .WAB({WAB_H[1],WAB_H[0]}), .WACKB({WAPRCLKB_RET}),
        .WAGND({WAGND[79],WAGND[78],WAGND[77],WAGND[76],WAGND[75],WAGND[74],WAGND[73],WAGND[72],WAGND[71],WAGND[70],WAGND[69],WAGND[68],WAGND[67],WAGND[66],WAGND[65],WAGND[64],WAGND[63],WAGND[62],WAGND[61],WAGND[60],WAGND[59],WAGND[58],WAGND[57],WAGND[56],WAGND[55],WAGND[54],WAGND[53],WAGND[52],WAGND[51],WAGND[50],WAGND[49],WAGND[48],WAGND[47],WAGND[46],WAGND[45],WAGND[44],WAGND[43],WAGND[42],WAGND[41],WAGND[40],WAGND[39],WAGND[38],WAGND[37],WAGND[36],WAGND[35],WAGND[34],WAGND[33],WAGND[32],WAGND[31],WAGND[30],WAGND[29],WAGND[28],WAGND[27],WAGND[26],WAGND[25],WAGND[24],WAGND[23],WAGND[22],WAGND[21],WAGND[20],WAGND[19],WAGND[18],WAGND[17],WAGND[16],WAGND[15],WAGND[14],WAGND[13],WAGND[12],WAGND[11],WAGND[10],WAGND[9],WAGND[8],WAGND[7],WAGND[6],WAGND[5],WAGND[4],WAGND[3],WAGND[2],WAGND[1],WAGND[0]}),
        .WAPCLK(WAPCLK),
        .WBI({WBI[79],WBI[78],WBI[77],WBI[76],WBI[75],WBI[74],WBI[73],WBI[72],WBI[71],WBI[70],WBI[69],WBI[68],WBI[67],WBI[66],WBI[65],WBI[64],WBI[63],WBI[62],WBI[61],WBI[60],WBI[59],WBI[58],WBI[57],WBI[56],WBI[55],WBI[54],WBI[53],WBI[52],WBI[51],WBI[50],WBI[49],WBI[48],WBI[47],WBI[46],WBI[45],WBI[44],WBI[43],WBI[42],WBI[41],WBI[40],WBI[39],WBI[38],WBI[37],WBI[36],WBI[35],WBI[34],WBI[33],WBI[32],WBI[31],WBI[30],WBI[29],WBI[28],WBI[27],WBI[26],WBI[25],WBI[24],WBI[23],WBI[22],WBI[21],WBI[20],WBI[19],WBI[18],WBI[17],WBI[16],WBI[15],WBI[14],WBI[13],WBI[12],WBI[11],WBI[10],WBI[9],WBI[8],WBI[7],WBI[6],WBI[5],WBI[4],WBI[3],WBI[2],WBI[1],WBI[0]}),
        .WTI({}));
endmodule

module SNPS_RF_DP_HD_256x80_mux_cnt (ARYSD, CENDP, CKGATE_RD, CKGATE_RLCEN_PROG,
       CLKWLB_RD, CLKWLB_RD_HV, CLKWLB_RD_prog, CLKWLB_WR_HV, CLKWLB_WR_prog,
       DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR, LCGTHBUF,
       LCGTL, LCGTV, LITESLP, LOG0, LOG1, LRWMEB, LXADRB, PAARD, PAAWR, PAWR,
       PAWRB, PBRD, PBRDB, PBWR, PBWRB, PCRD, PCRDB, PCWR, PCWRB, PRCHRD,
       PRCHWR, RASSB_H, RBLWA, RDBL, RFLOAT, RFLOAT_RLCEN_PROG, RFLT_RET,
       RM3CNT, RMTRD, RMTWR, STCLK, STCLK_WR_RST_PGM, STRSB, T1TRD, T1TWR,
       TKEEPB, VBN, VBP, VDDA, VDDAPI, VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR,
       VSS, VSSWL, WABUF, WAPRCLKB_RET_LCEN, WCLKRD, WCLKWR, WDBL, WFLOAT,
       WFLT_DEL_A, WFLT_DEL_B, WFLT_RET, WPSGT_H, YCOLWR, YSELRD);
    inout ARYSD;
    inout CENDP;
    input CKGATE_RD;
    input CKGATE_RLCEN_PROG;
    output CLKWLB_RD;
    output CLKWLB_RD_HV;
    input CLKWLB_RD_prog;
    output CLKWLB_WR_HV;
    input CLKWLB_WR_prog;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    output LCGTHBUF;
    inout LCGTL;
    inout LCGTV;
    input LITESLP;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRB;
    wire [3:0] OPT_Y;
    input [3:0] PAARD;
    wire [3:0] PAARD_HV;
    wire [3:0] PAARD_prog;
    input [3:0] PAAWR;
    wire [3:0] PAAWR_HV;
    wire [3:0] PAAWR_prog;
    input [3:0] PAWR;
    output [3:0] PAWRB;
    input [3:0] PBRD;
    output [3:0] PBRDB;
    input [3:0] PBWR;
    output [3:0] PBWRB;
    input [3:0] PCRD;
    output [3:0] PCRDB;
    input [3:0] PCWR;
    output [3:0] PCWRB;
    output PRCHRD;
    output PRCHWR;
    inout [1:0] RASSB_H;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    input RFLOAT_RLCEN_PROG;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    output STCLK;
    input STCLK_WR_RST_PGM;
    input STRSB;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout [2:0] VBN;
    supply0 [2:0] VBN;
    inout [2:0] VBP;
    supply0 [2:0] VBP;
    inout [2:0] VDDA;
    supply1 [2:0] VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout [2:0] VDDP;
    supply1 [2:0] VDDP;
    inout [2:0] VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout [2:0] VSS;
    supply0 [2:0] VSS;
    inout VSSWL;
    input WABUF;
    input WAPRCLKB_RET_LCEN;
    output [3:0] WCLKRD;
    output [3:0] WCLKWR;
    input WDBL;
    inout WFLOAT;
    output WFLT_DEL_A;
    output WFLT_DEL_B;
    output WFLT_RET;
    output [3:0] WPSGT_H;
    input [3:0] YCOLWR;
    inout [3:0] YSELRD;
    wire [3:0] YSELWR_L;
    wire [3:0] YSELWR_R;

    //*** Jumper Report ***
    // Jumper: CKGATE_RLCEN_PROG LOG0
    // Jumper: CLKWLB_RD CLKWLB_RD_prog
    // Jumper: DLY_WRTIMER DLY_WRTIMER_0
    // Jumper: LOG1 RFLOAT_RLCEN_PROG CLPSEBUFB
    // Jumper: PAARD[0] PAARD_prog[0]
    // Jumper: PAARD[1] PAARD_prog[1]
    // Jumper: PAARD[2] PAARD_prog[2]
    // Jumper: PAARD[3] PAARD_prog[3]
    // Jumper: PAAWR[0] PAAWR_prog[0]
    // Jumper: PAAWR[1] PAAWR_prog[1]
    // Jumper: PAAWR[2] PAAWR_prog[2]
    // Jumper: PAAWR[3] PAAWR_prog[3]
    // Jumper: PRCLKWRB_PGM PRCLKWRB_R
    // Jumper: RFLT_RET OPT_RET
    // Jumper: STCLK_WR_RST_PGM WFLT_DEL_B
    // Jumper: VDDA[1] VDDF VDDP[1] VDDPI[1]
    // Jumper: VDDA[2] VDDP[2] VDDPI[2]
    // Jumper: WFLOAT CLKWLB_WR_prog
    // Jumper: YCOLWR[0] OPT_Y[0] OPT_Y[2]
    // Jumper: YCOLWR[1] OPT_Y[1] OPT_Y[3]

    mm17a04_u_hdrf2p_lcen_edgel X_mm17a04_u_hdrf2p_lcen_edgel (VDDA[0], VDDP[0],
        VDDPI[0], VSS[0], VBP[0], VBN[0]);
    mm17a04_u_hdrf2p_lcen X_mm17a04_u_hdrf2p_lcen (VDDA[1], VDDAPI, VDDF,
        VDDP[1], VDDPI[1], VSS[1], VSSWL, VBP[1], VBN[1], CLKWLB_RD,
        CLKWLB_RD_HV, CLKWLB_WR_HV, LCGTL, RFLT_RET, PAWRB[0], PAWRB[1],
        PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3], PBWRB[0],
        PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2], PCRDB[3],
        PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], PRCLKRDB_L, PRCLKRDB_R,
        PRCLKWRB_L, PRCLKWRB_PGM, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3],
        WCLKWR[0], WCLKWR[1], WCLKWR[2], WCLKWR[3], WFLT_DEL_A, WFLT_DEL_B,
        WFLT_RET, STCLK, YSELWR_L[0], YSELWR_L[1], YSELWR_L[2], YSELWR_L[3],
        YSELWR_R[0], YSELWR_R[1], YSELWR_R[2], YSELWR_R[3], ARYSD, CENDP, LOG1,
        DEF1_RD, DEF1_WR, DLY_WRTIMER, DLY_WRTIMER, DLY_WRTIMER_4, FAST1_RD,
        FAST1_WR, FAST2_RD, FAST2_WR, LOG0, LOG1, LRWMEB, LXADRB[0], LXADRB[1],
        LXADRB[2], RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1],
        RMTRD[2], RMTRD[3], RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], T1TRD,
        T1TWR, TKEEPB, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2], YSELRD[3],
        CKGATE_RD, CKGATE_RLCEN_PROG, CLKWLB_RD_prog, CLKWLB_WR_prog, LITESLP,
        YCOLWR[0], YCOLWR[1], YCOLWR[0], YCOLWR[1], PAARD[0], PAARD[1],
        PAARD[2], PAARD[3], PAARD_HV[0], PAARD_HV[1], PAARD_HV[2], PAARD_HV[3],
        PAARD[0], PAARD[1], PAARD[2], PAARD[3], PAAWR[0], PAAWR[1], PAAWR[2],
        PAAWR[3], PAAWR_HV[0], PAAWR_HV[1], PAAWR_HV[2], PAAWR_HV[3], PAAWR[0],
        PAAWR[1], PAAWR[2], PAAWR[3], PAWR[0], PAWR[1], PAWR[2], PAWR[3],
        PBRD[0], PBRD[1], PBRD[2], PBRD[3], PBWR[0], PBWR[1], PBWR[2], PBWR[3],
        PCRD[0], PCRD[1], PCRD[2], PCRD[3], PCWR[0], PCWR[1], PCWR[2], PCWR[3],
        RFLOAT_RLCEN_PROG, STCLK_WR_RST_PGM, STRSB, WABUF, WAPRCLKB_RET_LCEN,
        WDBL, YCOLWR[0], YCOLWR[1], YCOLWR[2], YCOLWR[3]);
    mm17a04_u_hdrf2p_lcenbuf X_mm17a04_u_hdrf2p_lcenbuf (VDDA[2], VDDP[2],
        VDDPI[2], VDDWL_RD, VDDWL_WR, VSS[2], VBP[2], VBN[2], LCGTHBUF, LCGTVB,
        PRCHRD, PRCHWR, PRCLKWRB_DLY2, PRCLKWRB_DLY4, WPSGT_H[0], WPSGT_H[1],
        WPSGT_H[2], WPSGT_H[3], LCGTV, LOG1, RASSB_H[0], RASSB_H[1], LCGTL,
        PRCLKRDB_R, PRCLKWRB_PGM, PRCLKWRB_PGM, YSELWR_R[0], YSELWR_R[1],
        YSELWR_R[2], YSELWR_R[3]);
endmodule

module SNPS_RF_DP_HD_256x80_mux_rt_seg1 (LCGTHBUF, LOG1, PRCHRD, PRCHWR, QT,
       VBN, VBP, VDDA, VDDAI, VDDAI_SAC, VDDP, VDDPI, VSS, WAGND, WBI, WBLB,
       WBLT, WPSGT, WTI);
    wire [19:0] BADB;
    inout LCGTHBUF;
    inout LOG1;
    input PRCHRD;
    input PRCHWR;
    inout [79:0] QT;
    inout [19:0] VBN;
    supply0 [19:0] VBN;
    inout [19:0] VBP;
    supply0 [19:0] VBP;
    inout [19:0] VDDA;
    supply1 [19:0] VDDA;
    inout [19:0] VDDAI;
    inout [19:0] VDDAI_SAC;
    inout [19:0] VDDP;
    supply1 [19:0] VDDP;
    inout [19:0] VDDPI;
    inout [19:0] VSS;
    supply0 [19:0] VSS;
    inout [39:0] WAGND;
    input [39:0] WBI;
    inout [79:0] WBLB;
    inout [79:0] WBLT;
    input [3:0] WPSGT;
    input [39:0] WTI;

    //*** Jumper Report ***
    // Jumper: VDDA[0] VDDP[0] VDDPI[0]
    // Jumper: VDDA[1] VDDP[1] VDDPI[1]
    // Jumper: VDDA[2] VDDP[2] VDDPI[2]
    // Jumper: VDDA[3] VDDP[3] VDDPI[3]
    // Jumper: VDDA[4] VDDP[4] VDDPI[4]
    // Jumper: VDDA[5] VDDP[5] VDDPI[5]
    // Jumper: VDDA[6] VDDP[6] VDDPI[6]
    // Jumper: VDDA[7] VDDP[7] VDDPI[7]
    // Jumper: VDDA[8] VDDP[8] VDDPI[8]
    // Jumper: VDDA[9] VDDP[9] VDDPI[9]
    // Jumper: VDDA[10] VDDP[10] VDDPI[10]
    // Jumper: VDDA[11] VDDP[11] VDDPI[11]
    // Jumper: VDDA[12] VDDP[12] VDDPI[12]
    // Jumper: VDDA[13] VDDP[13] VDDPI[13]
    // Jumper: VDDA[14] VDDP[14] VDDPI[14]
    // Jumper: VDDA[15] VDDP[15] VDDPI[15]
    // Jumper: VDDA[16] VDDP[16] VDDPI[16]
    // Jumper: VDDA[17] VDDP[17] VDDPI[17]
    // Jumper: VDDA[18] VDDP[18] VDDPI[18]
    // Jumper: VDDA[19] VDDP[19] VDDPI[19]

    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_S0 (VDDA[0],
        VDDAI[0], VDDAI_SAC[0], VDDP[0], VDDPI[0], VSS[0], VBP[0], VBN[0],
        BADB[0], LCGTHBUF, LOG1, QT[0], QT[1], QT[2], QT[3], WAGND[0], WAGND[1],
        WBLB[0], WBLB[1], WBLB[2], WBLB[3], WBLT[0], WBLT[1], WBLT[2], WBLT[3],
        PRCHRD, PRCHWR, WBI[0], WBI[1], WPSGT[0], WPSGT[1], WPSGT[2], WPSGT[3],
        WTI[0], WTI[1]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_S1 (VDDA[1],
        VDDAI[1], VDDAI_SAC[1], VDDP[1], VDDPI[1], VSS[1], VBP[1], VBN[1],
        BADB[1], LCGTHBUF, LOG1, QT[4], QT[5], QT[6], QT[7], WAGND[2], WAGND[3],
        WBLB[4], WBLB[5], WBLB[6], WBLB[7], WBLT[4], WBLT[5], WBLT[6], WBLT[7],
        PRCHRD, PRCHWR, WBI[2], WBI[3], WPSGT[0], WPSGT[1], WPSGT[2], WPSGT[3],
        WTI[2], WTI[3]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_S2 (VDDA[2],
        VDDAI[2], VDDAI_SAC[2], VDDP[2], VDDPI[2], VSS[2], VBP[2], VBN[2],
        BADB[2], LCGTHBUF, LOG1, QT[8], QT[9], QT[10], QT[11], WAGND[4],
        WAGND[5], WBLB[8], WBLB[9], WBLB[10], WBLB[11], WBLT[8], WBLT[9],
        WBLT[10], WBLT[11], PRCHRD, PRCHWR, WBI[4], WBI[5], WPSGT[0], WPSGT[1],
        WPSGT[2], WPSGT[3], WTI[4], WTI[5]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_S3 (VDDA[3],
        VDDAI[3], VDDAI_SAC[3], VDDP[3], VDDPI[3], VSS[3], VBP[3], VBN[3],
        BADB[3], LCGTHBUF, LOG1, QT[12], QT[13], QT[14], QT[15], WAGND[6],
        WAGND[7], WBLB[12], WBLB[13], WBLB[14], WBLB[15], WBLT[12], WBLT[13],
        WBLT[14], WBLT[15], PRCHRD, PRCHWR, WBI[6], WBI[7], WPSGT[0], WPSGT[1],
        WPSGT[2], WPSGT[3], WTI[6], WTI[7]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_S4 (VDDA[4],
        VDDAI[4], VDDAI_SAC[4], VDDP[4], VDDPI[4], VSS[4], VBP[4], VBN[4],
        BADB[4], LCGTHBUF, LOG1, QT[16], QT[17], QT[18], QT[19], WAGND[8],
        WAGND[9], WBLB[16], WBLB[17], WBLB[18], WBLB[19], WBLT[16], WBLT[17],
        WBLT[18], WBLT[19], PRCHRD, PRCHWR, WBI[8], WBI[9], WPSGT[0], WPSGT[1],
        WPSGT[2], WPSGT[3], WTI[8], WTI[9]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_S5 (VDDA[5],
        VDDAI[5], VDDAI_SAC[5], VDDP[5], VDDPI[5], VSS[5], VBP[5], VBN[5],
        BADB[5], LCGTHBUF, LOG1, QT[20], QT[21], QT[22], QT[23], WAGND[10],
        WAGND[11], WBLB[20], WBLB[21], WBLB[22], WBLB[23], WBLT[20], WBLT[21],
        WBLT[22], WBLT[23], PRCHRD, PRCHWR, WBI[10], WBI[11], WPSGT[0],
        WPSGT[1], WPSGT[2], WPSGT[3], WTI[10], WTI[11]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_S6 (VDDA[6],
        VDDAI[6], VDDAI_SAC[6], VDDP[6], VDDPI[6], VSS[6], VBP[6], VBN[6],
        BADB[6], LCGTHBUF, LOG1, QT[24], QT[25], QT[26], QT[27], WAGND[12],
        WAGND[13], WBLB[24], WBLB[25], WBLB[26], WBLB[27], WBLT[24], WBLT[25],
        WBLT[26], WBLT[27], PRCHRD, PRCHWR, WBI[12], WBI[13], WPSGT[0],
        WPSGT[1], WPSGT[2], WPSGT[3], WTI[12], WTI[13]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_S7 (VDDA[7],
        VDDAI[7], VDDAI_SAC[7], VDDP[7], VDDPI[7], VSS[7], VBP[7], VBN[7],
        BADB[7], LCGTHBUF, LOG1, QT[28], QT[29], QT[30], QT[31], WAGND[14],
        WAGND[15], WBLB[28], WBLB[29], WBLB[30], WBLB[31], WBLT[28], WBLT[29],
        WBLT[30], WBLT[31], PRCHRD, PRCHWR, WBI[14], WBI[15], WPSGT[0],
        WPSGT[1], WPSGT[2], WPSGT[3], WTI[14], WTI[15]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_S8 (VDDA[8],
        VDDAI[8], VDDAI_SAC[8], VDDP[8], VDDPI[8], VSS[8], VBP[8], VBN[8],
        BADB[8], LCGTHBUF, LOG1, QT[32], QT[33], QT[34], QT[35], WAGND[16],
        WAGND[17], WBLB[32], WBLB[33], WBLB[34], WBLB[35], WBLT[32], WBLT[33],
        WBLT[34], WBLT[35], PRCHRD, PRCHWR, WBI[16], WBI[17], WPSGT[0],
        WPSGT[1], WPSGT[2], WPSGT[3], WTI[16], WTI[17]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_S9 (VDDA[9],
        VDDAI[9], VDDAI_SAC[9], VDDP[9], VDDPI[9], VSS[9], VBP[9], VBN[9],
        BADB[9], LCGTHBUF, LOG1, QT[36], QT[37], QT[38], QT[39], WAGND[18],
        WAGND[19], WBLB[36], WBLB[37], WBLB[38], WBLB[39], WBLT[36], WBLT[37],
        WBLT[38], WBLT[39], PRCHRD, PRCHWR, WBI[18], WBI[19], WPSGT[0],
        WPSGT[1], WPSGT[2], WPSGT[3], WTI[18], WTI[19]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_F9 (VDDA[10],
        VDDAI[10], VDDAI_SAC[10], VDDP[10], VDDPI[10], VSS[10], VBP[10],
        VBN[10], BADB[10], LCGTHBUF, LOG1, QT[40], QT[41], QT[42], QT[43],
        WAGND[20], WAGND[21], WBLB[40], WBLB[41], WBLB[42], WBLB[43], WBLT[40],
        WBLT[41], WBLT[42], WBLT[43], PRCHRD, PRCHWR, WBI[20], WBI[21],
        WPSGT[0], WPSGT[1], WPSGT[2], WPSGT[3], WTI[20], WTI[21]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_F8 (VDDA[11],
        VDDAI[11], VDDAI_SAC[11], VDDP[11], VDDPI[11], VSS[11], VBP[11],
        VBN[11], BADB[11], LCGTHBUF, LOG1, QT[44], QT[45], QT[46], QT[47],
        WAGND[22], WAGND[23], WBLB[44], WBLB[45], WBLB[46], WBLB[47], WBLT[44],
        WBLT[45], WBLT[46], WBLT[47], PRCHRD, PRCHWR, WBI[22], WBI[23],
        WPSGT[0], WPSGT[1], WPSGT[2], WPSGT[3], WTI[22], WTI[23]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_F7 (VDDA[12],
        VDDAI[12], VDDAI_SAC[12], VDDP[12], VDDPI[12], VSS[12], VBP[12],
        VBN[12], BADB[12], LCGTHBUF, LOG1, QT[48], QT[49], QT[50], QT[51],
        WAGND[24], WAGND[25], WBLB[48], WBLB[49], WBLB[50], WBLB[51], WBLT[48],
        WBLT[49], WBLT[50], WBLT[51], PRCHRD, PRCHWR, WBI[24], WBI[25],
        WPSGT[0], WPSGT[1], WPSGT[2], WPSGT[3], WTI[24], WTI[25]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_F6 (VDDA[13],
        VDDAI[13], VDDAI_SAC[13], VDDP[13], VDDPI[13], VSS[13], VBP[13],
        VBN[13], BADB[13], LCGTHBUF, LOG1, QT[52], QT[53], QT[54], QT[55],
        WAGND[26], WAGND[27], WBLB[52], WBLB[53], WBLB[54], WBLB[55], WBLT[52],
        WBLT[53], WBLT[54], WBLT[55], PRCHRD, PRCHWR, WBI[26], WBI[27],
        WPSGT[0], WPSGT[1], WPSGT[2], WPSGT[3], WTI[26], WTI[27]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_F5 (VDDA[14],
        VDDAI[14], VDDAI_SAC[14], VDDP[14], VDDPI[14], VSS[14], VBP[14],
        VBN[14], BADB[14], LCGTHBUF, LOG1, QT[56], QT[57], QT[58], QT[59],
        WAGND[28], WAGND[29], WBLB[56], WBLB[57], WBLB[58], WBLB[59], WBLT[56],
        WBLT[57], WBLT[58], WBLT[59], PRCHRD, PRCHWR, WBI[28], WBI[29],
        WPSGT[0], WPSGT[1], WPSGT[2], WPSGT[3], WTI[28], WTI[29]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_F4 (VDDA[15],
        VDDAI[15], VDDAI_SAC[15], VDDP[15], VDDPI[15], VSS[15], VBP[15],
        VBN[15], BADB[15], LCGTHBUF, LOG1, QT[60], QT[61], QT[62], QT[63],
        WAGND[30], WAGND[31], WBLB[60], WBLB[61], WBLB[62], WBLB[63], WBLT[60],
        WBLT[61], WBLT[62], WBLT[63], PRCHRD, PRCHWR, WBI[30], WBI[31],
        WPSGT[0], WPSGT[1], WPSGT[2], WPSGT[3], WTI[30], WTI[31]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_F3 (VDDA[16],
        VDDAI[16], VDDAI_SAC[16], VDDP[16], VDDPI[16], VSS[16], VBP[16],
        VBN[16], BADB[16], LCGTHBUF, LOG1, QT[64], QT[65], QT[66], QT[67],
        WAGND[32], WAGND[33], WBLB[64], WBLB[65], WBLB[66], WBLB[67], WBLT[64],
        WBLT[65], WBLT[66], WBLT[67], PRCHRD, PRCHWR, WBI[32], WBI[33],
        WPSGT[0], WPSGT[1], WPSGT[2], WPSGT[3], WTI[32], WTI[33]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_F2 (VDDA[17],
        VDDAI[17], VDDAI_SAC[17], VDDP[17], VDDPI[17], VSS[17], VBP[17],
        VBN[17], BADB[17], LCGTHBUF, LOG1, QT[68], QT[69], QT[70], QT[71],
        WAGND[34], WAGND[35], WBLB[68], WBLB[69], WBLB[70], WBLB[71], WBLT[68],
        WBLT[69], WBLT[70], WBLT[71], PRCHRD, PRCHWR, WBI[34], WBI[35],
        WPSGT[0], WPSGT[1], WPSGT[2], WPSGT[3], WTI[34], WTI[35]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_F1 (VDDA[18],
        VDDAI[18], VDDAI_SAC[18], VDDP[18], VDDPI[18], VSS[18], VBP[18],
        VBN[18], BADB[18], LCGTHBUF, LOG1, QT[72], QT[73], QT[74], QT[75],
        WAGND[36], WAGND[37], WBLB[72], WBLB[73], WBLB[74], WBLB[75], WBLT[72],
        WBLT[73], WBLT[74], WBLT[75], PRCHRD, PRCHWR, WBI[36], WBI[37],
        WPSGT[0], WPSGT[1], WPSGT[2], WPSGT[3], WTI[36], WTI[37]);
    mm17a04_u_hdrf2p_wr_cmux2x2 X_mm17a04_u_hdrf2p_wr_cmux2x2_F0 (VDDA[19],
        VDDAI[19], VDDAI_SAC[19], VDDP[19], VDDPI[19], VSS[19], VBP[19],
        VBN[19], BADB[19], LCGTHBUF, LOG1, QT[76], QT[77], QT[78], QT[79],
        WAGND[38], WAGND[39], WBLB[76], WBLB[77], WBLB[78], WBLB[79], WBLT[76],
        WBLT[77], WBLT[78], WBLT[79], PRCHRD, PRCHWR, WBI[38], WBI[39],
        WPSGT[0], WPSGT[1], WPSGT[2], WPSGT[3], WTI[38], WTI[39]);
endmodule

module SNPS_RF_DP_HD_256x80_mux_rt (LCGTHBUF, LCGTV, LOG0, LOG1, PGIOI, PRCHRD,
       PRCHWR, QT, RERASSB, VBN, VBP, VDDA, VDDAIR1, VDDAIR2, VDDAI_SACR1,
       VDDAI_SACR2, VDDP, VDDPI, VDDWL_RD_REBUF, VDDWL_WR_REBUF, VEDGE, VSS,
       WAGND, WBI, WBLB, WBLT, WL_VSS, WPSGT, WTI);
    inout LCGTHBUF;
    inout LCGTV;
    inout LOG0;
    inout [1:0] LOG1;
    inout PGIOI;
    input PRCHRD;
    input PRCHWR;
    inout [159:0] QT;
    inout [1:0] RERASSB;
    wire [3:0] REWPSGT;
    inout [41:0] VBN;
    supply0 [41:0] VBN;
    inout [41:0] VBP;
    supply0 [41:0] VBP;
    inout [41:0] VDDA;
    supply1 [41:0] VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout [41:0] VDDP;
    supply1 [41:0] VDDP;
    inout [41:0] VDDPI;
    inout VDDWL_RD_REBUF;
    inout VDDWL_WR_REBUF;
    inout VEDGE;
    inout [41:0] VSS;
    supply0 [41:0] VSS;
    inout [79:0] WAGND;
    input [79:0] WBI;
    inout [159:0] WBLB;
    inout [159:0] WBLT;
    inout WL_VSS;
    input [3:0] WPSGT;
    input [79:0] WTI;
    SNPS_RF_DP_HD_256x80_mux_rt_seg1 X_mux_rt_seg1_S0 (.LCGTHBUF(LCGTHBUF),
        .LOG1(LOG1[0]), .PRCHRD(PRCHRD), .PRCHWR(PRCHWR),
        .QT({QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .VBN({VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAI({VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1}),
        .VDDAI_SAC({VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1}),
        .VDDP({VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VSS({VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WAGND({WAGND[39],WAGND[38],WAGND[37],WAGND[36],WAGND[35],WAGND[34],WAGND[33],WAGND[32],WAGND[31],WAGND[30],WAGND[29],WAGND[28],WAGND[27],WAGND[26],WAGND[25],WAGND[24],WAGND[23],WAGND[22],WAGND[21],WAGND[20],WAGND[19],WAGND[18],WAGND[17],WAGND[16],WAGND[15],WAGND[14],WAGND[13],WAGND[12],WAGND[11],WAGND[10],WAGND[9],WAGND[8],WAGND[7],WAGND[6],WAGND[5],WAGND[4],WAGND[3],WAGND[2],WAGND[1],WAGND[0]}),
        .WBI({WBI[39],WBI[38],WBI[37],WBI[36],WBI[35],WBI[34],WBI[33],WBI[32],WBI[31],WBI[30],WBI[29],WBI[28],WBI[27],WBI[26],WBI[25],WBI[24],WBI[23],WBI[22],WBI[21],WBI[20],WBI[19],WBI[18],WBI[17],WBI[16],WBI[15],WBI[14],WBI[13],WBI[12],WBI[11],WBI[10],WBI[9],WBI[8],WBI[7],WBI[6],WBI[5],WBI[4],WBI[3],WBI[2],WBI[1],WBI[0]}),
        .WBLB({}),
        .WBLT({}),
        .WPSGT({WPSGT[3],WPSGT[2],WPSGT[1],WPSGT[0]}),
        .WTI({WTI[39],WTI[38],WTI[37],WTI[36],WTI[35],WTI[34],WTI[33],WTI[32],WTI[31],WTI[30],WTI[29],WTI[28],WTI[27],WTI[26],WTI[25],WTI[24],WTI[23],WTI[22],WTI[21],WTI[20],WTI[19],WTI[18],WTI[17],WTI[16],WTI[15],WTI[14],WTI[13],WTI[12],WTI[11],WTI[10],WTI[9],WTI[8],WTI[7],WTI[6],WTI[5],WTI[4],WTI[3],WTI[2],WTI[1],WTI[0]}));
    mm17a04_u_hdrf2p_lcenrebuf X_mm17a04_u_hdrf2p_lcenrebuf (VDDA[20], VDDP[20],
        VDDPI[20], VDDWL_RD_REBUF, VDDWL_WR_REBUF, VSS[20], VBP[20], VBN[20],
        RELCGTH, REPRCHRD, REPRCHWR, REWPSGT[0], REWPSGT[1], REWPSGT[2],
        REWPSGT[3], LCGTV, RERASSB[0], RERASSB[1], WL_VSS, LCGTHBUF, PRCHRD,
        PRCHWR, WPSGT[0], WPSGT[1], WPSGT[2], WPSGT[3]);
    SNPS_RF_DP_HD_256x80_mux_rt_seg1 X_mux_rt_seg1_F0 (.LCGTHBUF(RELCGTH),
        .LOG1(LOG1[1]), .PRCHRD(REPRCHRD), .PRCHWR(REPRCHWR),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80]}),
        .VBN({VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21]}),
        .VBP({VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21]}),
        .VDDA({VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21]}),
        .VDDAI({VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2}),
        .VDDAI_SAC({VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2}),
        .VDDP({VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21]}),
        .VDDPI({VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21]}),
        .VSS({VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21]}),
        .WAGND({WAGND[79],WAGND[78],WAGND[77],WAGND[76],WAGND[75],WAGND[74],WAGND[73],WAGND[72],WAGND[71],WAGND[70],WAGND[69],WAGND[68],WAGND[67],WAGND[66],WAGND[65],WAGND[64],WAGND[63],WAGND[62],WAGND[61],WAGND[60],WAGND[59],WAGND[58],WAGND[57],WAGND[56],WAGND[55],WAGND[54],WAGND[53],WAGND[52],WAGND[51],WAGND[50],WAGND[49],WAGND[48],WAGND[47],WAGND[46],WAGND[45],WAGND[44],WAGND[43],WAGND[42],WAGND[41],WAGND[40]}),
        .WBI({WBI[79],WBI[78],WBI[77],WBI[76],WBI[75],WBI[74],WBI[73],WBI[72],WBI[71],WBI[70],WBI[69],WBI[68],WBI[67],WBI[66],WBI[65],WBI[64],WBI[63],WBI[62],WBI[61],WBI[60],WBI[59],WBI[58],WBI[57],WBI[56],WBI[55],WBI[54],WBI[53],WBI[52],WBI[51],WBI[50],WBI[49],WBI[48],WBI[47],WBI[46],WBI[45],WBI[44],WBI[43],WBI[42],WBI[41],WBI[40]}),
        .WBLB({WBLB[159],WBLB[158],WBLB[157],WBLB[156],WBLB[155],WBLB[154],WBLB[153],WBLB[152],WBLB[151],WBLB[150],WBLB[149],WBLB[148],WBLB[147],WBLB[146],WBLB[145],WBLB[144],WBLB[143],WBLB[142],WBLB[141],WBLB[140],WBLB[139],WBLB[138],WBLB[137],WBLB[136],WBLB[135],WBLB[134],WBLB[133],WBLB[132],WBLB[131],WBLB[130],WBLB[129],WBLB[128],WBLB[127],WBLB[126],WBLB[125],WBLB[124],WBLB[123],WBLB[122],WBLB[121],WBLB[120],WBLB[119],WBLB[118],WBLB[117],WBLB[116],WBLB[115],WBLB[114],WBLB[113],WBLB[112],WBLB[111],WBLB[110],WBLB[109],WBLB[108],WBLB[107],WBLB[106],WBLB[105],WBLB[104],WBLB[103],WBLB[102],WBLB[101],WBLB[100],WBLB[99],WBLB[98],WBLB[97],WBLB[96],WBLB[95],WBLB[94],WBLB[93],WBLB[92],WBLB[91],WBLB[90],WBLB[89],WBLB[88],WBLB[87],WBLB[86],WBLB[85],WBLB[84],WBLB[83],WBLB[82],WBLB[81],WBLB[80]}),
        .WBLT({WBLT[159],WBLT[158],WBLT[157],WBLT[156],WBLT[155],WBLT[154],WBLT[153],WBLT[152],WBLT[151],WBLT[150],WBLT[149],WBLT[148],WBLT[147],WBLT[146],WBLT[145],WBLT[144],WBLT[143],WBLT[142],WBLT[141],WBLT[140],WBLT[139],WBLT[138],WBLT[137],WBLT[136],WBLT[135],WBLT[134],WBLT[133],WBLT[132],WBLT[131],WBLT[130],WBLT[129],WBLT[128],WBLT[127],WBLT[126],WBLT[125],WBLT[124],WBLT[123],WBLT[122],WBLT[121],WBLT[120],WBLT[119],WBLT[118],WBLT[117],WBLT[116],WBLT[115],WBLT[114],WBLT[113],WBLT[112],WBLT[111],WBLT[110],WBLT[109],WBLT[108],WBLT[107],WBLT[106],WBLT[105],WBLT[104],WBLT[103],WBLT[102],WBLT[101],WBLT[100],WBLT[99],WBLT[98],WBLT[97],WBLT[96],WBLT[95],WBLT[94],WBLT[93],WBLT[92],WBLT[91],WBLT[90],WBLT[89],WBLT[88],WBLT[87],WBLT[86],WBLT[85],WBLT[84],WBLT[83],WBLT[82],WBLT[81],WBLT[80]}),
        .WPSGT({REWPSGT[3],REWPSGT[2],REWPSGT[1],REWPSGT[0]}),
        .WTI({WTI[79],WTI[78],WTI[77],WTI[76],WTI[75],WTI[74],WTI[73],WTI[72],WTI[71],WTI[70],WTI[69],WTI[68],WTI[67],WTI[66],WTI[65],WTI[64],WTI[63],WTI[62],WTI[61],WTI[60],WTI[59],WTI[58],WTI[57],WTI[56],WTI[55],WTI[54],WTI[53],WTI[52],WTI[51],WTI[50],WTI[49],WTI[48],WTI[47],WTI[46],WTI[45],WTI[44],WTI[43],WTI[42],WTI[41],WTI[40]}));
    mm17a04_u_hdrf2p_capmux X_mm17a04_u_hdrf2p_capmux (VDDA[41], VDDP[41],
        VDDPI[41], VSS[41], VBP[41], VBN[41], LOG0, LOG1[1], PGIOI, VEDGE);
endmodule

module SNPS_RF_DP_HD_256x80_mux_row (ARYSD, CENDP, CKGATE_RD, CKGATE_RLCEN_PROG,
       CLKWLB_RD, CLKWLB_RD_HV, CLKWLB_RD_prog, CLKWLB_WR_HV, CLKWLB_WR_prog,
       DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LCGTV,
       LITESLP, LOG0, LOG1, LRWMEB, LXADRB, PAARD, PAAWR, PAWR, PAWRB, PBRD,
       PBRDB, PBWR, PBWRB, PCRD, PCRDB, PCWR, PCWRB, PGIOI, QT, RASSB_H, RBLWA,
       RDBL, RERASSB, RFLOAT, RFLOAT_RLCEN_PROG, RFLT_RET, RM3CNT, RMTRD, RMTWR,
       STCLK, STCLK_WR_RST_PGM, STRSB, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA,
       VDDAIR1, VDDAIR2, VDDAI_SACR1, VDDAI_SACR2, VDDAPI, VDDF, VDDP, VDDPI,
       VDDWL_RD, VDDWL_RD_REBUF, VDDWL_WR, VDDWL_WR_REBUF, VEDGE, VSS, VSSWL,
       WABUF, WAGND, WAPRCLKB_RET_LCEN, WBI, WBLB, WBLT, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WFLT_DEL_A, WFLT_DEL_B, WFLT_RET, WL_VSS, WTI, YCOLWR, YSELRD);
    inout ARYSD;
    inout CENDP;
    input CKGATE_RD;
    input CKGATE_RLCEN_PROG;
    output CLKWLB_RD;
    output CLKWLB_RD_HV;
    input CLKWLB_RD_prog;
    output CLKWLB_WR_HV;
    input CLKWLB_WR_prog;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout [1:0] LCGTV;
    input LITESLP;
    inout [1:0] LOG0;
    inout [1:0] LOG1;
    inout LRWMEB;
    inout [2:0] LXADRB;
    input [3:0] PAARD;
    input [3:0] PAAWR;
    input [3:0] PAWR;
    output [3:0] PAWRB;
    input [3:0] PBRD;
    output [3:0] PBRDB;
    input [3:0] PBWR;
    output [3:0] PBWRB;
    input [3:0] PCRD;
    output [3:0] PCRDB;
    input [3:0] PCWR;
    output [3:0] PCWRB;
    inout PGIOI;
    inout [159:0] QT;
    inout [1:0] RASSB_H;
    inout RBLWA;
    inout RDBL;
    inout [1:0] RERASSB;
    inout RFLOAT;
    input RFLOAT_RLCEN_PROG;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    output STCLK;
    input STCLK_WR_RST_PGM;
    input STRSB;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout [44:0] VBN;
    supply0 [44:0] VBN;
    inout [44:0] VBP;
    supply0 [44:0] VBP;
    inout [44:0] VDDA;
    supply1 [44:0] VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout [44:0] VDDP;
    supply1 [44:0] VDDP;
    inout [44:0] VDDPI;
    inout VDDWL_RD;
    inout VDDWL_RD_REBUF;
    inout VDDWL_WR;
    inout VDDWL_WR_REBUF;
    inout VEDGE;
    inout [44:0] VSS;
    supply0 [44:0] VSS;
    inout VSSWL;
    input WABUF;
    inout [79:0] WAGND;
    input WAPRCLKB_RET_LCEN;
    input [79:0] WBI;
    inout [159:0] WBLB;
    inout [159:0] WBLT;
    output [3:0] WCLKRD;
    output [3:0] WCLKWR;
    input WDBL;
    inout WFLOAT;
    output WFLT_DEL_A;
    output WFLT_DEL_B;
    output WFLT_RET;
    inout WL_VSS;
    wire [3:0] WPSGT_H;
    input [79:0] WTI;
    input [3:0] YCOLWR;
    inout [3:0] YSELRD;
    SNPS_RF_DP_HD_256x80_mux_cnt X_mux_cnt (.ARYSD(ARYSD), .CENDP(CENDP),
        .CKGATE_RD(CKGATE_RD), .CKGATE_RLCEN_PROG(CKGATE_RLCEN_PROG),
        .CLKWLB_RD(CLKWLB_RD), .CLKWLB_RD_HV(CLKWLB_RD_HV),
        .CLKWLB_RD_prog(CLKWLB_RD_prog), .CLKWLB_WR_HV(CLKWLB_WR_HV),
        .CLKWLB_WR_prog(CLKWLB_WR_prog), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTHBUF(LCGTHBUF), .LCGTL(LCGTL),
        .LCGTV(LCGTV[0]), .LITESLP(LITESLP), .LOG0(LOG0[0]), .LOG1(LOG1[0]),
        .LRWMEB(LRWMEB), .LXADRB({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAARD({PAARD[3],PAARD[2],PAARD[1],PAARD[0]}),
        .PAAWR({PAAWR[3],PAAWR[2],PAAWR[1],PAAWR[0]}),
        .PAWR({PAWR[3],PAWR[2],PAWR[1],PAWR[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRD({PBRD[3],PBRD[2],PBRD[1],PBRD[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWR({PBWR[3],PBWR[2],PBWR[1],PBWR[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRD({PCRD[3],PCRD[2],PCRD[1],PCRD[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWR({PCWR[3],PCWR[2],PCWR[1],PCWR[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .PRCHRD(PRCHRD),
        .PRCHWR(PRCHWR), .RASSB_H({RASSB_H[1],RASSB_H[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLOAT_RLCEN_PROG(RFLOAT_RLCEN_PROG),
        .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .STCLK(STCLK),
        .STCLK_WR_RST_PGM(STCLK_WR_RST_PGM), .STRSB(STRSB), .T1TRD(T1TRD),
        .T1TWR(T1TWR), .TKEEPB(TKEEPB), .VBN({VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[2],VBP[1],VBP[0]}), .VDDA({VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAPI(VDDAPI), .VDDF(VDDF), .VDDP({VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[2],VDDPI[1],VDDPI[0]}), .VDDWL_RD(VDDWL_RD),
        .VDDWL_WR(VDDWL_WR), .VSS({VSS[2],VSS[1],VSS[0]}), .VSSWL(VSSWL),
        .WABUF(WABUF), .WAPRCLKB_RET_LCEN(WAPRCLKB_RET_LCEN),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WFLT_DEL_A(WFLT_DEL_A), .WFLT_DEL_B(WFLT_DEL_B),
        .WFLT_RET(WFLT_RET),
        .WPSGT_H({WPSGT_H[3],WPSGT_H[2],WPSGT_H[1],WPSGT_H[0]}),
        .YCOLWR({YCOLWR[3],YCOLWR[2],YCOLWR[1],YCOLWR[0]}),
        .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_mux_rt X_mux_rt (.LCGTHBUF(LCGTHBUF), .LCGTV(LCGTV[1]),
        .LOG0(LOG0[1]), .LOG1({LOG1[1],LOG1[0]}), .PGIOI(PGIOI),
        .PRCHRD(PRCHRD), .PRCHWR(PRCHWR),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[44],VBN[43],VBN[42],VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3]}),
        .VBP({VBP[44],VBP[43],VBP[42],VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3]}),
        .VDDA({VDDA[44],VDDA[43],VDDA[42],VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[44],VDDP[43],VDDP[42],VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3]}),
        .VDDPI({VDDPI[44],VDDPI[43],VDDPI[42],VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[44],VSS[43],VSS[42],VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3]}),
        .WAGND({WAGND[79],WAGND[78],WAGND[77],WAGND[76],WAGND[75],WAGND[74],WAGND[73],WAGND[72],WAGND[71],WAGND[70],WAGND[69],WAGND[68],WAGND[67],WAGND[66],WAGND[65],WAGND[64],WAGND[63],WAGND[62],WAGND[61],WAGND[60],WAGND[59],WAGND[58],WAGND[57],WAGND[56],WAGND[55],WAGND[54],WAGND[53],WAGND[52],WAGND[51],WAGND[50],WAGND[49],WAGND[48],WAGND[47],WAGND[46],WAGND[45],WAGND[44],WAGND[43],WAGND[42],WAGND[41],WAGND[40],WAGND[39],WAGND[38],WAGND[37],WAGND[36],WAGND[35],WAGND[34],WAGND[33],WAGND[32],WAGND[31],WAGND[30],WAGND[29],WAGND[28],WAGND[27],WAGND[26],WAGND[25],WAGND[24],WAGND[23],WAGND[22],WAGND[21],WAGND[20],WAGND[19],WAGND[18],WAGND[17],WAGND[16],WAGND[15],WAGND[14],WAGND[13],WAGND[12],WAGND[11],WAGND[10],WAGND[9],WAGND[8],WAGND[7],WAGND[6],WAGND[5],WAGND[4],WAGND[3],WAGND[2],WAGND[1],WAGND[0]}),
        .WBI({WBI[79],WBI[78],WBI[77],WBI[76],WBI[75],WBI[74],WBI[73],WBI[72],WBI[71],WBI[70],WBI[69],WBI[68],WBI[67],WBI[66],WBI[65],WBI[64],WBI[63],WBI[62],WBI[61],WBI[60],WBI[59],WBI[58],WBI[57],WBI[56],WBI[55],WBI[54],WBI[53],WBI[52],WBI[51],WBI[50],WBI[49],WBI[48],WBI[47],WBI[46],WBI[45],WBI[44],WBI[43],WBI[42],WBI[41],WBI[40],WBI[39],WBI[38],WBI[37],WBI[36],WBI[35],WBI[34],WBI[33],WBI[32],WBI[31],WBI[30],WBI[29],WBI[28],WBI[27],WBI[26],WBI[25],WBI[24],WBI[23],WBI[22],WBI[21],WBI[20],WBI[19],WBI[18],WBI[17],WBI[16],WBI[15],WBI[14],WBI[13],WBI[12],WBI[11],WBI[10],WBI[9],WBI[8],WBI[7],WBI[6],WBI[5],WBI[4],WBI[3],WBI[2],WBI[1],WBI[0]}),
        .WBLB({WBLB[159],WBLB[158],WBLB[157],WBLB[156],WBLB[155],WBLB[154],WBLB[153],WBLB[152],WBLB[151],WBLB[150],WBLB[149],WBLB[148],WBLB[147],WBLB[146],WBLB[145],WBLB[144],WBLB[143],WBLB[142],WBLB[141],WBLB[140],WBLB[139],WBLB[138],WBLB[137],WBLB[136],WBLB[135],WBLB[134],WBLB[133],WBLB[132],WBLB[131],WBLB[130],WBLB[129],WBLB[128],WBLB[127],WBLB[126],WBLB[125],WBLB[124],WBLB[123],WBLB[122],WBLB[121],WBLB[120],WBLB[119],WBLB[118],WBLB[117],WBLB[116],WBLB[115],WBLB[114],WBLB[113],WBLB[112],WBLB[111],WBLB[110],WBLB[109],WBLB[108],WBLB[107],WBLB[106],WBLB[105],WBLB[104],WBLB[103],WBLB[102],WBLB[101],WBLB[100],WBLB[99],WBLB[98],WBLB[97],WBLB[96],WBLB[95],WBLB[94],WBLB[93],WBLB[92],WBLB[91],WBLB[90],WBLB[89],WBLB[88],WBLB[87],WBLB[86],WBLB[85],WBLB[84],WBLB[83],WBLB[82],WBLB[81],WBLB[80],WBLB[79],WBLB[78],WBLB[77],WBLB[76],WBLB[75],WBLB[74],WBLB[73],WBLB[72],WBLB[71],WBLB[70],WBLB[69],WBLB[68],WBLB[67],WBLB[66],WBLB[65],WBLB[64],WBLB[63],WBLB[62],WBLB[61],WBLB[60],WBLB[59],WBLB[58],WBLB[57],WBLB[56],WBLB[55],WBLB[54],WBLB[53],WBLB[52],WBLB[51],WBLB[50],WBLB[49],WBLB[48],WBLB[47],WBLB[46],WBLB[45],WBLB[44],WBLB[43],WBLB[42],WBLB[41],WBLB[40],WBLB[39],WBLB[38],WBLB[37],WBLB[36],WBLB[35],WBLB[34],WBLB[33],WBLB[32],WBLB[31],WBLB[30],WBLB[29],WBLB[28],WBLB[27],WBLB[26],WBLB[25],WBLB[24],WBLB[23],WBLB[22],WBLB[21],WBLB[20],WBLB[19],WBLB[18],WBLB[17],WBLB[16],WBLB[15],WBLB[14],WBLB[13],WBLB[12],WBLB[11],WBLB[10],WBLB[9],WBLB[8],WBLB[7],WBLB[6],WBLB[5],WBLB[4],WBLB[3],WBLB[2],WBLB[1],WBLB[0]}),
        .WBLT({WBLT[159],WBLT[158],WBLT[157],WBLT[156],WBLT[155],WBLT[154],WBLT[153],WBLT[152],WBLT[151],WBLT[150],WBLT[149],WBLT[148],WBLT[147],WBLT[146],WBLT[145],WBLT[144],WBLT[143],WBLT[142],WBLT[141],WBLT[140],WBLT[139],WBLT[138],WBLT[137],WBLT[136],WBLT[135],WBLT[134],WBLT[133],WBLT[132],WBLT[131],WBLT[130],WBLT[129],WBLT[128],WBLT[127],WBLT[126],WBLT[125],WBLT[124],WBLT[123],WBLT[122],WBLT[121],WBLT[120],WBLT[119],WBLT[118],WBLT[117],WBLT[116],WBLT[115],WBLT[114],WBLT[113],WBLT[112],WBLT[111],WBLT[110],WBLT[109],WBLT[108],WBLT[107],WBLT[106],WBLT[105],WBLT[104],WBLT[103],WBLT[102],WBLT[101],WBLT[100],WBLT[99],WBLT[98],WBLT[97],WBLT[96],WBLT[95],WBLT[94],WBLT[93],WBLT[92],WBLT[91],WBLT[90],WBLT[89],WBLT[88],WBLT[87],WBLT[86],WBLT[85],WBLT[84],WBLT[83],WBLT[82],WBLT[81],WBLT[80],WBLT[79],WBLT[78],WBLT[77],WBLT[76],WBLT[75],WBLT[74],WBLT[73],WBLT[72],WBLT[71],WBLT[70],WBLT[69],WBLT[68],WBLT[67],WBLT[66],WBLT[65],WBLT[64],WBLT[63],WBLT[62],WBLT[61],WBLT[60],WBLT[59],WBLT[58],WBLT[57],WBLT[56],WBLT[55],WBLT[54],WBLT[53],WBLT[52],WBLT[51],WBLT[50],WBLT[49],WBLT[48],WBLT[47],WBLT[46],WBLT[45],WBLT[44],WBLT[43],WBLT[42],WBLT[41],WBLT[40],WBLT[39],WBLT[38],WBLT[37],WBLT[36],WBLT[35],WBLT[34],WBLT[33],WBLT[32],WBLT[31],WBLT[30],WBLT[29],WBLT[28],WBLT[27],WBLT[26],WBLT[25],WBLT[24],WBLT[23],WBLT[22],WBLT[21],WBLT[20],WBLT[19],WBLT[18],WBLT[17],WBLT[16],WBLT[15],WBLT[14],WBLT[13],WBLT[12],WBLT[11],WBLT[10],WBLT[9],WBLT[8],WBLT[7],WBLT[6],WBLT[5],WBLT[4],WBLT[3],WBLT[2],WBLT[1],WBLT[0]}),
        .WL_VSS(WL_VSS), .WPSGT({WPSGT_H[3],WPSGT_H[2],WPSGT_H[1],WPSGT_H[0]}),
        .WTI({}));
endmodule

module SNPS_RF_DP_HD_256x80_sac_cnt (ARYSD, CENDP, DEF1_RD, DEF1_WR,
       DMY_EDGE_LT, DMY_EDGE_T2_R, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
       LCGTL, LCGTL_O, LCGTV, LOG0, LOG1, LRWMEB, LXADR, LXADRB, OPT_RET, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, PLBKADR, PLBKADRB, PRCHGB_T, RASSB_H, RBLWA,
       RDBL, RFLOAT, RFLOAT_H, RFLOAT_H_DEL0, RFLOAT_H_DEL2, RFLOAT_H_DEL4,
       RFLOAT_H_DEL6, RFLOAT_H_PGM, RFLOAT_PGM, RFLT_DEL_A, RFLT_DEL_B,
       RFLT_DEL_C, RFLT_RET, RM3CNT, RMTRD, RMTWR, ROWBKDB, ROWBKTB, RWLB_RD,
       RWLB_WR, STCLK_RD_RST_PGM, T1TRD, T1TWR, TKEEPB, TKEEPT_LCGTL, VBN, VBP,
       VDDA, VDDAPI, VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD,
       WCLKWR, WDBL, WFLOAT, WFLOAT_H, WFLOAT_H_DEL0, WFLOAT_H_DEL2,
       WFLOAT_H_DEL4, WFLOAT_H_DEL6, WFLOAT_H_PGM, WFLOAT_PGM, YSELB_H, YSELRD);
    inout ARYSD;
    inout CENDP;
    inout DEF1_RD;
    inout DEF1_WR;
    inout DMY_EDGE_LT;
    inout DMY_EDGE_T2_R;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    output LCGTL_O;
    inout LCGTV;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADR;
    inout [2:0] LXADRB;
    output OPT_RET;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    input [2:0] PLBKADR;
    input PLBKADRB;
    output PRCHGB_T;
    inout [1:0] RASSB_H;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    output RFLOAT_H;
    output RFLOAT_H_DEL0;
    output RFLOAT_H_DEL2;
    output RFLOAT_H_DEL4;
    output RFLOAT_H_DEL6;
    input RFLOAT_H_PGM;
    input RFLOAT_PGM;
    output RFLT_DEL_A;
    output RFLT_DEL_B;
    output RFLT_DEL_C;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    output ROWBKDB;
    output ROWBKTB;
    output RWLB_RD;
    output RWLB_WR;
    input STCLK_RD_RST_PGM;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    output TKEEPT_LCGTL;
    inout [2:0] VBN;
    supply0 [2:0] VBN;
    inout [2:0] VBP;
    supply0 [2:0] VBP;
    inout [2:0] VDDA;
    supply1 [2:0] VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout [2:0] VDDP;
    supply1 [2:0] VDDP;
    inout [1:0] VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout [2:0] VSS;
    supply0 [2:0] VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output WFLOAT_H;
    output WFLOAT_H_DEL0;
    output WFLOAT_H_DEL2;
    output WFLOAT_H_DEL4;
    output WFLOAT_H_DEL6;
    input WFLOAT_H_PGM;
    input WFLOAT_PGM;
    output [3:0] YSELB_H;
    inout [3:0] YSELRD;
    wire [3:0] YSEL_L;
    wire [3:0] YSEL_R;

    //*** Jumper Report ***
    // Jumper: DLY_RDTIMER DLY_RDTIMER_4
    // Jumper: LCGTL LCGT_SACTRL_HV
    // Jumper: LOG1 CLPSEBUFB
    // Jumper: LXADR[0] PLBKADR[0]
    // Jumper: LXADRB[0] PLBKADRB
    // Jumper: RFLOAT_H_DEL2 RFLOAT_PGM
    // Jumper: RFLOAT_H_DEL6 RFLOAT_H_PGM
    // Jumper: RFLT_DEL_C STCLK_RD_RST_PGM
    // Jumper: VDDA[1] VDDF VDDP[1] VDDPI[0]
    // Jumper: VDDA[2] VDDP[2] VDDPI[1]
    // Jumper: WFLOAT_H_DEL2 WFLOAT_PGM
    // Jumper: WFLOAT_H_DEL4 WFLOAT_H_PGM

    mm17a04_u_hdrf2p_sactrl_top_bk1_edgel
        X_mm17a04_u_hdrf2p_sactrl_top_bk1_edgel_rpb128 (VDDA[0], VDDP[0],
        VSS[0], VBP[0], VBN[0]);
    mm17a04_u_hdrf2p_sactrl_top_bk1 X_mm17a04_u_hdrf2p_sactrl_top_bk1_rpb128
        (VDDA[1], VDDAPI, VDDF, VDDP[1], VDDPI[0], VSS[1], VSSWL, VBP[1],
        VBN[1], LCGTL_O, OPT_RET, PRCHG_T_L, PRCHG_T_R, RFLOAT_H, RFLOAT_H_DEL0,
        RFLOAT_H_DEL2, RFLOAT_H_DEL4, RFLOAT_H_DEL6, RFLT_DEL_A, RFLT_DEL_B,
        RFLT_DEL_C, ROWBKDB, ROWBKTB, RWLB_RD, RWLB_WR, WFLOAT_H, WFLOAT_H_DEL0,
        WFLOAT_H_DEL2, WFLOAT_H_DEL4, WFLOAT_H_DEL6, YSEL_L[0], YSEL_L[1],
        YSEL_L[2], YSEL_L[3], YSEL_R[0], YSEL_R[1], YSEL_R[2], YSEL_R[3], ARYSD,
        CENDP, DEF1_RD, DEF1_WR, DLY_RDTIMER, DLY_RDTIMER_0, DLY_RDTIMER,
        FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB,
        LXADR[0], LXADR[1], LXADR[2], LXADRB[0], LXADRB[1], LXADRB[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], T1TRD, T1TWR, TKEEPB, WCLKRD[0],
        WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1], WCLKWR[2],
        WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2], YSELRD[3],
        LOG1, LCGTL, PLBKADR[0], PLBKADR[1], PLBKADR[2], PLBKADRB, RFLOAT_H_PGM,
        RFLOAT_PGM, STCLK_RD_RST_PGM, WFLOAT_H_PGM, WFLOAT_PGM);
    mm17a04_u_hdrf2p_sacbuf_bk1 X_mm17a04_u_hdrf2p_sacbuf_bk1_rpb128 (VDDA[2],
        VDDP[2], VDDPI[1], VDDWL_RD, VDDWL_WR, VSS[2], VBP[2], VBN[2], PRCHGB_T,
        TKEEPT_LCGTL, YSELB_H[0], YSELB_H[1], YSELB_H[2], YSELB_H[3],
        DMY_EDGE_LT, DMY_EDGE_T2_R, LCGTV, RASSB_H[0], RASSB_H[1], LCGTL,
        PRCHG_T_R, TKEEPB, YSEL_R[0], YSEL_R[1], YSEL_R[2], YSEL_R[3]);
endmodule

module SNPS_RF_DP_HD_256x80_sac_rt_seg1 (BAB, BAT,
       .DMY_EDGE_T2({DMY_EDGE_T2[20], DMY_EDGE_T2[1]}), PRCHGB_T, QT, RBL,
       TKEEPT_LCGTL, VBN, VBP, VDDA, VDDAI, VDDAI_SAC, VDDP, VDDPI, VSS, YSELB);
    inout [79:0] BAB;
    inout [79:0] BAT;
    inout [20:0] DMY_EDGE_T2;
    inout PRCHGB_T;
    inout [79:0] QT;
    inout [79:0] RBL;
    inout TKEEPT_LCGTL;
    inout [19:0] VBN;
    supply0 [19:0] VBN;
    inout [19:0] VBP;
    supply0 [19:0] VBP;
    inout [19:0] VDDA;
    supply1 [19:0] VDDA;
    inout [19:0] VDDAI;
    inout [19:0] VDDAI_SAC;
    inout [19:0] VDDP;
    supply1 [19:0] VDDP;
    inout [19:0] VDDPI;
    inout [19:0] VSS;
    supply0 [19:0] VSS;
    inout [3:0] YSELB;

    //*** Jumper Report ***
    // Jumper: VDDAI[0] VDDAI_SAC[0] VDDP[0]
    // Jumper: VDDAI[1] VDDAI_SAC[1] VDDP[1]
    // Jumper: VDDAI[2] VDDAI_SAC[2] VDDP[2]
    // Jumper: VDDAI[3] VDDAI_SAC[3] VDDP[3]
    // Jumper: VDDAI[4] VDDAI_SAC[4] VDDP[4]
    // Jumper: VDDAI[5] VDDAI_SAC[5] VDDP[5]
    // Jumper: VDDAI[6] VDDAI_SAC[6] VDDP[6]
    // Jumper: VDDAI[7] VDDAI_SAC[7] VDDP[7]
    // Jumper: VDDAI[8] VDDAI_SAC[8] VDDP[8]
    // Jumper: VDDAI[9] VDDAI_SAC[9] VDDP[9]
    // Jumper: VDDAI[10] VDDAI_SAC[10] VDDP[10]
    // Jumper: VDDAI[11] VDDAI_SAC[11] VDDP[11]
    // Jumper: VDDAI[12] VDDAI_SAC[12] VDDP[12]
    // Jumper: VDDAI[13] VDDAI_SAC[13] VDDP[13]
    // Jumper: VDDAI[14] VDDAI_SAC[14] VDDP[14]
    // Jumper: VDDAI[15] VDDAI_SAC[15] VDDP[15]
    // Jumper: VDDAI[16] VDDAI_SAC[16] VDDP[16]
    // Jumper: VDDAI[17] VDDAI_SAC[17] VDDP[17]
    // Jumper: VDDAI[18] VDDAI_SAC[18] VDDP[18]
    // Jumper: VDDAI[19] VDDAI_SAC[19] VDDP[19]

    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_S0
        (VDDA[0], VDDAI[0], VDDAI_SAC[0], VDDP[0], VDDPI[0], VSS[0], VBP[0],
        VBN[0], DMY_EDGE_T2[1], DMY_EDGE_T2[0], PRCHGB_T, QT[0], QT[1], QT[2],
        QT[3], RBL[0], RBL[1], RBL[2], RBL[3], TKEEPT_LCGTL, BAB[0], BAB[1],
        BAB[2], BAB[3], BAT[0], BAT[1], BAT[2], BAT[3], YSELB[0], YSELB[1],
        YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_S1
        (VDDA[1], VDDAI[1], VDDAI_SAC[1], VDDP[1], VDDPI[1], VSS[1], VBP[1],
        VBN[1], DMY_EDGE_T2[0], DMY_EDGE_T2[2], PRCHGB_T, QT[4], QT[5], QT[6],
        QT[7], RBL[4], RBL[5], RBL[6], RBL[7], TKEEPT_LCGTL, BAB[4], BAB[5],
        BAB[6], BAB[7], BAT[4], BAT[5], BAT[6], BAT[7], YSELB[0], YSELB[1],
        YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_S2
        (VDDA[2], VDDAI[2], VDDAI_SAC[2], VDDP[2], VDDPI[2], VSS[2], VBP[2],
        VBN[2], DMY_EDGE_T2[2], DMY_EDGE_T2[3], PRCHGB_T, QT[8], QT[9], QT[10],
        QT[11], RBL[8], RBL[9], RBL[10], RBL[11], TKEEPT_LCGTL, BAB[8], BAB[9],
        BAB[10], BAB[11], BAT[8], BAT[9], BAT[10], BAT[11], YSELB[0], YSELB[1],
        YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_S3
        (VDDA[3], VDDAI[3], VDDAI_SAC[3], VDDP[3], VDDPI[3], VSS[3], VBP[3],
        VBN[3], DMY_EDGE_T2[3], DMY_EDGE_T2[4], PRCHGB_T, QT[12], QT[13],
        QT[14], QT[15], RBL[12], RBL[13], RBL[14], RBL[15], TKEEPT_LCGTL,
        BAB[12], BAB[13], BAB[14], BAB[15], BAT[12], BAT[13], BAT[14], BAT[15],
        YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_S4
        (VDDA[4], VDDAI[4], VDDAI_SAC[4], VDDP[4], VDDPI[4], VSS[4], VBP[4],
        VBN[4], DMY_EDGE_T2[4], DMY_EDGE_T2[5], PRCHGB_T, QT[16], QT[17],
        QT[18], QT[19], RBL[16], RBL[17], RBL[18], RBL[19], TKEEPT_LCGTL,
        BAB[16], BAB[17], BAB[18], BAB[19], BAT[16], BAT[17], BAT[18], BAT[19],
        YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_S5
        (VDDA[5], VDDAI[5], VDDAI_SAC[5], VDDP[5], VDDPI[5], VSS[5], VBP[5],
        VBN[5], DMY_EDGE_T2[5], DMY_EDGE_T2[6], PRCHGB_T, QT[20], QT[21],
        QT[22], QT[23], RBL[20], RBL[21], RBL[22], RBL[23], TKEEPT_LCGTL,
        BAB[20], BAB[21], BAB[22], BAB[23], BAT[20], BAT[21], BAT[22], BAT[23],
        YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_S6
        (VDDA[6], VDDAI[6], VDDAI_SAC[6], VDDP[6], VDDPI[6], VSS[6], VBP[6],
        VBN[6], DMY_EDGE_T2[6], DMY_EDGE_T2[7], PRCHGB_T, QT[24], QT[25],
        QT[26], QT[27], RBL[24], RBL[25], RBL[26], RBL[27], TKEEPT_LCGTL,
        BAB[24], BAB[25], BAB[26], BAB[27], BAT[24], BAT[25], BAT[26], BAT[27],
        YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_S7
        (VDDA[7], VDDAI[7], VDDAI_SAC[7], VDDP[7], VDDPI[7], VSS[7], VBP[7],
        VBN[7], DMY_EDGE_T2[7], DMY_EDGE_T2[8], PRCHGB_T, QT[28], QT[29],
        QT[30], QT[31], RBL[28], RBL[29], RBL[30], RBL[31], TKEEPT_LCGTL,
        BAB[28], BAB[29], BAB[30], BAB[31], BAT[28], BAT[29], BAT[30], BAT[31],
        YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_S8
        (VDDA[8], VDDAI[8], VDDAI_SAC[8], VDDP[8], VDDPI[8], VSS[8], VBP[8],
        VBN[8], DMY_EDGE_T2[8], DMY_EDGE_T2[9], PRCHGB_T, QT[32], QT[33],
        QT[34], QT[35], RBL[32], RBL[33], RBL[34], RBL[35], TKEEPT_LCGTL,
        BAB[32], BAB[33], BAB[34], BAB[35], BAT[32], BAT[33], BAT[34], BAT[35],
        YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_S9
        (VDDA[9], VDDAI[9], VDDAI_SAC[9], VDDP[9], VDDPI[9], VSS[9], VBP[9],
        VBN[9], DMY_EDGE_T2[9], DMY_EDGE_T2[10], PRCHGB_T, QT[36], QT[37],
        QT[38], QT[39], RBL[36], RBL[37], RBL[38], RBL[39], TKEEPT_LCGTL,
        BAB[36], BAB[37], BAB[38], BAB[39], BAT[36], BAT[37], BAT[38], BAT[39],
        YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_F9
        (VDDA[10], VDDAI[10], VDDAI_SAC[10], VDDP[10], VDDPI[10], VSS[10],
        VBP[10], VBN[10], DMY_EDGE_T2[10], DMY_EDGE_T2[11], PRCHGB_T, QT[40],
        QT[41], QT[42], QT[43], RBL[40], RBL[41], RBL[42], RBL[43],
        TKEEPT_LCGTL, BAB[40], BAB[41], BAB[42], BAB[43], BAT[40], BAT[41],
        BAT[42], BAT[43], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_F8
        (VDDA[11], VDDAI[11], VDDAI_SAC[11], VDDP[11], VDDPI[11], VSS[11],
        VBP[11], VBN[11], DMY_EDGE_T2[11], DMY_EDGE_T2[12], PRCHGB_T, QT[44],
        QT[45], QT[46], QT[47], RBL[44], RBL[45], RBL[46], RBL[47],
        TKEEPT_LCGTL, BAB[44], BAB[45], BAB[46], BAB[47], BAT[44], BAT[45],
        BAT[46], BAT[47], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_F7
        (VDDA[12], VDDAI[12], VDDAI_SAC[12], VDDP[12], VDDPI[12], VSS[12],
        VBP[12], VBN[12], DMY_EDGE_T2[12], DMY_EDGE_T2[13], PRCHGB_T, QT[48],
        QT[49], QT[50], QT[51], RBL[48], RBL[49], RBL[50], RBL[51],
        TKEEPT_LCGTL, BAB[48], BAB[49], BAB[50], BAB[51], BAT[48], BAT[49],
        BAT[50], BAT[51], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_F6
        (VDDA[13], VDDAI[13], VDDAI_SAC[13], VDDP[13], VDDPI[13], VSS[13],
        VBP[13], VBN[13], DMY_EDGE_T2[13], DMY_EDGE_T2[14], PRCHGB_T, QT[52],
        QT[53], QT[54], QT[55], RBL[52], RBL[53], RBL[54], RBL[55],
        TKEEPT_LCGTL, BAB[52], BAB[53], BAB[54], BAB[55], BAT[52], BAT[53],
        BAT[54], BAT[55], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_F5
        (VDDA[14], VDDAI[14], VDDAI_SAC[14], VDDP[14], VDDPI[14], VSS[14],
        VBP[14], VBN[14], DMY_EDGE_T2[14], DMY_EDGE_T2[15], PRCHGB_T, QT[56],
        QT[57], QT[58], QT[59], RBL[56], RBL[57], RBL[58], RBL[59],
        TKEEPT_LCGTL, BAB[56], BAB[57], BAB[58], BAB[59], BAT[56], BAT[57],
        BAT[58], BAT[59], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_F4
        (VDDA[15], VDDAI[15], VDDAI_SAC[15], VDDP[15], VDDPI[15], VSS[15],
        VBP[15], VBN[15], DMY_EDGE_T2[15], DMY_EDGE_T2[16], PRCHGB_T, QT[60],
        QT[61], QT[62], QT[63], RBL[60], RBL[61], RBL[62], RBL[63],
        TKEEPT_LCGTL, BAB[60], BAB[61], BAB[62], BAB[63], BAT[60], BAT[61],
        BAT[62], BAT[63], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_F3
        (VDDA[16], VDDAI[16], VDDAI_SAC[16], VDDP[16], VDDPI[16], VSS[16],
        VBP[16], VBN[16], DMY_EDGE_T2[16], DMY_EDGE_T2[17], PRCHGB_T, QT[64],
        QT[65], QT[66], QT[67], RBL[64], RBL[65], RBL[66], RBL[67],
        TKEEPT_LCGTL, BAB[64], BAB[65], BAB[66], BAB[67], BAT[64], BAT[65],
        BAT[66], BAT[67], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_F2
        (VDDA[17], VDDAI[17], VDDAI_SAC[17], VDDP[17], VDDPI[17], VSS[17],
        VBP[17], VBN[17], DMY_EDGE_T2[17], DMY_EDGE_T2[18], PRCHGB_T, QT[68],
        QT[69], QT[70], QT[71], RBL[68], RBL[69], RBL[70], RBL[71],
        TKEEPT_LCGTL, BAB[68], BAB[69], BAB[70], BAB[71], BAT[68], BAT[69],
        BAT[70], BAT[71], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_F1
        (VDDA[18], VDDAI[18], VDDAI_SAC[18], VDDP[18], VDDPI[18], VSS[18],
        VBP[18], VBN[18], DMY_EDGE_T2[18], DMY_EDGE_T2[19], PRCHGB_T, QT[72],
        QT[73], QT[74], QT[75], RBL[72], RBL[73], RBL[74], RBL[75],
        TKEEPT_LCGTL, BAB[72], BAB[73], BAB[74], BAB[75], BAT[72], BAT[73],
        BAT[74], BAT[75], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128 X_mm17a04_u_hdrf2p_sacm1x4_bk1_rpb128_F0
        (VDDA[19], VDDAI[19], VDDAI_SAC[19], VDDP[19], VDDPI[19], VSS[19],
        VBP[19], VBN[19], DMY_EDGE_T2[19], DMY_EDGE_T2[20], PRCHGB_T, QT[76],
        QT[77], QT[78], QT[79], RBL[76], RBL[77], RBL[78], RBL[79],
        TKEEPT_LCGTL, BAB[76], BAB[77], BAB[78], BAB[79], BAT[76], BAT[77],
        BAT[78], BAT[79], YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
endmodule

module SNPS_RF_DP_HD_256x80_sac_rt (BAB, BAT, DMY_EDGE_LT, DMY_EDGE_RT,
       .DMY_EDGE_T2({DMY_EDGE_T2[0]}), LCGTV, LOG0, LOG1, PGIOI, PRCHGB_T, QT,
       RBL, RERASSB, TKEEPT_LCGTL, VBN, VBP, VDDA, VDDAIR1, VDDAIR2,
       VDDAI_SACR1, VDDAI_SACR2, VDDP, VDDPI, VDDWL_RD_REBUF, VDDWL_WR_REBUF,
       VEDGE, VSS, WL_VSS, YSELB);
    inout [159:0] BAB;
    inout [159:0] BAT;
    inout DMY_EDGE_LT;
    inout [1:0] DMY_EDGE_RT;
    inout [3:0] DMY_EDGE_T2;
    inout LCGTV;
    inout LOG0;
    inout LOG1;
    inout PGIOI;
    inout PRCHGB_T;
    inout [159:0] QT;
    inout [159:0] RBL;
    inout [1:0] RERASSB;
    wire [3:0] REYSELB;
    inout TKEEPT_LCGTL;
    inout [41:0] VBN;
    supply0 [41:0] VBN;
    inout [41:0] VBP;
    supply0 [41:0] VBP;
    inout [40:0] VDDA;
    supply1 [40:0] VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout [41:0] VDDP;
    supply1 [41:0] VDDP;
    inout [41:0] VDDPI;
    inout VDDWL_RD_REBUF;
    inout VDDWL_WR_REBUF;
    inout VEDGE;
    inout [41:0] VSS;
    supply0 [41:0] VSS;
    inout WL_VSS;
    inout [3:0] YSELB;

    //*** Jumper Report ***
    // Jumper: VDDA[20] VDDP[20] VDDPI[20]

    SNPS_RF_DP_HD_256x80_sac_rt_seg1 X_sac_rt_seg1_S0
        (.BAB({BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_T2({DMY_EDGE_T2[1],DMY_EDGE_T2[0]}), .PRCHGB_T(PRCHGB_T),
        .QT({QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({}),
        .TKEEPT_LCGTL(TKEEPT_LCGTL),
        .VBN({VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAI({VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1}),
        .VDDAI_SAC({VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1}),
        .VDDP({VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VSS({VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .YSELB({YSELB[3],YSELB[2],YSELB[1],YSELB[0]}));
    mm17a04_u_hdrf2p_sacrebuf_bk1 X_mm17a04_u_hdrf2p_sacrebuf_bk1_rpb128
        (VDDA[20], VDDP[20], VDDPI[20], VDDWL_RD_REBUF, VDDWL_WR_REBUF, VSS[20],
        VBP[20], VBN[20], REPRCHGB_T, RETKEEP_LCGTL, REYSELB[0], REYSELB[1],
        REYSELB[2], REYSELB[3], DMY_EDGE_LT, DMY_EDGE_RT[0], DMY_EDGE_T2[1],
        DMY_EDGE_T2[2], LCGTV, RERASSB[0], RERASSB[1], WL_VSS, PRCHGB_T,
        TKEEPT_LCGTL, YSELB[0], YSELB[1], YSELB[2], YSELB[3]);
    SNPS_RF_DP_HD_256x80_sac_rt_seg1 X_sac_rt_seg1_F0
        (.BAB({}),
        .BAT({}),
        .DMY_EDGE_T2({DMY_EDGE_T2[3],DMY_EDGE_T2[2]}), .PRCHGB_T(REPRCHGB_T),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80]}),
        .TKEEPT_LCGTL(RETKEEP_LCGTL),
        .VBN({VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21]}),
        .VBP({VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21]}),
        .VDDA({VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21]}),
        .VDDAI({VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2}),
        .VDDAI_SAC({VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2}),
        .VDDP({VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21]}),
        .VDDPI({VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21]}),
        .VSS({VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21]}),
        .YSELB({REYSELB[3],REYSELB[2],REYSELB[1],REYSELB[0]}));
    mm17a04_u_hdrf2p_capsac_bk1 X_mm17a04_u_hdrf2p_capsac_bk1_rpb128 (VDDP[41],
        VDDPI[41], VSS[41], VBP[41], VBN[41], DMY_EDGE_RT[1], DMY_EDGE_T2[3],
        LOG0, LOG1, PGIOI, VEDGE);
endmodule

module SNPS_RF_DP_HD_256x80_sac_row (ARYSD, BAB, BAT, CENDP, DEF1_RD, DEF1_WR,
       DMY_EDGE_LT, DMY_EDGE_RT, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR, LCGTL,
       LCGTL_O, LCGTV, LOG0, LOG1, LRWMEB, LXADR, LXADRB, OPT_RET, PAWRB, PBRDB,
       PBWRB, PCRDB, PCWRB, PGIOI, PLBKADR, PLBKADRB, QT, RASSB_H, RBL, RBLWA,
       RDBL, RERASSB, RFLOAT, RFLOAT_H, RFLOAT_H_DEL0, RFLOAT_H_DEL2,
       RFLOAT_H_DEL4, RFLOAT_H_DEL6, RFLOAT_H_PGM, RFLOAT_PGM, RFLT_DEL_A,
       RFLT_DEL_B, RFLT_DEL_C, RFLT_RET, RM3CNT, RMTRD, RMTWR, ROWBKDB, ROWBKTB,
       RWLB_RD, RWLB_WR, STCLK_RD_RST_PGM, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA,
       VDDAIR1, VDDAIR2, VDDAI_SACR1, VDDAI_SACR2, VDDAPI, VDDF, VDDP, VDDPI,
       VDDWL_RD, VDDWL_RD_REBUF, VDDWL_WR, VDDWL_WR_REBUF, VEDGE, VSS, VSSWL,
       WCLKRD, WCLKWR, WDBL, WFLOAT, WFLOAT_H, WFLOAT_H_DEL0, WFLOAT_H_DEL2,
       WFLOAT_H_DEL4, WFLOAT_H_DEL6, WFLOAT_H_PGM, WFLOAT_PGM, WL_VSS, YSELRD);
    inout ARYSD;
    inout [159:0] BAB;
    inout [159:0] BAT;
    inout CENDP;
    inout DEF1_RD;
    inout DEF1_WR;
    inout [1:0] DMY_EDGE_LT;
    inout [1:0] DMY_EDGE_RT;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    output LCGTL_O;
    inout [1:0] LCGTV;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADR;
    inout [2:0] LXADRB;
    output OPT_RET;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout PGIOI;
    input [2:0] PLBKADR;
    input PLBKADRB;
    inout [159:0] QT;
    inout [1:0] RASSB_H;
    inout [159:0] RBL;
    inout RBLWA;
    inout RDBL;
    inout [1:0] RERASSB;
    inout RFLOAT;
    output RFLOAT_H;
    output RFLOAT_H_DEL0;
    output RFLOAT_H_DEL2;
    output RFLOAT_H_DEL4;
    output RFLOAT_H_DEL6;
    input RFLOAT_H_PGM;
    input RFLOAT_PGM;
    output RFLT_DEL_A;
    output RFLT_DEL_B;
    output RFLT_DEL_C;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    output ROWBKDB;
    output ROWBKTB;
    output RWLB_RD;
    output RWLB_WR;
    input STCLK_RD_RST_PGM;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_RD_REBUF;
    inout VDDWL_WR;
    inout VDDWL_WR_REBUF;
    inout VEDGE;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output WFLOAT_H;
    output WFLOAT_H_DEL0;
    output WFLOAT_H_DEL2;
    output WFLOAT_H_DEL4;
    output WFLOAT_H_DEL6;
    input WFLOAT_H_PGM;
    input WFLOAT_PGM;
    inout WL_VSS;
    wire [3:0] YSELB_H;
    inout [3:0] YSELRD;
    SNPS_RF_DP_HD_256x80_sac_cnt X_sac_cnt (.ARYSD(ARYSD), .CENDP(CENDP),
        .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR), .DMY_EDGE_LT(DMY_EDGE_LT[0]),
        .DMY_EDGE_T2_R(DMY_EDGE_T2_R), .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR),
        .FAST2_RD(FAST2_RD), .FAST2_WR(FAST2_WR), .LCGTL(LCGTL),
        .LCGTL_O(LCGTL_O), .LCGTV(LCGTV[0]), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADR({LXADR[2],LXADR[1],LXADR[0]}),
        .LXADRB({LXADRB[2],LXADRB[1],LXADRB[0]}), .OPT_RET(OPT_RET),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}),
        .PLBKADR({PLBKADR[2],PLBKADR[1],PLBKADR[0]}), .PLBKADRB(PLBKADRB),
        .PRCHGB_T(PRCHGB_T), .RASSB_H({RASSB_H[1],RASSB_H[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLOAT_H(RFLOAT_H),
        .RFLOAT_H_DEL0(RFLOAT_H_DEL0), .RFLOAT_H_DEL2(RFLOAT_H_DEL2),
        .RFLOAT_H_DEL4(RFLOAT_H_DEL4), .RFLOAT_H_DEL6(RFLOAT_H_DEL6),
        .RFLOAT_H_PGM(RFLOAT_H_PGM), .RFLOAT_PGM(RFLOAT_PGM),
        .RFLT_DEL_A(RFLT_DEL_A), .RFLT_DEL_B(RFLT_DEL_B),
        .RFLT_DEL_C(RFLT_DEL_C), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .ROWBKDB(ROWBKDB),
        .ROWBKTB(ROWBKTB), .RWLB_RD(RWLB_RD), .RWLB_WR(RWLB_WR),
        .STCLK_RD_RST_PGM(STCLK_RD_RST_PGM), .T1TRD(T1TRD), .T1TWR(T1TWR),
        .TKEEPB(TKEEPB), .TKEEPT_LCGTL(TKEEPT_LCGTL), .VBN({VBN,VBN,VBN}),
        .VBP({VBP,VBP,VBP}), .VDDA({VDDA,VDDA,VDDA}), .VDDAPI(VDDAPI),
        .VDDF(VDDF), .VDDP({VDDP,VDDP,VDDP}), .VDDPI({VDDPI,VDDPI}),
        .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR), .VSS({VSS,VSS,VSS}),
        .VSSWL(VSSWL), .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WFLOAT_H(WFLOAT_H), .WFLOAT_H_DEL0(WFLOAT_H_DEL0),
        .WFLOAT_H_DEL2(WFLOAT_H_DEL2), .WFLOAT_H_DEL4(WFLOAT_H_DEL4),
        .WFLOAT_H_DEL6(WFLOAT_H_DEL6), .WFLOAT_H_PGM(WFLOAT_H_PGM),
        .WFLOAT_PGM(WFLOAT_PGM),
        .YSELB_H({YSELB_H[3],YSELB_H[2],YSELB_H[1],YSELB_H[0]}),
        .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_sac_rt X_sac_rt
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LT(DMY_EDGE_LT[1]),
        .DMY_EDGE_RT({DMY_EDGE_RT[1],DMY_EDGE_RT[0]}),
        .DMY_EDGE_T2({DMY_EDGE_T2_R}), .LCGTV(LCGTV[1]), .LOG0(LOG0),
        .LOG1(LOG1), .PGIOI(PGIOI), .PRCHGB_T(PRCHGB_T),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}), .TKEEPT_LCGTL(TKEEPT_LCGTL),
        .VBN({VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN}),
        .VBP({VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP}),
        .VDDA({VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP}),
        .VDDPI({VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS}),
        .WL_VSS(WL_VSS), .YSELB({YSELB_H[3],YSELB_H[2],YSELB_H[1],YSELB_H[0]}));
endmodule

module SNPS_RF_DP_HD_256x80_sac_row_t (ARYSD, BAB, BAT, CENDP, DEF1_RD, DEF1_WR,
       DMY_EDGE_LT, DMY_EDGE_RT, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR, LCGTL,
       LCGTV, LOG0, LOG1, LRWMEB, LXADR, LXADRBRD_2, LXADRBRD_3, LXADRBRD_4,
       OPT_RET, PAWRB, PBRDB, PBWRB, PCRDB, PCWRB, PGIOI, PLBKADR, PLBKADRB, QT,
       RASSB_H, RBL, RBLWA, RDBL, RERASSB, RFLOAT, RFLOAT_H, RFLOAT_H_DEL0,
       RFLOAT_H_DEL2, RFLOAT_H_DEL4, RFLOAT_H_DEL6, RFLOAT_H_PGM, RFLOAT_PGM,
       RFLT_DEL_A, RFLT_DEL_B, RFLT_DEL_C, RFLT_RET, RM3CNT, RMTRD, RMTWR,
       ROWBKDB, ROWBKTB, RWLB_RD, RWLB_WR, STCLK_RD_RST_PGM, T1TRD, T1TWR,
       TKEEPB, VBN, VBP, VDDA, VDDAIR1, VDDAIR2, VDDAI_SACR1, VDDAI_SACR2,
       VDDAPI, VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_RD_REBUF, VDDWL_WR,
       VDDWL_WR_REBUF, VEDGE, VSS, VSSWL, WCLKRD, WCLKWR, WDBL, WFLOAT,
       WFLOAT_H, WFLOAT_H_DEL0, WFLOAT_H_DEL2, WFLOAT_H_DEL4, WFLOAT_H_DEL6,
       WFLOAT_H_PGM, WFLOAT_PGM, WL_VSS, YSELRD);
    inout ARYSD;
    inout [159:0] BAB;
    inout [159:0] BAT;
    inout CENDP;
    inout DEF1_RD;
    inout DEF1_WR;
    inout [1:0] DMY_EDGE_LT;
    inout [1:0] DMY_EDGE_RT;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout [1:0] LCGTL;
    inout [1:0] LCGTV;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADR;
    inout LXADRBRD_2;
    inout LXADRBRD_3;
    inout LXADRBRD_4;
    output OPT_RET;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout PGIOI;
    input [2:0] PLBKADR;
    input PLBKADRB;
    inout [159:0] QT;
    inout [1:0] RASSB_H;
    inout [159:0] RBL;
    inout RBLWA;
    inout RDBL;
    inout [1:0] RERASSB;
    inout RFLOAT;
    output RFLOAT_H;
    output RFLOAT_H_DEL0;
    output RFLOAT_H_DEL2;
    output RFLOAT_H_DEL4;
    output RFLOAT_H_DEL6;
    input RFLOAT_H_PGM;
    input RFLOAT_PGM;
    output RFLT_DEL_A;
    output RFLT_DEL_B;
    output RFLT_DEL_C;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    output ROWBKDB;
    output ROWBKTB;
    output RWLB_RD;
    output RWLB_WR;
    input STCLK_RD_RST_PGM;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_RD_REBUF;
    inout VDDWL_WR;
    inout VDDWL_WR_REBUF;
    inout VEDGE;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output WFLOAT_H;
    output WFLOAT_H_DEL0;
    output WFLOAT_H_DEL2;
    output WFLOAT_H_DEL4;
    output WFLOAT_H_DEL6;
    input WFLOAT_H_PGM;
    input WFLOAT_PGM;
    inout WL_VSS;
    inout [3:0] YSELRD;
    SNPS_RF_DP_HD_256x80_sac_row X_sac_row (.ARYSD(ARYSD),
        .BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .CENDP(CENDP), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .DMY_EDGE_LT({DMY_EDGE_LT[1],DMY_EDGE_LT[0]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[1],DMY_EDGE_RT[0]}), .FAST1_RD(FAST1_RD),
        .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD), .FAST2_WR(FAST2_WR),
        .LCGTL(LCGTL[0]), .LCGTL_O(LCGTL[1]), .LCGTV({LCGTV[1],LCGTV[0]}),
        .LOG0(LOG0), .LOG1(LOG1), .LRWMEB(LRWMEB),
        .LXADR({LXADR[2],LXADR[1],LXADR[0]}),
        .LXADRB({LXADRBRD_4,LXADRBRD_3,LXADRBRD_2}), .OPT_RET(OPT_RET),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .PGIOI(PGIOI),
        .PLBKADR({PLBKADR[2],PLBKADR[1],PLBKADR[0]}), .PLBKADRB(PLBKADRB),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RASSB_H({RASSB_H[1],RASSB_H[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RBLWA(RBLWA), .RDBL(RDBL), .RERASSB({RERASSB[1],RERASSB[0]}),
        .RFLOAT(RFLOAT), .RFLOAT_H(RFLOAT_H), .RFLOAT_H_DEL0(RFLOAT_H_DEL0),
        .RFLOAT_H_DEL2(RFLOAT_H_DEL2), .RFLOAT_H_DEL4(RFLOAT_H_DEL4),
        .RFLOAT_H_DEL6(RFLOAT_H_DEL6), .RFLOAT_H_PGM(RFLOAT_H_PGM),
        .RFLOAT_PGM(RFLOAT_PGM), .RFLT_DEL_A(RFLT_DEL_A),
        .RFLT_DEL_B(RFLT_DEL_B), .RFLT_DEL_C(RFLT_DEL_C), .RFLT_RET(RFLT_RET),
        .RM3CNT(RM3CNT), .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .ROWBKDB(ROWBKDB),
        .ROWBKTB(ROWBKTB), .RWLB_RD(RWLB_RD), .RWLB_WR(RWLB_WR),
        .STCLK_RD_RST_PGM(STCLK_RD_RST_PGM), .T1TRD(T1TRD), .T1TWR(T1TWR),
        .TKEEPB(TKEEPB), .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAIR1(VDDAIR1),
        .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1), .VDDAI_SACR2(VDDAI_SACR2),
        .VDDAPI(VDDAPI), .VDDF(VDDF), .VDDP(VDDP), .VDDPI(VDDPI),
        .VDDWL_RD(VDDWL_RD), .VDDWL_RD_REBUF(VDDWL_RD_REBUF),
        .VDDWL_WR(VDDWL_WR), .VDDWL_WR_REBUF(VDDWL_WR_REBUF), .VEDGE(VEDGE),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WFLOAT_H(WFLOAT_H), .WFLOAT_H_DEL0(WFLOAT_H_DEL0),
        .WFLOAT_H_DEL2(WFLOAT_H_DEL2), .WFLOAT_H_DEL4(WFLOAT_H_DEL4),
        .WFLOAT_H_DEL6(WFLOAT_H_DEL6), .WFLOAT_H_PGM(WFLOAT_H_PGM),
        .WFLOAT_PGM(WFLOAT_PGM), .WL_VSS(WL_VSS),
        .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
endmodule

module SNPS_RF_DP_HD_256x80_ary_edg (.VBN({VBN[31]}), .VBP({VBP[31]}), VDDA,
       VDDP, VDDPI, VSS);
    inout [31:0] VBN;
    supply0 [31:0] VBN;
    inout [31:0] VBP;
    supply0 [31:0] VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VSS;
    supply0 VSS;
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_S0 (VDDA,
        VDDP, VDDPI, VSS, VBP[0], VBN[0]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_S0 (VDDA,
        VDDP, VDDPI, VSS, VBP[1], VBN[1]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_S1 (VDDA,
        VDDP, VDDPI, VSS, VBP[2], VBN[2]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_S1 (VDDA,
        VDDP, VDDPI, VSS, VBP[3], VBN[3]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_S2 (VDDA,
        VDDP, VDDPI, VSS, VBP[4], VBN[4]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_S2 (VDDA,
        VDDP, VDDPI, VSS, VBP[5], VBN[5]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_S3 (VDDA,
        VDDP, VDDPI, VSS, VBP[6], VBN[6]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_S3 (VDDA,
        VDDP, VDDPI, VSS, VBP[7], VBN[7]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_S4 (VDDA,
        VDDP, VDDPI, VSS, VBP[8], VBN[8]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_S4 (VDDA,
        VDDP, VDDPI, VSS, VBP[9], VBN[9]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_S5 (VDDA,
        VDDP, VDDPI, VSS, VBP[10], VBN[10]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_S5 (VDDA,
        VDDP, VDDPI, VSS, VBP[11], VBN[11]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_S6 (VDDA,
        VDDP, VDDPI, VSS, VBP[12], VBN[12]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_S6 (VDDA,
        VDDP, VDDPI, VSS, VBP[13], VBN[13]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_S7 (VDDA,
        VDDP, VDDPI, VSS, VBP[14], VBN[14]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_S7 (VDDA,
        VDDP, VDDPI, VSS, VBP[15], VBN[15]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_F7 (VDDA,
        VDDP, VDDPI, VSS, VBP[16], VBN[16]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_F7 (VDDA,
        VDDP, VDDPI, VSS, VBP[17], VBN[17]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_F6 (VDDA,
        VDDP, VDDPI, VSS, VBP[18], VBN[18]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_F6 (VDDA,
        VDDP, VDDPI, VSS, VBP[19], VBN[19]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_F5 (VDDA,
        VDDP, VDDPI, VSS, VBP[20], VBN[20]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_F5 (VDDA,
        VDDP, VDDPI, VSS, VBP[21], VBN[21]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_F4 (VDDA,
        VDDP, VDDPI, VSS, VBP[22], VBN[22]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_F4 (VDDA,
        VDDP, VDDPI, VSS, VBP[23], VBN[23]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_F3 (VDDA,
        VDDP, VDDPI, VSS, VBP[24], VBN[24]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_F3 (VDDA,
        VDDP, VDDPI, VSS, VBP[25], VBN[25]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_F2 (VDDA,
        VDDP, VDDPI, VSS, VBP[26], VBN[26]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_F2 (VDDA,
        VDDP, VDDPI, VSS, VBP[27], VBN[27]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_F1 (VDDA,
        VDDP, VDDPI, VSS, VBP[28], VBN[28]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_F1 (VDDA,
        VDDP, VDDPI, VSS, VBP[29], VBN[29]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_b_edgel_F0 (VDDA,
        VDDP, VDDPI, VSS, VBP[30], VBN[30]);
    mm17a04_u_hdrf2p_x4dec_edgel X_mm17a04_u_hdrf2p_x4dec_a_edgel_F0 (VDDA,
        VDDP, VDDPI, VSS, VBP[31], VBN[31]);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b (ARYSD, BKRDB, BKRDB_128, CENDP, DECBRD,
       DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR,
       FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB, PBRDB,
       PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD, RMTWR,
       RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI, VDDF,
       VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[0] XBRDB
    // Jumper: PBWRB[0] XBWRB
    // Jumper: PCRDB[0] XCRDB
    // Jumper: PCWRB[0] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a (ARYSD, BKRDB, BKRDB_128, CENDP, DECBRD,
       DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR,
       FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB, PBRDB,
       PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD, RMTWR,
       RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI, VDDF,
       VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[1] XBRDB
    // Jumper: PBWRB[1] XBWRB
    // Jumper: PCRDB[0] XCRDB
    // Jumper: PCWRB[0] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_1 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[2] XBRDB
    // Jumper: PBWRB[2] XBWRB
    // Jumper: PCRDB[0] XCRDB
    // Jumper: PCWRB[0] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_1 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[3] XBRDB
    // Jumper: PBWRB[3] XBWRB
    // Jumper: PCRDB[0] XCRDB
    // Jumper: PCWRB[0] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_2 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[0] XBRDB
    // Jumper: PBWRB[0] XBWRB
    // Jumper: PCRDB[1] XCRDB
    // Jumper: PCWRB[1] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_2 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[1] XBRDB
    // Jumper: PBWRB[1] XBWRB
    // Jumper: PCRDB[1] XCRDB
    // Jumper: PCWRB[1] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_3 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[2] XBRDB
    // Jumper: PBWRB[2] XBWRB
    // Jumper: PCRDB[1] XCRDB
    // Jumper: PCWRB[1] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_3 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[3] XBRDB
    // Jumper: PBWRB[3] XBWRB
    // Jumper: PCRDB[1] XCRDB
    // Jumper: PCWRB[1] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_4 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[0] XBRDB
    // Jumper: PBWRB[0] XBWRB
    // Jumper: PCRDB[2] XCRDB
    // Jumper: PCWRB[2] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_4 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[1] XBRDB
    // Jumper: PBWRB[1] XBWRB
    // Jumper: PCRDB[2] XCRDB
    // Jumper: PCWRB[2] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_5 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[2] XBRDB
    // Jumper: PBWRB[2] XBWRB
    // Jumper: PCRDB[2] XCRDB
    // Jumper: PCWRB[2] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_5 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[3] XBRDB
    // Jumper: PBWRB[3] XBWRB
    // Jumper: PCRDB[2] XCRDB
    // Jumper: PCWRB[2] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_6 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[0] XBRDB
    // Jumper: PBWRB[0] XBWRB
    // Jumper: PCRDB[3] XCRDB
    // Jumper: PCWRB[3] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_6 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[1] XBRDB
    // Jumper: PBWRB[1] XBWRB
    // Jumper: PCRDB[3] XCRDB
    // Jumper: PCWRB[3] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_7 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[2] XBRDB
    // Jumper: PBWRB[2] XBWRB
    // Jumper: PCRDB[3] XCRDB
    // Jumper: PCWRB[3] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_7 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[0] XAWRB
    // Jumper: PBRDB[3] XBRDB
    // Jumper: PBWRB[3] XBWRB
    // Jumper: PCRDB[3] XCRDB
    // Jumper: PCWRB[3] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
        LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2], PAWRB[0],
        PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2], PBRDB[3],
        PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1], PCRDB[2],
        PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL, RFLOAT,
        RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0],
        RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
        WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0], WCLKWR[1],
        WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1], YSELRD[2],
        YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_8 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[0] XBRDB
    // Jumper: PBWRB[0] XBWRB
    // Jumper: PCRDB[0] XCRDB
    // Jumper: PCWRB[0] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_8 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[1] XBRDB
    // Jumper: PBWRB[1] XBWRB
    // Jumper: PCRDB[0] XCRDB
    // Jumper: PCWRB[0] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_9 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[2] XBRDB
    // Jumper: PBWRB[2] XBWRB
    // Jumper: PCRDB[0] XCRDB
    // Jumper: PCWRB[0] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_9 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[3] XBRDB
    // Jumper: PBWRB[3] XBWRB
    // Jumper: PCRDB[0] XCRDB
    // Jumper: PCWRB[0] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_10 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[0] XBRDB
    // Jumper: PBWRB[0] XBWRB
    // Jumper: PCRDB[1] XCRDB
    // Jumper: PCWRB[1] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_10 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[1] XBRDB
    // Jumper: PBWRB[1] XBWRB
    // Jumper: PCRDB[1] XCRDB
    // Jumper: PCWRB[1] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_11 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[2] XBRDB
    // Jumper: PBWRB[2] XBWRB
    // Jumper: PCRDB[1] XCRDB
    // Jumper: PCWRB[1] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_11 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[3] XBRDB
    // Jumper: PBWRB[3] XBWRB
    // Jumper: PCRDB[1] XCRDB
    // Jumper: PCWRB[1] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_12 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[0] XBRDB
    // Jumper: PBWRB[0] XBWRB
    // Jumper: PCRDB[2] XCRDB
    // Jumper: PCWRB[2] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_12 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[1] XBRDB
    // Jumper: PBWRB[1] XBWRB
    // Jumper: PCRDB[2] XCRDB
    // Jumper: PCWRB[2] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_13 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[2] XBRDB
    // Jumper: PBWRB[2] XBWRB
    // Jumper: PCRDB[2] XCRDB
    // Jumper: PCWRB[2] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_13 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[3] XBRDB
    // Jumper: PBWRB[3] XBWRB
    // Jumper: PCRDB[2] XCRDB
    // Jumper: PCWRB[2] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_14 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[0] XBRDB
    // Jumper: PBWRB[0] XBWRB
    // Jumper: PCRDB[3] XCRDB
    // Jumper: PCWRB[3] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_14 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[1] XBRDB
    // Jumper: PBWRB[1] XBWRB
    // Jumper: PCRDB[3] XCRDB
    // Jumper: PCWRB[3] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_b_15 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[2] XBRDB
    // Jumper: PBWRB[2] XBWRB
    // Jumper: PCRDB[3] XCRDB
    // Jumper: PCWRB[3] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_b (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_x4dec_a_15 (ARYSD, BKRDB, BKRDB_128, CENDP,
       DECBRD, DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA, PAWRB,
       PBRDB, PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD,
       RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI,
       VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, XAWRB, XBRDB, XBWRB, XCRDB,
       XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output DECBRD;
    output DECBWR;
    input DECB_HV_RD;
    input DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRA;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [3:0] WLRDB;
    output [3:0] WLRDB_L;
    output [3:0] WLWRB;
    output [3:0] WLWRB_L;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;

    //*** Jumper Report ***
    // Jumper: BKRDB_128 BKRDB_PROG
    // Jumper: DECBRD DECB_HV_RD
    // Jumper: DECBWR DECB_HV_WR
    // Jumper: PAWRB[1] XAWRB
    // Jumper: PBRDB[3] XBRDB
    // Jumper: PBWRB[3] XBWRB
    // Jumper: PCRDB[3] XCRDB
    // Jumper: PCWRB[3] XCWRB
    // Jumper: VDDP VDDF

    mm17a04_u_hdrf2p_x4dec X_mm17a04_u_hdrf2p_x4dec_a (VDDA, VDDAPI, VDDF, VDDP,
        VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, VBP, VBN, DECBRD, DECBWR,
        WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3], WLRDB_L[0], WLRDB_L[1],
        WLRDB_L[2], WLRDB_L[3], WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3],
        WLWRB_L[0], WLWRB_L[1], WLWRB_L[2], WLWRB_L[3], ARYSD, BKRDB, BKRDB_128,
        BKRDB_128, CENDP, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD,
        FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRA[0], LXADRA[1], LXADRA[2],
        PAWRB[0], PAWRB[1], PAWRB[2], PAWRB[3], PBRDB[0], PBRDB[1], PBRDB[2],
        PBRDB[3], PBWRB[0], PBWRB[1], PBWRB[2], PBWRB[3], PCRDB[0], PCRDB[1],
        PCRDB[2], PCRDB[3], PCWRB[0], PCWRB[1], PCWRB[2], PCWRB[3], RBLWA, RDBL,
        RFLOAT, RFLT_RET, RM3CNT, RMTRD[0], RMTRD[1], RMTRD[2], RMTRD[3],
        RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3], RWLB_RD, RWLB_WR, T1TRD, T1TWR,
        TKEEPB, WCLKRD[0], WCLKRD[1], WCLKRD[2], WCLKRD[3], WCLKWR[0],
        WCLKWR[1], WCLKWR[2], WCLKWR[3], WDBL, WFLOAT, YSELRD[0], YSELRD[1],
        YSELRD[2], YSELRD[3], DECB_HV_RD, DECB_HV_WR, XAWRB, XBRDB, XBWRB,
        XCRDB, XCWRB);
endmodule

module SNPS_RF_DP_HD_256x80_ary_xdec (ARYSD, BKRDB, BKRDB_128, CENDP, DECBRD,
       DECBWR, DECB_HV_RD, DECB_HV_WR, DEF1_RD, DEF1_WR, FAST1_RD, FAST1_WR,
       FAST2_RD, FAST2_WR, LCGTL, LOG0, LOG1, LRWMEB, LXADRB, PAWRB, PBRDB,
       PBWRB, PCRDB, PCWRB, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD, RMTWR,
       RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI, VDDF,
       VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL,
       WFLOAT, WLRDB, WLRDB_L, WLWRB, WLWRB_L, .XAWRB({XAWRB[0]}),
       .XBRDB({XBRDB[0]}), .XBWRB({XBWRB[0]}), .XCRDB({XCRDB[0]}),
       .XCWRB({XCWRB[0]}), YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    output [31:0] DECBRD;
    output [31:0] DECBWR;
    input [31:0] DECB_HV_RD;
    input [31:0] DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRB;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    output [127:0] WLRDB;
    output [127:0] WLRDB_L;
    output [127:0] WLWRB;
    output [127:0] WLWRB_L;
    input [31:0] XAWRB;
    input [31:0] XBRDB;
    input [31:0] XBWRB;
    input [31:0] XCRDB;
    input [31:0] XCWRB;
    inout [3:0] YSELRD;
    SNPS_RF_DP_HD_256x80_ary_x4dec_b X_ary_x4dec_b_S0 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP), .DECBRD(DECBRD[0]),
        .DECBWR(DECBWR[0]), .DECB_HV_RD(DECB_HV_RD[0]),
        .DECB_HV_WR(DECB_HV_WR[0]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[3],WLRDB[2],WLRDB[1],WLRDB[0]}),
        .WLRDB_L({WLRDB_L[3],WLRDB_L[2],WLRDB_L[1],WLRDB_L[0]}),
        .WLWRB({WLWRB[3],WLWRB[2],WLWRB[1],WLWRB[0]}),
        .WLWRB_L({WLWRB_L[3],WLWRB_L[2],WLWRB_L[1],WLWRB_L[0]}),
        .XAWRB(XAWRB[0]), .XBRDB(XBRDB[0]), .XBWRB(XBWRB[0]), .XCRDB(XCRDB[0]),
        .XCWRB(XCWRB[0]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a X_ary_x4dec_a_S0 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP), .DECBRD(DECBRD[1]),
        .DECBWR(DECBWR[1]), .DECB_HV_RD(DECB_HV_RD[1]),
        .DECB_HV_WR(DECB_HV_WR[1]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[7],WLRDB[6],WLRDB[5],WLRDB[4]}),
        .WLRDB_L({WLRDB_L[7],WLRDB_L[6],WLRDB_L[5],WLRDB_L[4]}),
        .WLWRB({WLWRB[7],WLWRB[6],WLWRB[5],WLWRB[4]}),
        .WLWRB_L({WLWRB_L[7],WLWRB_L[6],WLWRB_L[5],WLWRB_L[4]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[1]), .XBWRB(PBWRB[1]), .XCRDB(PCRDB[0]),
        .XCWRB(PCWRB[0]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_1 X_ary_x4dec_b_S1 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP), .DECBRD(DECBRD[2]),
        .DECBWR(DECBWR[2]), .DECB_HV_RD(DECB_HV_RD[2]),
        .DECB_HV_WR(DECB_HV_WR[2]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[11],WLRDB[10],WLRDB[9],WLRDB[8]}),
        .WLRDB_L({WLRDB_L[11],WLRDB_L[10],WLRDB_L[9],WLRDB_L[8]}),
        .WLWRB({WLWRB[11],WLWRB[10],WLWRB[9],WLWRB[8]}),
        .WLWRB_L({WLWRB_L[11],WLWRB_L[10],WLWRB_L[9],WLWRB_L[8]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[2]), .XBWRB(PBWRB[2]), .XCRDB(PCRDB[0]),
        .XCWRB(PCWRB[0]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_1 X_ary_x4dec_a_S1 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP), .DECBRD(DECBRD[3]),
        .DECBWR(DECBWR[3]), .DECB_HV_RD(DECB_HV_RD[3]),
        .DECB_HV_WR(DECB_HV_WR[3]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[15],WLRDB[14],WLRDB[13],WLRDB[12]}),
        .WLRDB_L({WLRDB_L[15],WLRDB_L[14],WLRDB_L[13],WLRDB_L[12]}),
        .WLWRB({WLWRB[15],WLWRB[14],WLWRB[13],WLWRB[12]}),
        .WLWRB_L({WLWRB_L[15],WLWRB_L[14],WLWRB_L[13],WLWRB_L[12]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[3]), .XBWRB(PBWRB[3]), .XCRDB(PCRDB[0]),
        .XCWRB(PCWRB[0]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_2 X_ary_x4dec_b_S2 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP), .DECBRD(DECBRD[4]),
        .DECBWR(DECBWR[4]), .DECB_HV_RD(DECB_HV_RD[4]),
        .DECB_HV_WR(DECB_HV_WR[4]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[19],WLRDB[18],WLRDB[17],WLRDB[16]}),
        .WLRDB_L({WLRDB_L[19],WLRDB_L[18],WLRDB_L[17],WLRDB_L[16]}),
        .WLWRB({WLWRB[19],WLWRB[18],WLWRB[17],WLWRB[16]}),
        .WLWRB_L({WLWRB_L[19],WLWRB_L[18],WLWRB_L[17],WLWRB_L[16]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[0]), .XBWRB(PBWRB[0]), .XCRDB(PCRDB[1]),
        .XCWRB(PCWRB[1]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_2 X_ary_x4dec_a_S2 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP), .DECBRD(DECBRD[5]),
        .DECBWR(DECBWR[5]), .DECB_HV_RD(DECB_HV_RD[5]),
        .DECB_HV_WR(DECB_HV_WR[5]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[23],WLRDB[22],WLRDB[21],WLRDB[20]}),
        .WLRDB_L({WLRDB_L[23],WLRDB_L[22],WLRDB_L[21],WLRDB_L[20]}),
        .WLWRB({WLWRB[23],WLWRB[22],WLWRB[21],WLWRB[20]}),
        .WLWRB_L({WLWRB_L[23],WLWRB_L[22],WLWRB_L[21],WLWRB_L[20]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[1]), .XBWRB(PBWRB[1]), .XCRDB(PCRDB[1]),
        .XCWRB(PCWRB[1]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_3 X_ary_x4dec_b_S3 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP), .DECBRD(DECBRD[6]),
        .DECBWR(DECBWR[6]), .DECB_HV_RD(DECB_HV_RD[6]),
        .DECB_HV_WR(DECB_HV_WR[6]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[27],WLRDB[26],WLRDB[25],WLRDB[24]}),
        .WLRDB_L({WLRDB_L[27],WLRDB_L[26],WLRDB_L[25],WLRDB_L[24]}),
        .WLWRB({WLWRB[27],WLWRB[26],WLWRB[25],WLWRB[24]}),
        .WLWRB_L({WLWRB_L[27],WLWRB_L[26],WLWRB_L[25],WLWRB_L[24]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[2]), .XBWRB(PBWRB[2]), .XCRDB(PCRDB[1]),
        .XCWRB(PCWRB[1]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_3 X_ary_x4dec_a_S3 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP), .DECBRD(DECBRD[7]),
        .DECBWR(DECBWR[7]), .DECB_HV_RD(DECB_HV_RD[7]),
        .DECB_HV_WR(DECB_HV_WR[7]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[31],WLRDB[30],WLRDB[29],WLRDB[28]}),
        .WLRDB_L({WLRDB_L[31],WLRDB_L[30],WLRDB_L[29],WLRDB_L[28]}),
        .WLWRB({WLWRB[31],WLWRB[30],WLWRB[29],WLWRB[28]}),
        .WLWRB_L({WLWRB_L[31],WLWRB_L[30],WLWRB_L[29],WLWRB_L[28]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[3]), .XBWRB(PBWRB[3]), .XCRDB(PCRDB[1]),
        .XCWRB(PCWRB[1]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_4 X_ary_x4dec_b_S4 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP), .DECBRD(DECBRD[8]),
        .DECBWR(DECBWR[8]), .DECB_HV_RD(DECB_HV_RD[8]),
        .DECB_HV_WR(DECB_HV_WR[8]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[35],WLRDB[34],WLRDB[33],WLRDB[32]}),
        .WLRDB_L({WLRDB_L[35],WLRDB_L[34],WLRDB_L[33],WLRDB_L[32]}),
        .WLWRB({WLWRB[35],WLWRB[34],WLWRB[33],WLWRB[32]}),
        .WLWRB_L({WLWRB_L[35],WLWRB_L[34],WLWRB_L[33],WLWRB_L[32]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[0]), .XBWRB(PBWRB[0]), .XCRDB(PCRDB[2]),
        .XCWRB(PCWRB[2]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_4 X_ary_x4dec_a_S4 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP), .DECBRD(DECBRD[9]),
        .DECBWR(DECBWR[9]), .DECB_HV_RD(DECB_HV_RD[9]),
        .DECB_HV_WR(DECB_HV_WR[9]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[39],WLRDB[38],WLRDB[37],WLRDB[36]}),
        .WLRDB_L({WLRDB_L[39],WLRDB_L[38],WLRDB_L[37],WLRDB_L[36]}),
        .WLWRB({WLWRB[39],WLWRB[38],WLWRB[37],WLWRB[36]}),
        .WLWRB_L({WLWRB_L[39],WLWRB_L[38],WLWRB_L[37],WLWRB_L[36]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[1]), .XBWRB(PBWRB[1]), .XCRDB(PCRDB[2]),
        .XCWRB(PCWRB[2]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_5 X_ary_x4dec_b_S5 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[10]), .DECBWR(DECBWR[10]), .DECB_HV_RD(DECB_HV_RD[10]),
        .DECB_HV_WR(DECB_HV_WR[10]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[43],WLRDB[42],WLRDB[41],WLRDB[40]}),
        .WLRDB_L({WLRDB_L[43],WLRDB_L[42],WLRDB_L[41],WLRDB_L[40]}),
        .WLWRB({WLWRB[43],WLWRB[42],WLWRB[41],WLWRB[40]}),
        .WLWRB_L({WLWRB_L[43],WLWRB_L[42],WLWRB_L[41],WLWRB_L[40]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[2]), .XBWRB(PBWRB[2]), .XCRDB(PCRDB[2]),
        .XCWRB(PCWRB[2]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_5 X_ary_x4dec_a_S5 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[11]), .DECBWR(DECBWR[11]), .DECB_HV_RD(DECB_HV_RD[11]),
        .DECB_HV_WR(DECB_HV_WR[11]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[47],WLRDB[46],WLRDB[45],WLRDB[44]}),
        .WLRDB_L({WLRDB_L[47],WLRDB_L[46],WLRDB_L[45],WLRDB_L[44]}),
        .WLWRB({WLWRB[47],WLWRB[46],WLWRB[45],WLWRB[44]}),
        .WLWRB_L({WLWRB_L[47],WLWRB_L[46],WLWRB_L[45],WLWRB_L[44]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[3]), .XBWRB(PBWRB[3]), .XCRDB(PCRDB[2]),
        .XCWRB(PCWRB[2]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_6 X_ary_x4dec_b_S6 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[12]), .DECBWR(DECBWR[12]), .DECB_HV_RD(DECB_HV_RD[12]),
        .DECB_HV_WR(DECB_HV_WR[12]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[51],WLRDB[50],WLRDB[49],WLRDB[48]}),
        .WLRDB_L({WLRDB_L[51],WLRDB_L[50],WLRDB_L[49],WLRDB_L[48]}),
        .WLWRB({WLWRB[51],WLWRB[50],WLWRB[49],WLWRB[48]}),
        .WLWRB_L({WLWRB_L[51],WLWRB_L[50],WLWRB_L[49],WLWRB_L[48]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[0]), .XBWRB(PBWRB[0]), .XCRDB(PCRDB[3]),
        .XCWRB(PCWRB[3]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_6 X_ary_x4dec_a_S6 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[13]), .DECBWR(DECBWR[13]), .DECB_HV_RD(DECB_HV_RD[13]),
        .DECB_HV_WR(DECB_HV_WR[13]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[55],WLRDB[54],WLRDB[53],WLRDB[52]}),
        .WLRDB_L({WLRDB_L[55],WLRDB_L[54],WLRDB_L[53],WLRDB_L[52]}),
        .WLWRB({WLWRB[55],WLWRB[54],WLWRB[53],WLWRB[52]}),
        .WLWRB_L({WLWRB_L[55],WLWRB_L[54],WLWRB_L[53],WLWRB_L[52]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[1]), .XBWRB(PBWRB[1]), .XCRDB(PCRDB[3]),
        .XCWRB(PCWRB[3]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_7 X_ary_x4dec_b_S7 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[14]), .DECBWR(DECBWR[14]), .DECB_HV_RD(DECB_HV_RD[14]),
        .DECB_HV_WR(DECB_HV_WR[14]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[59],WLRDB[58],WLRDB[57],WLRDB[56]}),
        .WLRDB_L({WLRDB_L[59],WLRDB_L[58],WLRDB_L[57],WLRDB_L[56]}),
        .WLWRB({WLWRB[59],WLWRB[58],WLWRB[57],WLWRB[56]}),
        .WLWRB_L({WLWRB_L[59],WLWRB_L[58],WLWRB_L[57],WLWRB_L[56]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[2]), .XBWRB(PBWRB[2]), .XCRDB(PCRDB[3]),
        .XCWRB(PCWRB[3]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_7 X_ary_x4dec_a_S7 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[15]), .DECBWR(DECBWR[15]), .DECB_HV_RD(DECB_HV_RD[15]),
        .DECB_HV_WR(DECB_HV_WR[15]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[63],WLRDB[62],WLRDB[61],WLRDB[60]}),
        .WLRDB_L({WLRDB_L[63],WLRDB_L[62],WLRDB_L[61],WLRDB_L[60]}),
        .WLWRB({WLWRB[63],WLWRB[62],WLWRB[61],WLWRB[60]}),
        .WLWRB_L({WLWRB_L[63],WLWRB_L[62],WLWRB_L[61],WLWRB_L[60]}),
        .XAWRB(PAWRB[0]), .XBRDB(PBRDB[3]), .XBWRB(PBWRB[3]), .XCRDB(PCRDB[3]),
        .XCWRB(PCWRB[3]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_8 X_ary_x4dec_b_F7 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[16]), .DECBWR(DECBWR[16]), .DECB_HV_RD(DECB_HV_RD[16]),
        .DECB_HV_WR(DECB_HV_WR[16]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[67],WLRDB[66],WLRDB[65],WLRDB[64]}),
        .WLRDB_L({WLRDB_L[67],WLRDB_L[66],WLRDB_L[65],WLRDB_L[64]}),
        .WLWRB({WLWRB[67],WLWRB[66],WLWRB[65],WLWRB[64]}),
        .WLWRB_L({WLWRB_L[67],WLWRB_L[66],WLWRB_L[65],WLWRB_L[64]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[0]), .XBWRB(PBWRB[0]), .XCRDB(PCRDB[0]),
        .XCWRB(PCWRB[0]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_8 X_ary_x4dec_a_F7 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[17]), .DECBWR(DECBWR[17]), .DECB_HV_RD(DECB_HV_RD[17]),
        .DECB_HV_WR(DECB_HV_WR[17]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[71],WLRDB[70],WLRDB[69],WLRDB[68]}),
        .WLRDB_L({WLRDB_L[71],WLRDB_L[70],WLRDB_L[69],WLRDB_L[68]}),
        .WLWRB({WLWRB[71],WLWRB[70],WLWRB[69],WLWRB[68]}),
        .WLWRB_L({WLWRB_L[71],WLWRB_L[70],WLWRB_L[69],WLWRB_L[68]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[1]), .XBWRB(PBWRB[1]), .XCRDB(PCRDB[0]),
        .XCWRB(PCWRB[0]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_9 X_ary_x4dec_b_F6 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[18]), .DECBWR(DECBWR[18]), .DECB_HV_RD(DECB_HV_RD[18]),
        .DECB_HV_WR(DECB_HV_WR[18]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[75],WLRDB[74],WLRDB[73],WLRDB[72]}),
        .WLRDB_L({WLRDB_L[75],WLRDB_L[74],WLRDB_L[73],WLRDB_L[72]}),
        .WLWRB({WLWRB[75],WLWRB[74],WLWRB[73],WLWRB[72]}),
        .WLWRB_L({WLWRB_L[75],WLWRB_L[74],WLWRB_L[73],WLWRB_L[72]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[2]), .XBWRB(PBWRB[2]), .XCRDB(PCRDB[0]),
        .XCWRB(PCWRB[0]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_9 X_ary_x4dec_a_F6 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[19]), .DECBWR(DECBWR[19]), .DECB_HV_RD(DECB_HV_RD[19]),
        .DECB_HV_WR(DECB_HV_WR[19]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[79],WLRDB[78],WLRDB[77],WLRDB[76]}),
        .WLRDB_L({WLRDB_L[79],WLRDB_L[78],WLRDB_L[77],WLRDB_L[76]}),
        .WLWRB({WLWRB[79],WLWRB[78],WLWRB[77],WLWRB[76]}),
        .WLWRB_L({WLWRB_L[79],WLWRB_L[78],WLWRB_L[77],WLWRB_L[76]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[3]), .XBWRB(PBWRB[3]), .XCRDB(PCRDB[0]),
        .XCWRB(PCWRB[0]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_10 X_ary_x4dec_b_F5 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[20]), .DECBWR(DECBWR[20]), .DECB_HV_RD(DECB_HV_RD[20]),
        .DECB_HV_WR(DECB_HV_WR[20]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[83],WLRDB[82],WLRDB[81],WLRDB[80]}),
        .WLRDB_L({WLRDB_L[83],WLRDB_L[82],WLRDB_L[81],WLRDB_L[80]}),
        .WLWRB({WLWRB[83],WLWRB[82],WLWRB[81],WLWRB[80]}),
        .WLWRB_L({WLWRB_L[83],WLWRB_L[82],WLWRB_L[81],WLWRB_L[80]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[0]), .XBWRB(PBWRB[0]), .XCRDB(PCRDB[1]),
        .XCWRB(PCWRB[1]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_10 X_ary_x4dec_a_F5 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[21]), .DECBWR(DECBWR[21]), .DECB_HV_RD(DECB_HV_RD[21]),
        .DECB_HV_WR(DECB_HV_WR[21]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[87],WLRDB[86],WLRDB[85],WLRDB[84]}),
        .WLRDB_L({WLRDB_L[87],WLRDB_L[86],WLRDB_L[85],WLRDB_L[84]}),
        .WLWRB({WLWRB[87],WLWRB[86],WLWRB[85],WLWRB[84]}),
        .WLWRB_L({WLWRB_L[87],WLWRB_L[86],WLWRB_L[85],WLWRB_L[84]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[1]), .XBWRB(PBWRB[1]), .XCRDB(PCRDB[1]),
        .XCWRB(PCWRB[1]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_11 X_ary_x4dec_b_F4 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[22]), .DECBWR(DECBWR[22]), .DECB_HV_RD(DECB_HV_RD[22]),
        .DECB_HV_WR(DECB_HV_WR[22]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[91],WLRDB[90],WLRDB[89],WLRDB[88]}),
        .WLRDB_L({WLRDB_L[91],WLRDB_L[90],WLRDB_L[89],WLRDB_L[88]}),
        .WLWRB({WLWRB[91],WLWRB[90],WLWRB[89],WLWRB[88]}),
        .WLWRB_L({WLWRB_L[91],WLWRB_L[90],WLWRB_L[89],WLWRB_L[88]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[2]), .XBWRB(PBWRB[2]), .XCRDB(PCRDB[1]),
        .XCWRB(PCWRB[1]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_11 X_ary_x4dec_a_F4 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[23]), .DECBWR(DECBWR[23]), .DECB_HV_RD(DECB_HV_RD[23]),
        .DECB_HV_WR(DECB_HV_WR[23]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[95],WLRDB[94],WLRDB[93],WLRDB[92]}),
        .WLRDB_L({WLRDB_L[95],WLRDB_L[94],WLRDB_L[93],WLRDB_L[92]}),
        .WLWRB({WLWRB[95],WLWRB[94],WLWRB[93],WLWRB[92]}),
        .WLWRB_L({WLWRB_L[95],WLWRB_L[94],WLWRB_L[93],WLWRB_L[92]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[3]), .XBWRB(PBWRB[3]), .XCRDB(PCRDB[1]),
        .XCWRB(PCWRB[1]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_12 X_ary_x4dec_b_F3 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[24]), .DECBWR(DECBWR[24]), .DECB_HV_RD(DECB_HV_RD[24]),
        .DECB_HV_WR(DECB_HV_WR[24]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[99],WLRDB[98],WLRDB[97],WLRDB[96]}),
        .WLRDB_L({WLRDB_L[99],WLRDB_L[98],WLRDB_L[97],WLRDB_L[96]}),
        .WLWRB({WLWRB[99],WLWRB[98],WLWRB[97],WLWRB[96]}),
        .WLWRB_L({WLWRB_L[99],WLWRB_L[98],WLWRB_L[97],WLWRB_L[96]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[0]), .XBWRB(PBWRB[0]), .XCRDB(PCRDB[2]),
        .XCWRB(PCWRB[2]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_12 X_ary_x4dec_a_F3 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[25]), .DECBWR(DECBWR[25]), .DECB_HV_RD(DECB_HV_RD[25]),
        .DECB_HV_WR(DECB_HV_WR[25]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[103],WLRDB[102],WLRDB[101],WLRDB[100]}),
        .WLRDB_L({WLRDB_L[103],WLRDB_L[102],WLRDB_L[101],WLRDB_L[100]}),
        .WLWRB({WLWRB[103],WLWRB[102],WLWRB[101],WLWRB[100]}),
        .WLWRB_L({WLWRB_L[103],WLWRB_L[102],WLWRB_L[101],WLWRB_L[100]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[1]), .XBWRB(PBWRB[1]), .XCRDB(PCRDB[2]),
        .XCWRB(PCWRB[2]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_13 X_ary_x4dec_b_F2 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[26]), .DECBWR(DECBWR[26]), .DECB_HV_RD(DECB_HV_RD[26]),
        .DECB_HV_WR(DECB_HV_WR[26]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[107],WLRDB[106],WLRDB[105],WLRDB[104]}),
        .WLRDB_L({WLRDB_L[107],WLRDB_L[106],WLRDB_L[105],WLRDB_L[104]}),
        .WLWRB({WLWRB[107],WLWRB[106],WLWRB[105],WLWRB[104]}),
        .WLWRB_L({WLWRB_L[107],WLWRB_L[106],WLWRB_L[105],WLWRB_L[104]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[2]), .XBWRB(PBWRB[2]), .XCRDB(PCRDB[2]),
        .XCWRB(PCWRB[2]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_13 X_ary_x4dec_a_F2 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[27]), .DECBWR(DECBWR[27]), .DECB_HV_RD(DECB_HV_RD[27]),
        .DECB_HV_WR(DECB_HV_WR[27]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[111],WLRDB[110],WLRDB[109],WLRDB[108]}),
        .WLRDB_L({WLRDB_L[111],WLRDB_L[110],WLRDB_L[109],WLRDB_L[108]}),
        .WLWRB({WLWRB[111],WLWRB[110],WLWRB[109],WLWRB[108]}),
        .WLWRB_L({WLWRB_L[111],WLWRB_L[110],WLWRB_L[109],WLWRB_L[108]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[3]), .XBWRB(PBWRB[3]), .XCRDB(PCRDB[2]),
        .XCWRB(PCWRB[2]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_14 X_ary_x4dec_b_F1 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[28]), .DECBWR(DECBWR[28]), .DECB_HV_RD(DECB_HV_RD[28]),
        .DECB_HV_WR(DECB_HV_WR[28]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[115],WLRDB[114],WLRDB[113],WLRDB[112]}),
        .WLRDB_L({WLRDB_L[115],WLRDB_L[114],WLRDB_L[113],WLRDB_L[112]}),
        .WLWRB({WLWRB[115],WLWRB[114],WLWRB[113],WLWRB[112]}),
        .WLWRB_L({WLWRB_L[115],WLWRB_L[114],WLWRB_L[113],WLWRB_L[112]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[0]), .XBWRB(PBWRB[0]), .XCRDB(PCRDB[3]),
        .XCWRB(PCWRB[3]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_14 X_ary_x4dec_a_F1 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[29]), .DECBWR(DECBWR[29]), .DECB_HV_RD(DECB_HV_RD[29]),
        .DECB_HV_WR(DECB_HV_WR[29]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[119],WLRDB[118],WLRDB[117],WLRDB[116]}),
        .WLRDB_L({WLRDB_L[119],WLRDB_L[118],WLRDB_L[117],WLRDB_L[116]}),
        .WLWRB({WLWRB[119],WLWRB[118],WLWRB[117],WLWRB[116]}),
        .WLWRB_L({WLWRB_L[119],WLWRB_L[118],WLWRB_L[117],WLWRB_L[116]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[1]), .XBWRB(PBWRB[1]), .XCRDB(PCRDB[3]),
        .XCWRB(PCWRB[3]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_b_15 X_ary_x4dec_b_F0 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[30]), .DECBWR(DECBWR[30]), .DECB_HV_RD(DECB_HV_RD[30]),
        .DECB_HV_WR(DECB_HV_WR[30]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[123],WLRDB[122],WLRDB[121],WLRDB[120]}),
        .WLRDB_L({WLRDB_L[123],WLRDB_L[122],WLRDB_L[121],WLRDB_L[120]}),
        .WLWRB({WLWRB[123],WLWRB[122],WLWRB[121],WLWRB[120]}),
        .WLWRB_L({WLWRB_L[123],WLWRB_L[122],WLWRB_L[121],WLWRB_L[120]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[2]), .XBWRB(PBWRB[2]), .XCRDB(PCRDB[3]),
        .XCWRB(PCWRB[3]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_x4dec_a_15 X_ary_x4dec_a_F0 (.ARYSD(ARYSD),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD(DECBRD[31]), .DECBWR(DECBWR[31]), .DECB_HV_RD(DECB_HV_RD[31]),
        .DECB_HV_WR(DECB_HV_WR[31]), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRA({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WLRDB({WLRDB[127],WLRDB[126],WLRDB[125],WLRDB[124]}),
        .WLRDB_L({WLRDB_L[127],WLRDB_L[126],WLRDB_L[125],WLRDB_L[124]}),
        .WLWRB({WLWRB[127],WLWRB[126],WLWRB[125],WLWRB[124]}),
        .WLWRB_L({WLWRB_L[127],WLWRB_L[126],WLWRB_L[125],WLWRB_L[124]}),
        .XAWRB(PAWRB[1]), .XBRDB(PBRDB[3]), .XBWRB(PBWRB[3]), .XCRDB(PCRDB[3]),
        .XCWRB(PCWRB[3]), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
endmodule

module SNPS_RF_DP_HD_256x80_ary_buf (.DMY_EDGE_LT({DMY_EDGE_LT[32],
       DMY_EDGE_LT[1]}), LCGTV, RASSB, VBN, VBP, VDDA, VDDP, VDDPI, VDDWL_RD,
       VDDWL_WR, VSS, WLRD, WLRDB, WLWR, WLWRB);
    inout [32:0] DMY_EDGE_LT;
    inout LCGTV;
    inout [1:0] RASSB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    output [127:0] WLRD;
    input [127:0] WLRDB;
    output [127:0] WLWR;
    input [127:0] WLWRB;
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_S0 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[0], WLRD[1], WLRD[2], WLRD[3],
        WLWR[0], WLWR[1], WLWR[2], WLWR[3], DMY_EDGE_LT[1], DMY_EDGE_LT[0],
        LCGTV, RASSB[0], RASSB[1], WLRDB[0], WLRDB[1], WLRDB[2], WLRDB[3],
        WLWRB[0], WLWRB[1], WLWRB[2], WLWRB[3]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_S0 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[4], WLRD[5], WLRD[6], WLRD[7],
        WLWR[4], WLWR[5], WLWR[6], WLWR[7], DMY_EDGE_LT[0], DMY_EDGE_LT[2],
        LCGTV, RASSB[0], RASSB[1], WLRDB[4], WLRDB[5], WLRDB[6], WLRDB[7],
        WLWRB[4], WLWRB[5], WLWRB[6], WLWRB[7]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_S1 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[8], WLRD[9], WLRD[10], WLRD[11],
        WLWR[8], WLWR[9], WLWR[10], WLWR[11], DMY_EDGE_LT[2], DMY_EDGE_LT[3],
        LCGTV, RASSB[0], RASSB[1], WLRDB[8], WLRDB[9], WLRDB[10], WLRDB[11],
        WLWRB[8], WLWRB[9], WLWRB[10], WLWRB[11]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_S1 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[12], WLRD[13], WLRD[14],
        WLRD[15], WLWR[12], WLWR[13], WLWR[14], WLWR[15], DMY_EDGE_LT[3],
        DMY_EDGE_LT[4], LCGTV, RASSB[0], RASSB[1], WLRDB[12], WLRDB[13],
        WLRDB[14], WLRDB[15], WLWRB[12], WLWRB[13], WLWRB[14], WLWRB[15]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_S2 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[16], WLRD[17], WLRD[18],
        WLRD[19], WLWR[16], WLWR[17], WLWR[18], WLWR[19], DMY_EDGE_LT[4],
        DMY_EDGE_LT[5], LCGTV, RASSB[0], RASSB[1], WLRDB[16], WLRDB[17],
        WLRDB[18], WLRDB[19], WLWRB[16], WLWRB[17], WLWRB[18], WLWRB[19]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_S2 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[20], WLRD[21], WLRD[22],
        WLRD[23], WLWR[20], WLWR[21], WLWR[22], WLWR[23], DMY_EDGE_LT[5],
        DMY_EDGE_LT[6], LCGTV, RASSB[0], RASSB[1], WLRDB[20], WLRDB[21],
        WLRDB[22], WLRDB[23], WLWRB[20], WLWRB[21], WLWRB[22], WLWRB[23]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_S3 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[24], WLRD[25], WLRD[26],
        WLRD[27], WLWR[24], WLWR[25], WLWR[26], WLWR[27], DMY_EDGE_LT[6],
        DMY_EDGE_LT[7], LCGTV, RASSB[0], RASSB[1], WLRDB[24], WLRDB[25],
        WLRDB[26], WLRDB[27], WLWRB[24], WLWRB[25], WLWRB[26], WLWRB[27]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_S3 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[28], WLRD[29], WLRD[30],
        WLRD[31], WLWR[28], WLWR[29], WLWR[30], WLWR[31], DMY_EDGE_LT[7],
        DMY_EDGE_LT[8], LCGTV, RASSB[0], RASSB[1], WLRDB[28], WLRDB[29],
        WLRDB[30], WLRDB[31], WLWRB[28], WLWRB[29], WLWRB[30], WLWRB[31]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_S4 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[32], WLRD[33], WLRD[34],
        WLRD[35], WLWR[32], WLWR[33], WLWR[34], WLWR[35], DMY_EDGE_LT[8],
        DMY_EDGE_LT[9], LCGTV, RASSB[0], RASSB[1], WLRDB[32], WLRDB[33],
        WLRDB[34], WLRDB[35], WLWRB[32], WLWRB[33], WLWRB[34], WLWRB[35]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_S4 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[36], WLRD[37], WLRD[38],
        WLRD[39], WLWR[36], WLWR[37], WLWR[38], WLWR[39], DMY_EDGE_LT[9],
        DMY_EDGE_LT[10], LCGTV, RASSB[0], RASSB[1], WLRDB[36], WLRDB[37],
        WLRDB[38], WLRDB[39], WLWRB[36], WLWRB[37], WLWRB[38], WLWRB[39]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_S5 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[40], WLRD[41], WLRD[42],
        WLRD[43], WLWR[40], WLWR[41], WLWR[42], WLWR[43], DMY_EDGE_LT[10],
        DMY_EDGE_LT[11], LCGTV, RASSB[0], RASSB[1], WLRDB[40], WLRDB[41],
        WLRDB[42], WLRDB[43], WLWRB[40], WLWRB[41], WLWRB[42], WLWRB[43]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_S5 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[44], WLRD[45], WLRD[46],
        WLRD[47], WLWR[44], WLWR[45], WLWR[46], WLWR[47], DMY_EDGE_LT[11],
        DMY_EDGE_LT[12], LCGTV, RASSB[0], RASSB[1], WLRDB[44], WLRDB[45],
        WLRDB[46], WLRDB[47], WLWRB[44], WLWRB[45], WLWRB[46], WLWRB[47]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_S6 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[48], WLRD[49], WLRD[50],
        WLRD[51], WLWR[48], WLWR[49], WLWR[50], WLWR[51], DMY_EDGE_LT[12],
        DMY_EDGE_LT[13], LCGTV, RASSB[0], RASSB[1], WLRDB[48], WLRDB[49],
        WLRDB[50], WLRDB[51], WLWRB[48], WLWRB[49], WLWRB[50], WLWRB[51]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_S6 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[52], WLRD[53], WLRD[54],
        WLRD[55], WLWR[52], WLWR[53], WLWR[54], WLWR[55], DMY_EDGE_LT[13],
        DMY_EDGE_LT[14], LCGTV, RASSB[0], RASSB[1], WLRDB[52], WLRDB[53],
        WLRDB[54], WLRDB[55], WLWRB[52], WLWRB[53], WLWRB[54], WLWRB[55]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_S7 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[56], WLRD[57], WLRD[58],
        WLRD[59], WLWR[56], WLWR[57], WLWR[58], WLWR[59], DMY_EDGE_LT[14],
        DMY_EDGE_LT[15], LCGTV, RASSB[0], RASSB[1], WLRDB[56], WLRDB[57],
        WLRDB[58], WLRDB[59], WLWRB[56], WLWRB[57], WLWRB[58], WLWRB[59]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_S7 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[60], WLRD[61], WLRD[62],
        WLRD[63], WLWR[60], WLWR[61], WLWR[62], WLWR[63], DMY_EDGE_LT[15],
        DMY_EDGE_LT[16], LCGTV, RASSB[0], RASSB[1], WLRDB[60], WLRDB[61],
        WLRDB[62], WLRDB[63], WLWRB[60], WLWRB[61], WLWRB[62], WLWRB[63]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_F7 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[64], WLRD[65], WLRD[66],
        WLRD[67], WLWR[64], WLWR[65], WLWR[66], WLWR[67], DMY_EDGE_LT[16],
        DMY_EDGE_LT[17], LCGTV, RASSB[0], RASSB[1], WLRDB[64], WLRDB[65],
        WLRDB[66], WLRDB[67], WLWRB[64], WLWRB[65], WLWRB[66], WLWRB[67]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_F7 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[68], WLRD[69], WLRD[70],
        WLRD[71], WLWR[68], WLWR[69], WLWR[70], WLWR[71], DMY_EDGE_LT[17],
        DMY_EDGE_LT[18], LCGTV, RASSB[0], RASSB[1], WLRDB[68], WLRDB[69],
        WLRDB[70], WLRDB[71], WLWRB[68], WLWRB[69], WLWRB[70], WLWRB[71]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_F6 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[72], WLRD[73], WLRD[74],
        WLRD[75], WLWR[72], WLWR[73], WLWR[74], WLWR[75], DMY_EDGE_LT[18],
        DMY_EDGE_LT[19], LCGTV, RASSB[0], RASSB[1], WLRDB[72], WLRDB[73],
        WLRDB[74], WLRDB[75], WLWRB[72], WLWRB[73], WLWRB[74], WLWRB[75]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_F6 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[76], WLRD[77], WLRD[78],
        WLRD[79], WLWR[76], WLWR[77], WLWR[78], WLWR[79], DMY_EDGE_LT[19],
        DMY_EDGE_LT[20], LCGTV, RASSB[0], RASSB[1], WLRDB[76], WLRDB[77],
        WLRDB[78], WLRDB[79], WLWRB[76], WLWRB[77], WLWRB[78], WLWRB[79]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_F5 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[80], WLRD[81], WLRD[82],
        WLRD[83], WLWR[80], WLWR[81], WLWR[82], WLWR[83], DMY_EDGE_LT[20],
        DMY_EDGE_LT[21], LCGTV, RASSB[0], RASSB[1], WLRDB[80], WLRDB[81],
        WLRDB[82], WLRDB[83], WLWRB[80], WLWRB[81], WLWRB[82], WLWRB[83]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_F5 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[84], WLRD[85], WLRD[86],
        WLRD[87], WLWR[84], WLWR[85], WLWR[86], WLWR[87], DMY_EDGE_LT[21],
        DMY_EDGE_LT[22], LCGTV, RASSB[0], RASSB[1], WLRDB[84], WLRDB[85],
        WLRDB[86], WLRDB[87], WLWRB[84], WLWRB[85], WLWRB[86], WLWRB[87]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_F4 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[88], WLRD[89], WLRD[90],
        WLRD[91], WLWR[88], WLWR[89], WLWR[90], WLWR[91], DMY_EDGE_LT[22],
        DMY_EDGE_LT[23], LCGTV, RASSB[0], RASSB[1], WLRDB[88], WLRDB[89],
        WLRDB[90], WLRDB[91], WLWRB[88], WLWRB[89], WLWRB[90], WLWRB[91]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_F4 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[92], WLRD[93], WLRD[94],
        WLRD[95], WLWR[92], WLWR[93], WLWR[94], WLWR[95], DMY_EDGE_LT[23],
        DMY_EDGE_LT[24], LCGTV, RASSB[0], RASSB[1], WLRDB[92], WLRDB[93],
        WLRDB[94], WLRDB[95], WLWRB[92], WLWRB[93], WLWRB[94], WLWRB[95]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_F3 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[96], WLRD[97], WLRD[98],
        WLRD[99], WLWR[96], WLWR[97], WLWR[98], WLWR[99], DMY_EDGE_LT[24],
        DMY_EDGE_LT[25], LCGTV, RASSB[0], RASSB[1], WLRDB[96], WLRDB[97],
        WLRDB[98], WLRDB[99], WLWRB[96], WLWRB[97], WLWRB[98], WLWRB[99]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_F3 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[100], WLRD[101], WLRD[102],
        WLRD[103], WLWR[100], WLWR[101], WLWR[102], WLWR[103], DMY_EDGE_LT[25],
        DMY_EDGE_LT[26], LCGTV, RASSB[0], RASSB[1], WLRDB[100], WLRDB[101],
        WLRDB[102], WLRDB[103], WLWRB[100], WLWRB[101], WLWRB[102], WLWRB[103]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_F2 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[104], WLRD[105], WLRD[106],
        WLRD[107], WLWR[104], WLWR[105], WLWR[106], WLWR[107], DMY_EDGE_LT[26],
        DMY_EDGE_LT[27], LCGTV, RASSB[0], RASSB[1], WLRDB[104], WLRDB[105],
        WLRDB[106], WLRDB[107], WLWRB[104], WLWRB[105], WLWRB[106], WLWRB[107]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_F2 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[108], WLRD[109], WLRD[110],
        WLRD[111], WLWR[108], WLWR[109], WLWR[110], WLWR[111], DMY_EDGE_LT[27],
        DMY_EDGE_LT[28], LCGTV, RASSB[0], RASSB[1], WLRDB[108], WLRDB[109],
        WLRDB[110], WLRDB[111], WLWRB[108], WLWRB[109], WLWRB[110], WLWRB[111]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_F1 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[112], WLRD[113], WLRD[114],
        WLRD[115], WLWR[112], WLWR[113], WLWR[114], WLWR[115], DMY_EDGE_LT[28],
        DMY_EDGE_LT[29], LCGTV, RASSB[0], RASSB[1], WLRDB[112], WLRDB[113],
        WLRDB[114], WLRDB[115], WLWRB[112], WLWRB[113], WLWRB[114], WLWRB[115]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_F1 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[116], WLRD[117], WLRD[118],
        WLRD[119], WLWR[116], WLWR[117], WLWR[118], WLWR[119], DMY_EDGE_LT[29],
        DMY_EDGE_LT[30], LCGTV, RASSB[0], RASSB[1], WLRDB[116], WLRDB[117],
        WLRDB[118], WLRDB[119], WLWRB[116], WLWRB[117], WLWRB[118], WLWRB[119]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_b_F0 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[120], WLRD[121], WLRD[122],
        WLRD[123], WLWR[120], WLWR[121], WLWR[122], WLWR[123], DMY_EDGE_LT[30],
        DMY_EDGE_LT[31], LCGTV, RASSB[0], RASSB[1], WLRDB[120], WLRDB[121],
        WLRDB[122], WLRDB[123], WLWRB[120], WLWRB[121], WLWRB[122], WLWRB[123]);
    mm17a04_u_hdrf2p_x4buf X_mm17a04_u_hdrf2p_x4buf_a_F0 (VDDA, VDDP, VDDPI,
        VDDWL_RD, VDDWL_WR, VSS, VBP, VBN, WLRD[124], WLRD[125], WLRD[126],
        WLRD[127], WLWR[124], WLWR[125], WLWR[126], WLWR[127], DMY_EDGE_LT[31],
        DMY_EDGE_LT[32], LCGTV, RASSB[0], RASSB[1], WLRDB[124], WLRDB[125],
        WLRDB[126], WLRDB[127], WLWRB[124], WLWRB[125], WLWRB[126], WLWRB[127]);
endmodule

module SNPS_RF_DP_HD_256x80_ary_buf_lsh (DMY_EDGE_LT, LCGTV, RASSB_H, VBN, VBP,
       VDDA, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, WLRD, WLRDB, WLWR, WLWRB);
    inout [1:0] DMY_EDGE_LT;
    inout LCGTV;
    inout [1:0] RASSB_H;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout VSS;
    supply0 VSS;
    output [127:0] WLRD;
    input [127:0] WLRDB;
    output [127:0] WLWR;
    input [127:0] WLWRB;
    SNPS_RF_DP_HD_256x80_ary_buf X_ary_buf
        (.DMY_EDGE_LT({DMY_EDGE_LT[1],DMY_EDGE_LT[0]}), .LCGTV(LCGTV),
        .RASSB({RASSB_H[1],RASSB_H[0]}), .VBN(VBN), .VBP(VBP), .VDDA(VDDA),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS(VSS),
        .WLRD({WLRD[127],WLRD[126],WLRD[125],WLRD[124],WLRD[123],WLRD[122],WLRD[121],WLRD[120],WLRD[119],WLRD[118],WLRD[117],WLRD[116],WLRD[115],WLRD[114],WLRD[113],WLRD[112],WLRD[111],WLRD[110],WLRD[109],WLRD[108],WLRD[107],WLRD[106],WLRD[105],WLRD[104],WLRD[103],WLRD[102],WLRD[101],WLRD[100],WLRD[99],WLRD[98],WLRD[97],WLRD[96],WLRD[95],WLRD[94],WLRD[93],WLRD[92],WLRD[91],WLRD[90],WLRD[89],WLRD[88],WLRD[87],WLRD[86],WLRD[85],WLRD[84],WLRD[83],WLRD[82],WLRD[81],WLRD[80],WLRD[79],WLRD[78],WLRD[77],WLRD[76],WLRD[75],WLRD[74],WLRD[73],WLRD[72],WLRD[71],WLRD[70],WLRD[69],WLRD[68],WLRD[67],WLRD[66],WLRD[65],WLRD[64],WLRD[63],WLRD[62],WLRD[61],WLRD[60],WLRD[59],WLRD[58],WLRD[57],WLRD[56],WLRD[55],WLRD[54],WLRD[53],WLRD[52],WLRD[51],WLRD[50],WLRD[49],WLRD[48],WLRD[47],WLRD[46],WLRD[45],WLRD[44],WLRD[43],WLRD[42],WLRD[41],WLRD[40],WLRD[39],WLRD[38],WLRD[37],WLRD[36],WLRD[35],WLRD[34],WLRD[33],WLRD[32],WLRD[31],WLRD[30],WLRD[29],WLRD[28],WLRD[27],WLRD[26],WLRD[25],WLRD[24],WLRD[23],WLRD[22],WLRD[21],WLRD[20],WLRD[19],WLRD[18],WLRD[17],WLRD[16],WLRD[15],WLRD[14],WLRD[13],WLRD[12],WLRD[11],WLRD[10],WLRD[9],WLRD[8],WLRD[7],WLRD[6],WLRD[5],WLRD[4],WLRD[3],WLRD[2],WLRD[1],WLRD[0]}),
        .WLRDB({WLRDB[127],WLRDB[126],WLRDB[125],WLRDB[124],WLRDB[123],WLRDB[122],WLRDB[121],WLRDB[120],WLRDB[119],WLRDB[118],WLRDB[117],WLRDB[116],WLRDB[115],WLRDB[114],WLRDB[113],WLRDB[112],WLRDB[111],WLRDB[110],WLRDB[109],WLRDB[108],WLRDB[107],WLRDB[106],WLRDB[105],WLRDB[104],WLRDB[103],WLRDB[102],WLRDB[101],WLRDB[100],WLRDB[99],WLRDB[98],WLRDB[97],WLRDB[96],WLRDB[95],WLRDB[94],WLRDB[93],WLRDB[92],WLRDB[91],WLRDB[90],WLRDB[89],WLRDB[88],WLRDB[87],WLRDB[86],WLRDB[85],WLRDB[84],WLRDB[83],WLRDB[82],WLRDB[81],WLRDB[80],WLRDB[79],WLRDB[78],WLRDB[77],WLRDB[76],WLRDB[75],WLRDB[74],WLRDB[73],WLRDB[72],WLRDB[71],WLRDB[70],WLRDB[69],WLRDB[68],WLRDB[67],WLRDB[66],WLRDB[65],WLRDB[64],WLRDB[63],WLRDB[62],WLRDB[61],WLRDB[60],WLRDB[59],WLRDB[58],WLRDB[57],WLRDB[56],WLRDB[55],WLRDB[54],WLRDB[53],WLRDB[52],WLRDB[51],WLRDB[50],WLRDB[49],WLRDB[48],WLRDB[47],WLRDB[46],WLRDB[45],WLRDB[44],WLRDB[43],WLRDB[42],WLRDB[41],WLRDB[40],WLRDB[39],WLRDB[38],WLRDB[37],WLRDB[36],WLRDB[35],WLRDB[34],WLRDB[33],WLRDB[32],WLRDB[31],WLRDB[30],WLRDB[29],WLRDB[28],WLRDB[27],WLRDB[26],WLRDB[25],WLRDB[24],WLRDB[23],WLRDB[22],WLRDB[21],WLRDB[20],WLRDB[19],WLRDB[18],WLRDB[17],WLRDB[16],WLRDB[15],WLRDB[14],WLRDB[13],WLRDB[12],WLRDB[11],WLRDB[10],WLRDB[9],WLRDB[8],WLRDB[7],WLRDB[6],WLRDB[5],WLRDB[4],WLRDB[3],WLRDB[2],WLRDB[1],WLRDB[0]}),
        .WLWR({WLWR[127],WLWR[126],WLWR[125],WLWR[124],WLWR[123],WLWR[122],WLWR[121],WLWR[120],WLWR[119],WLWR[118],WLWR[117],WLWR[116],WLWR[115],WLWR[114],WLWR[113],WLWR[112],WLWR[111],WLWR[110],WLWR[109],WLWR[108],WLWR[107],WLWR[106],WLWR[105],WLWR[104],WLWR[103],WLWR[102],WLWR[101],WLWR[100],WLWR[99],WLWR[98],WLWR[97],WLWR[96],WLWR[95],WLWR[94],WLWR[93],WLWR[92],WLWR[91],WLWR[90],WLWR[89],WLWR[88],WLWR[87],WLWR[86],WLWR[85],WLWR[84],WLWR[83],WLWR[82],WLWR[81],WLWR[80],WLWR[79],WLWR[78],WLWR[77],WLWR[76],WLWR[75],WLWR[74],WLWR[73],WLWR[72],WLWR[71],WLWR[70],WLWR[69],WLWR[68],WLWR[67],WLWR[66],WLWR[65],WLWR[64],WLWR[63],WLWR[62],WLWR[61],WLWR[60],WLWR[59],WLWR[58],WLWR[57],WLWR[56],WLWR[55],WLWR[54],WLWR[53],WLWR[52],WLWR[51],WLWR[50],WLWR[49],WLWR[48],WLWR[47],WLWR[46],WLWR[45],WLWR[44],WLWR[43],WLWR[42],WLWR[41],WLWR[40],WLWR[39],WLWR[38],WLWR[37],WLWR[36],WLWR[35],WLWR[34],WLWR[33],WLWR[32],WLWR[31],WLWR[30],WLWR[29],WLWR[28],WLWR[27],WLWR[26],WLWR[25],WLWR[24],WLWR[23],WLWR[22],WLWR[21],WLWR[20],WLWR[19],WLWR[18],WLWR[17],WLWR[16],WLWR[15],WLWR[14],WLWR[13],WLWR[12],WLWR[11],WLWR[10],WLWR[9],WLWR[8],WLWR[7],WLWR[6],WLWR[5],WLWR[4],WLWR[3],WLWR[2],WLWR[1],WLWR[0]}),
        .WLWRB({WLWRB[127],WLWRB[126],WLWRB[125],WLWRB[124],WLWRB[123],WLWRB[122],WLWRB[121],WLWRB[120],WLWRB[119],WLWRB[118],WLWRB[117],WLWRB[116],WLWRB[115],WLWRB[114],WLWRB[113],WLWRB[112],WLWRB[111],WLWRB[110],WLWRB[109],WLWRB[108],WLWRB[107],WLWRB[106],WLWRB[105],WLWRB[104],WLWRB[103],WLWRB[102],WLWRB[101],WLWRB[100],WLWRB[99],WLWRB[98],WLWRB[97],WLWRB[96],WLWRB[95],WLWRB[94],WLWRB[93],WLWRB[92],WLWRB[91],WLWRB[90],WLWRB[89],WLWRB[88],WLWRB[87],WLWRB[86],WLWRB[85],WLWRB[84],WLWRB[83],WLWRB[82],WLWRB[81],WLWRB[80],WLWRB[79],WLWRB[78],WLWRB[77],WLWRB[76],WLWRB[75],WLWRB[74],WLWRB[73],WLWRB[72],WLWRB[71],WLWRB[70],WLWRB[69],WLWRB[68],WLWRB[67],WLWRB[66],WLWRB[65],WLWRB[64],WLWRB[63],WLWRB[62],WLWRB[61],WLWRB[60],WLWRB[59],WLWRB[58],WLWRB[57],WLWRB[56],WLWRB[55],WLWRB[54],WLWRB[53],WLWRB[52],WLWRB[51],WLWRB[50],WLWRB[49],WLWRB[48],WLWRB[47],WLWRB[46],WLWRB[45],WLWRB[44],WLWRB[43],WLWRB[42],WLWRB[41],WLWRB[40],WLWRB[39],WLWRB[38],WLWRB[37],WLWRB[36],WLWRB[35],WLWRB[34],WLWRB[33],WLWRB[32],WLWRB[31],WLWRB[30],WLWRB[29],WLWRB[28],WLWRB[27],WLWRB[26],WLWRB[25],WLWRB[24],WLWRB[23],WLWRB[22],WLWRB[21],WLWRB[20],WLWRB[19],WLWRB[18],WLWRB[17],WLWRB[16],WLWRB[15],WLWRB[14],WLWRB[13],WLWRB[12],WLWRB[11],WLWRB[10],WLWRB[9],WLWRB[8],WLWRB[7],WLWRB[6],WLWRB[5],WLWRB[4],WLWRB[3],WLWRB[2],WLWRB[1],WLWRB[0]}));
endmodule

module SNPS_RF_DP_HD_256x80_ary_cnt (ARYSD, BKRDB, BKRDB_128, CENDP, DEF1_RD,
       DEF1_WR, DMY_EDGE_LT, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR, LCGTL,
       LCGTV, LOG0, LOG1, LRWMEB, LXADRB, PAWRB, PBRDB, PBWRB, PCRDB, PCWRB,
       RASSB_H, RBLWA, RDBL, RFLOAT, RFLT_RET, RM3CNT, RMTRD, RMTWR, RWLB_RD,
       RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA, VDDAPI, VDDF, VDDP, VDDPI,
       VDDWL_RD, VDDWL_WR, VSS, VSSWL, WCLKRD, WCLKWR, WDBL, WFLOAT, WLRD_H,
       WLWR_H, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB, YSELRD);
    inout ARYSD;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    wire [31:0] DECBRD;
    wire [31:0] DECBWR;
    wire [31:0] DECB_HV_RD;
    wire [31:0] DECB_HV_WR;
    inout DEF1_RD;
    inout DEF1_WR;
    inout [1:0] DMY_EDGE_LT;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout LCGTV;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [2:0] LXADRB;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout [1:0] RASSB_H;
    inout RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout [2:0] VBN;
    supply0 [2:0] VBN;
    inout [2:0] VBP;
    supply0 [2:0] VBP;
    inout [2:0] VDDA;
    supply1 [2:0] VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout [2:0] VDDP;
    supply1 [2:0] VDDP;
    inout [2:0] VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout [2:0] VSS;
    supply0 [2:0] VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    wire [127:0] WLRDB;
    wire [127:0] WLRDB_L;
    output [127:0] WLRD_H;
    wire [127:0] WLWRB;
    wire [127:0] WLWRB_L;
    output [127:0] WLWR_H;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;
    SNPS_RF_DP_HD_256x80_ary_edg X_ary_edg (.VBN({VBN[0]}), .VBP({VBP[0]}),
        .VDDA(VDDA[0]), .VDDP(VDDP[0]), .VDDPI(VDDPI[0]), .VSS(VSS[0]));
    SNPS_RF_DP_HD_256x80_ary_xdec X_ary_xdec (.ARYSD(ARYSD), .BKRDB(BKRDB),
        .BKRDB_128(BKRDB_128), .CENDP(CENDP),
        .DECBRD({DECBRD[31],DECBRD[30],DECBRD[29],DECBRD[28],DECBRD[27],DECBRD[26],DECBRD[25],DECBRD[24],DECBRD[23],DECBRD[22],DECBRD[21],DECBRD[20],DECBRD[19],DECBRD[18],DECBRD[17],DECBRD[16],DECBRD[15],DECBRD[14],DECBRD[13],DECBRD[12],DECBRD[11],DECBRD[10],DECBRD[9],DECBRD[8],DECBRD[7],DECBRD[6],DECBRD[5],DECBRD[4],DECBRD[3],DECBRD[2],DECBRD[1],DECBRD[0]}),
        .DECBWR({DECBWR[31],DECBWR[30],DECBWR[29],DECBWR[28],DECBWR[27],DECBWR[26],DECBWR[25],DECBWR[24],DECBWR[23],DECBWR[22],DECBWR[21],DECBWR[20],DECBWR[19],DECBWR[18],DECBWR[17],DECBWR[16],DECBWR[15],DECBWR[14],DECBWR[13],DECBWR[12],DECBWR[11],DECBWR[10],DECBWR[9],DECBWR[8],DECBWR[7],DECBWR[6],DECBWR[5],DECBWR[4],DECBWR[3],DECBWR[2],DECBWR[1],DECBWR[0]}),
        .DECB_HV_RD({DECBRD[31],DECBRD[30],DECBRD[29],DECBRD[28],DECBRD[27],DECBRD[26],DECBRD[25],DECBRD[24],DECBRD[23],DECBRD[22],DECBRD[21],DECBRD[20],DECBRD[19],DECBRD[18],DECBRD[17],DECBRD[16],DECBRD[15],DECBRD[14],DECBRD[13],DECBRD[12],DECBRD[11],DECBRD[10],DECBRD[9],DECBRD[8],DECBRD[7],DECBRD[6],DECBRD[5],DECBRD[4],DECBRD[3],DECBRD[2],DECBRD[1],DECBRD[0]}),
        .DECB_HV_WR({DECBWR[31],DECBWR[30],DECBWR[29],DECBWR[28],DECBWR[27],DECBWR[26],DECBWR[25],DECBWR[24],DECBWR[23],DECBWR[22],DECBWR[21],DECBWR[20],DECBWR[19],DECBWR[18],DECBWR[17],DECBWR[16],DECBWR[15],DECBWR[14],DECBWR[13],DECBWR[12],DECBWR[11],DECBWR[10],DECBWR[9],DECBWR[8],DECBWR[7],DECBWR[6],DECBWR[5],DECBWR[4],DECBWR[3],DECBWR[2],DECBWR[1],DECBWR[0]}),
        .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR), .FAST1_RD(FAST1_RD),
        .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD), .FAST2_WR(FAST2_WR),
        .LCGTL(LCGTL), .LOG0(LOG0), .LOG1(LOG1), .LRWMEB(LRWMEB),
        .LXADRB({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .RBLWA(RBLWA),
        .RDBL(RDBL), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN[1]), .VBP(VBP[1]), .VDDA(VDDA[1]), .VDDAPI(VDDAPI),
        .VDDF(VDDF), .VDDP(VDDP[1]), .VDDPI(VDDPI[1]), .VDDWL_RD(VDDWL_RD),
        .VDDWL_WR(VDDWL_WR), .VSS(VSS[1]), .VSSWL(VSSWL),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT),
        .WLRDB({WLRDB[127],WLRDB[126],WLRDB[125],WLRDB[124],WLRDB[123],WLRDB[122],WLRDB[121],WLRDB[120],WLRDB[119],WLRDB[118],WLRDB[117],WLRDB[116],WLRDB[115],WLRDB[114],WLRDB[113],WLRDB[112],WLRDB[111],WLRDB[110],WLRDB[109],WLRDB[108],WLRDB[107],WLRDB[106],WLRDB[105],WLRDB[104],WLRDB[103],WLRDB[102],WLRDB[101],WLRDB[100],WLRDB[99],WLRDB[98],WLRDB[97],WLRDB[96],WLRDB[95],WLRDB[94],WLRDB[93],WLRDB[92],WLRDB[91],WLRDB[90],WLRDB[89],WLRDB[88],WLRDB[87],WLRDB[86],WLRDB[85],WLRDB[84],WLRDB[83],WLRDB[82],WLRDB[81],WLRDB[80],WLRDB[79],WLRDB[78],WLRDB[77],WLRDB[76],WLRDB[75],WLRDB[74],WLRDB[73],WLRDB[72],WLRDB[71],WLRDB[70],WLRDB[69],WLRDB[68],WLRDB[67],WLRDB[66],WLRDB[65],WLRDB[64],WLRDB[63],WLRDB[62],WLRDB[61],WLRDB[60],WLRDB[59],WLRDB[58],WLRDB[57],WLRDB[56],WLRDB[55],WLRDB[54],WLRDB[53],WLRDB[52],WLRDB[51],WLRDB[50],WLRDB[49],WLRDB[48],WLRDB[47],WLRDB[46],WLRDB[45],WLRDB[44],WLRDB[43],WLRDB[42],WLRDB[41],WLRDB[40],WLRDB[39],WLRDB[38],WLRDB[37],WLRDB[36],WLRDB[35],WLRDB[34],WLRDB[33],WLRDB[32],WLRDB[31],WLRDB[30],WLRDB[29],WLRDB[28],WLRDB[27],WLRDB[26],WLRDB[25],WLRDB[24],WLRDB[23],WLRDB[22],WLRDB[21],WLRDB[20],WLRDB[19],WLRDB[18],WLRDB[17],WLRDB[16],WLRDB[15],WLRDB[14],WLRDB[13],WLRDB[12],WLRDB[11],WLRDB[10],WLRDB[9],WLRDB[8],WLRDB[7],WLRDB[6],WLRDB[5],WLRDB[4],WLRDB[3],WLRDB[2],WLRDB[1],WLRDB[0]}),
        .WLRDB_L({WLRDB_L[127],WLRDB_L[126],WLRDB_L[125],WLRDB_L[124],WLRDB_L[123],WLRDB_L[122],WLRDB_L[121],WLRDB_L[120],WLRDB_L[119],WLRDB_L[118],WLRDB_L[117],WLRDB_L[116],WLRDB_L[115],WLRDB_L[114],WLRDB_L[113],WLRDB_L[112],WLRDB_L[111],WLRDB_L[110],WLRDB_L[109],WLRDB_L[108],WLRDB_L[107],WLRDB_L[106],WLRDB_L[105],WLRDB_L[104],WLRDB_L[103],WLRDB_L[102],WLRDB_L[101],WLRDB_L[100],WLRDB_L[99],WLRDB_L[98],WLRDB_L[97],WLRDB_L[96],WLRDB_L[95],WLRDB_L[94],WLRDB_L[93],WLRDB_L[92],WLRDB_L[91],WLRDB_L[90],WLRDB_L[89],WLRDB_L[88],WLRDB_L[87],WLRDB_L[86],WLRDB_L[85],WLRDB_L[84],WLRDB_L[83],WLRDB_L[82],WLRDB_L[81],WLRDB_L[80],WLRDB_L[79],WLRDB_L[78],WLRDB_L[77],WLRDB_L[76],WLRDB_L[75],WLRDB_L[74],WLRDB_L[73],WLRDB_L[72],WLRDB_L[71],WLRDB_L[70],WLRDB_L[69],WLRDB_L[68],WLRDB_L[67],WLRDB_L[66],WLRDB_L[65],WLRDB_L[64],WLRDB_L[63],WLRDB_L[62],WLRDB_L[61],WLRDB_L[60],WLRDB_L[59],WLRDB_L[58],WLRDB_L[57],WLRDB_L[56],WLRDB_L[55],WLRDB_L[54],WLRDB_L[53],WLRDB_L[52],WLRDB_L[51],WLRDB_L[50],WLRDB_L[49],WLRDB_L[48],WLRDB_L[47],WLRDB_L[46],WLRDB_L[45],WLRDB_L[44],WLRDB_L[43],WLRDB_L[42],WLRDB_L[41],WLRDB_L[40],WLRDB_L[39],WLRDB_L[38],WLRDB_L[37],WLRDB_L[36],WLRDB_L[35],WLRDB_L[34],WLRDB_L[33],WLRDB_L[32],WLRDB_L[31],WLRDB_L[30],WLRDB_L[29],WLRDB_L[28],WLRDB_L[27],WLRDB_L[26],WLRDB_L[25],WLRDB_L[24],WLRDB_L[23],WLRDB_L[22],WLRDB_L[21],WLRDB_L[20],WLRDB_L[19],WLRDB_L[18],WLRDB_L[17],WLRDB_L[16],WLRDB_L[15],WLRDB_L[14],WLRDB_L[13],WLRDB_L[12],WLRDB_L[11],WLRDB_L[10],WLRDB_L[9],WLRDB_L[8],WLRDB_L[7],WLRDB_L[6],WLRDB_L[5],WLRDB_L[4],WLRDB_L[3],WLRDB_L[2],WLRDB_L[1],WLRDB_L[0]}),
        .WLWRB({WLWRB[127],WLWRB[126],WLWRB[125],WLWRB[124],WLWRB[123],WLWRB[122],WLWRB[121],WLWRB[120],WLWRB[119],WLWRB[118],WLWRB[117],WLWRB[116],WLWRB[115],WLWRB[114],WLWRB[113],WLWRB[112],WLWRB[111],WLWRB[110],WLWRB[109],WLWRB[108],WLWRB[107],WLWRB[106],WLWRB[105],WLWRB[104],WLWRB[103],WLWRB[102],WLWRB[101],WLWRB[100],WLWRB[99],WLWRB[98],WLWRB[97],WLWRB[96],WLWRB[95],WLWRB[94],WLWRB[93],WLWRB[92],WLWRB[91],WLWRB[90],WLWRB[89],WLWRB[88],WLWRB[87],WLWRB[86],WLWRB[85],WLWRB[84],WLWRB[83],WLWRB[82],WLWRB[81],WLWRB[80],WLWRB[79],WLWRB[78],WLWRB[77],WLWRB[76],WLWRB[75],WLWRB[74],WLWRB[73],WLWRB[72],WLWRB[71],WLWRB[70],WLWRB[69],WLWRB[68],WLWRB[67],WLWRB[66],WLWRB[65],WLWRB[64],WLWRB[63],WLWRB[62],WLWRB[61],WLWRB[60],WLWRB[59],WLWRB[58],WLWRB[57],WLWRB[56],WLWRB[55],WLWRB[54],WLWRB[53],WLWRB[52],WLWRB[51],WLWRB[50],WLWRB[49],WLWRB[48],WLWRB[47],WLWRB[46],WLWRB[45],WLWRB[44],WLWRB[43],WLWRB[42],WLWRB[41],WLWRB[40],WLWRB[39],WLWRB[38],WLWRB[37],WLWRB[36],WLWRB[35],WLWRB[34],WLWRB[33],WLWRB[32],WLWRB[31],WLWRB[30],WLWRB[29],WLWRB[28],WLWRB[27],WLWRB[26],WLWRB[25],WLWRB[24],WLWRB[23],WLWRB[22],WLWRB[21],WLWRB[20],WLWRB[19],WLWRB[18],WLWRB[17],WLWRB[16],WLWRB[15],WLWRB[14],WLWRB[13],WLWRB[12],WLWRB[11],WLWRB[10],WLWRB[9],WLWRB[8],WLWRB[7],WLWRB[6],WLWRB[5],WLWRB[4],WLWRB[3],WLWRB[2],WLWRB[1],WLWRB[0]}),
        .WLWRB_L({WLWRB_L[127],WLWRB_L[126],WLWRB_L[125],WLWRB_L[124],WLWRB_L[123],WLWRB_L[122],WLWRB_L[121],WLWRB_L[120],WLWRB_L[119],WLWRB_L[118],WLWRB_L[117],WLWRB_L[116],WLWRB_L[115],WLWRB_L[114],WLWRB_L[113],WLWRB_L[112],WLWRB_L[111],WLWRB_L[110],WLWRB_L[109],WLWRB_L[108],WLWRB_L[107],WLWRB_L[106],WLWRB_L[105],WLWRB_L[104],WLWRB_L[103],WLWRB_L[102],WLWRB_L[101],WLWRB_L[100],WLWRB_L[99],WLWRB_L[98],WLWRB_L[97],WLWRB_L[96],WLWRB_L[95],WLWRB_L[94],WLWRB_L[93],WLWRB_L[92],WLWRB_L[91],WLWRB_L[90],WLWRB_L[89],WLWRB_L[88],WLWRB_L[87],WLWRB_L[86],WLWRB_L[85],WLWRB_L[84],WLWRB_L[83],WLWRB_L[82],WLWRB_L[81],WLWRB_L[80],WLWRB_L[79],WLWRB_L[78],WLWRB_L[77],WLWRB_L[76],WLWRB_L[75],WLWRB_L[74],WLWRB_L[73],WLWRB_L[72],WLWRB_L[71],WLWRB_L[70],WLWRB_L[69],WLWRB_L[68],WLWRB_L[67],WLWRB_L[66],WLWRB_L[65],WLWRB_L[64],WLWRB_L[63],WLWRB_L[62],WLWRB_L[61],WLWRB_L[60],WLWRB_L[59],WLWRB_L[58],WLWRB_L[57],WLWRB_L[56],WLWRB_L[55],WLWRB_L[54],WLWRB_L[53],WLWRB_L[52],WLWRB_L[51],WLWRB_L[50],WLWRB_L[49],WLWRB_L[48],WLWRB_L[47],WLWRB_L[46],WLWRB_L[45],WLWRB_L[44],WLWRB_L[43],WLWRB_L[42],WLWRB_L[41],WLWRB_L[40],WLWRB_L[39],WLWRB_L[38],WLWRB_L[37],WLWRB_L[36],WLWRB_L[35],WLWRB_L[34],WLWRB_L[33],WLWRB_L[32],WLWRB_L[31],WLWRB_L[30],WLWRB_L[29],WLWRB_L[28],WLWRB_L[27],WLWRB_L[26],WLWRB_L[25],WLWRB_L[24],WLWRB_L[23],WLWRB_L[22],WLWRB_L[21],WLWRB_L[20],WLWRB_L[19],WLWRB_L[18],WLWRB_L[17],WLWRB_L[16],WLWRB_L[15],WLWRB_L[14],WLWRB_L[13],WLWRB_L[12],WLWRB_L[11],WLWRB_L[10],WLWRB_L[9],WLWRB_L[8],WLWRB_L[7],WLWRB_L[6],WLWRB_L[5],WLWRB_L[4],WLWRB_L[3],WLWRB_L[2],WLWRB_L[1],WLWRB_L[0]}),
        .XAWRB({XAWRB}), .XBRDB({XBRDB}), .XBWRB({XBWRB}), .XCRDB({XCRDB}),
        .XCWRB({XCWRB}), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_buf_lsh X_ary_buf_lsh
        (.DMY_EDGE_LT({DMY_EDGE_LT[1],DMY_EDGE_LT[0]}), .LCGTV(LCGTV),
        .RASSB_H({RASSB_H[1],RASSB_H[0]}), .VBN(VBN[2]), .VBP(VBP[2]),
        .VDDA(VDDA[2]), .VDDP(VDDP[2]), .VDDPI(VDDPI[2]), .VDDWL_RD(VDDWL_RD),
        .VDDWL_WR(VDDWL_WR), .VSS(VSS[2]),
        .WLRD({WLRD_H[127],WLRD_H[126],WLRD_H[125],WLRD_H[124],WLRD_H[123],WLRD_H[122],WLRD_H[121],WLRD_H[120],WLRD_H[119],WLRD_H[118],WLRD_H[117],WLRD_H[116],WLRD_H[115],WLRD_H[114],WLRD_H[113],WLRD_H[112],WLRD_H[111],WLRD_H[110],WLRD_H[109],WLRD_H[108],WLRD_H[107],WLRD_H[106],WLRD_H[105],WLRD_H[104],WLRD_H[103],WLRD_H[102],WLRD_H[101],WLRD_H[100],WLRD_H[99],WLRD_H[98],WLRD_H[97],WLRD_H[96],WLRD_H[95],WLRD_H[94],WLRD_H[93],WLRD_H[92],WLRD_H[91],WLRD_H[90],WLRD_H[89],WLRD_H[88],WLRD_H[87],WLRD_H[86],WLRD_H[85],WLRD_H[84],WLRD_H[83],WLRD_H[82],WLRD_H[81],WLRD_H[80],WLRD_H[79],WLRD_H[78],WLRD_H[77],WLRD_H[76],WLRD_H[75],WLRD_H[74],WLRD_H[73],WLRD_H[72],WLRD_H[71],WLRD_H[70],WLRD_H[69],WLRD_H[68],WLRD_H[67],WLRD_H[66],WLRD_H[65],WLRD_H[64],WLRD_H[63],WLRD_H[62],WLRD_H[61],WLRD_H[60],WLRD_H[59],WLRD_H[58],WLRD_H[57],WLRD_H[56],WLRD_H[55],WLRD_H[54],WLRD_H[53],WLRD_H[52],WLRD_H[51],WLRD_H[50],WLRD_H[49],WLRD_H[48],WLRD_H[47],WLRD_H[46],WLRD_H[45],WLRD_H[44],WLRD_H[43],WLRD_H[42],WLRD_H[41],WLRD_H[40],WLRD_H[39],WLRD_H[38],WLRD_H[37],WLRD_H[36],WLRD_H[35],WLRD_H[34],WLRD_H[33],WLRD_H[32],WLRD_H[31],WLRD_H[30],WLRD_H[29],WLRD_H[28],WLRD_H[27],WLRD_H[26],WLRD_H[25],WLRD_H[24],WLRD_H[23],WLRD_H[22],WLRD_H[21],WLRD_H[20],WLRD_H[19],WLRD_H[18],WLRD_H[17],WLRD_H[16],WLRD_H[15],WLRD_H[14],WLRD_H[13],WLRD_H[12],WLRD_H[11],WLRD_H[10],WLRD_H[9],WLRD_H[8],WLRD_H[7],WLRD_H[6],WLRD_H[5],WLRD_H[4],WLRD_H[3],WLRD_H[2],WLRD_H[1],WLRD_H[0]}),
        .WLRDB({WLRDB[127],WLRDB[126],WLRDB[125],WLRDB[124],WLRDB[123],WLRDB[122],WLRDB[121],WLRDB[120],WLRDB[119],WLRDB[118],WLRDB[117],WLRDB[116],WLRDB[115],WLRDB[114],WLRDB[113],WLRDB[112],WLRDB[111],WLRDB[110],WLRDB[109],WLRDB[108],WLRDB[107],WLRDB[106],WLRDB[105],WLRDB[104],WLRDB[103],WLRDB[102],WLRDB[101],WLRDB[100],WLRDB[99],WLRDB[98],WLRDB[97],WLRDB[96],WLRDB[95],WLRDB[94],WLRDB[93],WLRDB[92],WLRDB[91],WLRDB[90],WLRDB[89],WLRDB[88],WLRDB[87],WLRDB[86],WLRDB[85],WLRDB[84],WLRDB[83],WLRDB[82],WLRDB[81],WLRDB[80],WLRDB[79],WLRDB[78],WLRDB[77],WLRDB[76],WLRDB[75],WLRDB[74],WLRDB[73],WLRDB[72],WLRDB[71],WLRDB[70],WLRDB[69],WLRDB[68],WLRDB[67],WLRDB[66],WLRDB[65],WLRDB[64],WLRDB[63],WLRDB[62],WLRDB[61],WLRDB[60],WLRDB[59],WLRDB[58],WLRDB[57],WLRDB[56],WLRDB[55],WLRDB[54],WLRDB[53],WLRDB[52],WLRDB[51],WLRDB[50],WLRDB[49],WLRDB[48],WLRDB[47],WLRDB[46],WLRDB[45],WLRDB[44],WLRDB[43],WLRDB[42],WLRDB[41],WLRDB[40],WLRDB[39],WLRDB[38],WLRDB[37],WLRDB[36],WLRDB[35],WLRDB[34],WLRDB[33],WLRDB[32],WLRDB[31],WLRDB[30],WLRDB[29],WLRDB[28],WLRDB[27],WLRDB[26],WLRDB[25],WLRDB[24],WLRDB[23],WLRDB[22],WLRDB[21],WLRDB[20],WLRDB[19],WLRDB[18],WLRDB[17],WLRDB[16],WLRDB[15],WLRDB[14],WLRDB[13],WLRDB[12],WLRDB[11],WLRDB[10],WLRDB[9],WLRDB[8],WLRDB[7],WLRDB[6],WLRDB[5],WLRDB[4],WLRDB[3],WLRDB[2],WLRDB[1],WLRDB[0]}),
        .WLWR({WLWR_H[127],WLWR_H[126],WLWR_H[125],WLWR_H[124],WLWR_H[123],WLWR_H[122],WLWR_H[121],WLWR_H[120],WLWR_H[119],WLWR_H[118],WLWR_H[117],WLWR_H[116],WLWR_H[115],WLWR_H[114],WLWR_H[113],WLWR_H[112],WLWR_H[111],WLWR_H[110],WLWR_H[109],WLWR_H[108],WLWR_H[107],WLWR_H[106],WLWR_H[105],WLWR_H[104],WLWR_H[103],WLWR_H[102],WLWR_H[101],WLWR_H[100],WLWR_H[99],WLWR_H[98],WLWR_H[97],WLWR_H[96],WLWR_H[95],WLWR_H[94],WLWR_H[93],WLWR_H[92],WLWR_H[91],WLWR_H[90],WLWR_H[89],WLWR_H[88],WLWR_H[87],WLWR_H[86],WLWR_H[85],WLWR_H[84],WLWR_H[83],WLWR_H[82],WLWR_H[81],WLWR_H[80],WLWR_H[79],WLWR_H[78],WLWR_H[77],WLWR_H[76],WLWR_H[75],WLWR_H[74],WLWR_H[73],WLWR_H[72],WLWR_H[71],WLWR_H[70],WLWR_H[69],WLWR_H[68],WLWR_H[67],WLWR_H[66],WLWR_H[65],WLWR_H[64],WLWR_H[63],WLWR_H[62],WLWR_H[61],WLWR_H[60],WLWR_H[59],WLWR_H[58],WLWR_H[57],WLWR_H[56],WLWR_H[55],WLWR_H[54],WLWR_H[53],WLWR_H[52],WLWR_H[51],WLWR_H[50],WLWR_H[49],WLWR_H[48],WLWR_H[47],WLWR_H[46],WLWR_H[45],WLWR_H[44],WLWR_H[43],WLWR_H[42],WLWR_H[41],WLWR_H[40],WLWR_H[39],WLWR_H[38],WLWR_H[37],WLWR_H[36],WLWR_H[35],WLWR_H[34],WLWR_H[33],WLWR_H[32],WLWR_H[31],WLWR_H[30],WLWR_H[29],WLWR_H[28],WLWR_H[27],WLWR_H[26],WLWR_H[25],WLWR_H[24],WLWR_H[23],WLWR_H[22],WLWR_H[21],WLWR_H[20],WLWR_H[19],WLWR_H[18],WLWR_H[17],WLWR_H[16],WLWR_H[15],WLWR_H[14],WLWR_H[13],WLWR_H[12],WLWR_H[11],WLWR_H[10],WLWR_H[9],WLWR_H[8],WLWR_H[7],WLWR_H[6],WLWR_H[5],WLWR_H[4],WLWR_H[3],WLWR_H[2],WLWR_H[1],WLWR_H[0]}),
        .WLWRB({WLWRB[127],WLWRB[126],WLWRB[125],WLWRB[124],WLWRB[123],WLWRB[122],WLWRB[121],WLWRB[120],WLWRB[119],WLWRB[118],WLWRB[117],WLWRB[116],WLWRB[115],WLWRB[114],WLWRB[113],WLWRB[112],WLWRB[111],WLWRB[110],WLWRB[109],WLWRB[108],WLWRB[107],WLWRB[106],WLWRB[105],WLWRB[104],WLWRB[103],WLWRB[102],WLWRB[101],WLWRB[100],WLWRB[99],WLWRB[98],WLWRB[97],WLWRB[96],WLWRB[95],WLWRB[94],WLWRB[93],WLWRB[92],WLWRB[91],WLWRB[90],WLWRB[89],WLWRB[88],WLWRB[87],WLWRB[86],WLWRB[85],WLWRB[84],WLWRB[83],WLWRB[82],WLWRB[81],WLWRB[80],WLWRB[79],WLWRB[78],WLWRB[77],WLWRB[76],WLWRB[75],WLWRB[74],WLWRB[73],WLWRB[72],WLWRB[71],WLWRB[70],WLWRB[69],WLWRB[68],WLWRB[67],WLWRB[66],WLWRB[65],WLWRB[64],WLWRB[63],WLWRB[62],WLWRB[61],WLWRB[60],WLWRB[59],WLWRB[58],WLWRB[57],WLWRB[56],WLWRB[55],WLWRB[54],WLWRB[53],WLWRB[52],WLWRB[51],WLWRB[50],WLWRB[49],WLWRB[48],WLWRB[47],WLWRB[46],WLWRB[45],WLWRB[44],WLWRB[43],WLWRB[42],WLWRB[41],WLWRB[40],WLWRB[39],WLWRB[38],WLWRB[37],WLWRB[36],WLWRB[35],WLWRB[34],WLWRB[33],WLWRB[32],WLWRB[31],WLWRB[30],WLWRB[29],WLWRB[28],WLWRB[27],WLWRB[26],WLWRB[25],WLWRB[24],WLWRB[23],WLWRB[22],WLWRB[21],WLWRB[20],WLWRB[19],WLWRB[18],WLWRB[17],WLWRB[16],WLWRB[15],WLWRB[14],WLWRB[13],WLWRB[12],WLWRB[11],WLWRB[10],WLWRB[9],WLWRB[8],WLWRB[7],WLWRB[6],WLWRB[5],WLWRB[4],WLWRB[3],WLWRB[2],WLWRB[1],WLWRB[0]}));
endmodule

module SNPS_RF_DP_HD_256x80_ary_rt_seg1 (BAB, BAT, QT, RBL, VBN, VBP, VDDA,
       VDDAI, VDDAI_SAC, VDDP, VDDPI, VSS, WLRD, WLWR);
    inout [79:0] BAB;
    inout [79:0] BAT;
    inout [79:0] QT;
    inout [79:0] RBL;
    inout [19:0] VBN;
    supply0 [19:0] VBN;
    inout [19:0] VBP;
    supply0 [19:0] VBP;
    inout [19:0] VDDA;
    supply1 [19:0] VDDA;
    inout [19:0] VDDAI;
    inout [19:0] VDDAI_SAC;
    inout [19:0] VDDP;
    supply1 [19:0] VDDP;
    inout [19:0] VDDPI;
    inout [19:0] VSS;
    supply0 [19:0] VSS;
    inout [3:0] WLRD;
    inout [3:0] WLWR;
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_S0 (VDDA[0], VDDAI[0],
        VDDAI_SAC[0], VDDP[0], VDDPI[0], VSS[0], VBP[0], VBN[0], BAB[0], BAB[1],
        BAB[2], BAB[3], BAT[0], BAT[1], BAT[2], BAT[3], QT[0], QT[1], QT[2],
        QT[3], RBL[0], RBL[1], RBL[2], RBL[3], WLRD[0], WLRD[1], WLRD[2],
        WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_S1 (VDDA[1], VDDAI[1],
        VDDAI_SAC[1], VDDP[1], VDDPI[1], VSS[1], VBP[1], VBN[1], BAB[4], BAB[5],
        BAB[6], BAB[7], BAT[4], BAT[5], BAT[6], BAT[7], QT[4], QT[5], QT[6],
        QT[7], RBL[4], RBL[5], RBL[6], RBL[7], WLRD[0], WLRD[1], WLRD[2],
        WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_S2 (VDDA[2], VDDAI[2],
        VDDAI_SAC[2], VDDP[2], VDDPI[2], VSS[2], VBP[2], VBN[2], BAB[8], BAB[9],
        BAB[10], BAB[11], BAT[8], BAT[9], BAT[10], BAT[11], QT[8], QT[9],
        QT[10], QT[11], RBL[8], RBL[9], RBL[10], RBL[11], WLRD[0], WLRD[1],
        WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_S3 (VDDA[3], VDDAI[3],
        VDDAI_SAC[3], VDDP[3], VDDPI[3], VSS[3], VBP[3], VBN[3], BAB[12],
        BAB[13], BAB[14], BAB[15], BAT[12], BAT[13], BAT[14], BAT[15], QT[12],
        QT[13], QT[14], QT[15], RBL[12], RBL[13], RBL[14], RBL[15], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_S4 (VDDA[4], VDDAI[4],
        VDDAI_SAC[4], VDDP[4], VDDPI[4], VSS[4], VBP[4], VBN[4], BAB[16],
        BAB[17], BAB[18], BAB[19], BAT[16], BAT[17], BAT[18], BAT[19], QT[16],
        QT[17], QT[18], QT[19], RBL[16], RBL[17], RBL[18], RBL[19], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_S5 (VDDA[5], VDDAI[5],
        VDDAI_SAC[5], VDDP[5], VDDPI[5], VSS[5], VBP[5], VBN[5], BAB[20],
        BAB[21], BAB[22], BAB[23], BAT[20], BAT[21], BAT[22], BAT[23], QT[20],
        QT[21], QT[22], QT[23], RBL[20], RBL[21], RBL[22], RBL[23], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_S6 (VDDA[6], VDDAI[6],
        VDDAI_SAC[6], VDDP[6], VDDPI[6], VSS[6], VBP[6], VBN[6], BAB[24],
        BAB[25], BAB[26], BAB[27], BAT[24], BAT[25], BAT[26], BAT[27], QT[24],
        QT[25], QT[26], QT[27], RBL[24], RBL[25], RBL[26], RBL[27], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_S7 (VDDA[7], VDDAI[7],
        VDDAI_SAC[7], VDDP[7], VDDPI[7], VSS[7], VBP[7], VBN[7], BAB[28],
        BAB[29], BAB[30], BAB[31], BAT[28], BAT[29], BAT[30], BAT[31], QT[28],
        QT[29], QT[30], QT[31], RBL[28], RBL[29], RBL[30], RBL[31], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_S8 (VDDA[8], VDDAI[8],
        VDDAI_SAC[8], VDDP[8], VDDPI[8], VSS[8], VBP[8], VBN[8], BAB[32],
        BAB[33], BAB[34], BAB[35], BAT[32], BAT[33], BAT[34], BAT[35], QT[32],
        QT[33], QT[34], QT[35], RBL[32], RBL[33], RBL[34], RBL[35], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_S9 (VDDA[9], VDDAI[9],
        VDDAI_SAC[9], VDDP[9], VDDPI[9], VSS[9], VBP[9], VBN[9], BAB[36],
        BAB[37], BAB[38], BAB[39], BAT[36], BAT[37], BAT[38], BAT[39], QT[36],
        QT[37], QT[38], QT[39], RBL[36], RBL[37], RBL[38], RBL[39], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_F9 (VDDA[10], VDDAI[10],
        VDDAI_SAC[10], VDDP[10], VDDPI[10], VSS[10], VBP[10], VBN[10], BAB[40],
        BAB[41], BAB[42], BAB[43], BAT[40], BAT[41], BAT[42], BAT[43], QT[40],
        QT[41], QT[42], QT[43], RBL[40], RBL[41], RBL[42], RBL[43], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_F8 (VDDA[11], VDDAI[11],
        VDDAI_SAC[11], VDDP[11], VDDPI[11], VSS[11], VBP[11], VBN[11], BAB[44],
        BAB[45], BAB[46], BAB[47], BAT[44], BAT[45], BAT[46], BAT[47], QT[44],
        QT[45], QT[46], QT[47], RBL[44], RBL[45], RBL[46], RBL[47], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_F7 (VDDA[12], VDDAI[12],
        VDDAI_SAC[12], VDDP[12], VDDPI[12], VSS[12], VBP[12], VBN[12], BAB[48],
        BAB[49], BAB[50], BAB[51], BAT[48], BAT[49], BAT[50], BAT[51], QT[48],
        QT[49], QT[50], QT[51], RBL[48], RBL[49], RBL[50], RBL[51], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_F6 (VDDA[13], VDDAI[13],
        VDDAI_SAC[13], VDDP[13], VDDPI[13], VSS[13], VBP[13], VBN[13], BAB[52],
        BAB[53], BAB[54], BAB[55], BAT[52], BAT[53], BAT[54], BAT[55], QT[52],
        QT[53], QT[54], QT[55], RBL[52], RBL[53], RBL[54], RBL[55], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_F5 (VDDA[14], VDDAI[14],
        VDDAI_SAC[14], VDDP[14], VDDPI[14], VSS[14], VBP[14], VBN[14], BAB[56],
        BAB[57], BAB[58], BAB[59], BAT[56], BAT[57], BAT[58], BAT[59], QT[56],
        QT[57], QT[58], QT[59], RBL[56], RBL[57], RBL[58], RBL[59], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_F4 (VDDA[15], VDDAI[15],
        VDDAI_SAC[15], VDDP[15], VDDPI[15], VSS[15], VBP[15], VBN[15], BAB[60],
        BAB[61], BAB[62], BAB[63], BAT[60], BAT[61], BAT[62], BAT[63], QT[60],
        QT[61], QT[62], QT[63], RBL[60], RBL[61], RBL[62], RBL[63], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_F3 (VDDA[16], VDDAI[16],
        VDDAI_SAC[16], VDDP[16], VDDPI[16], VSS[16], VBP[16], VBN[16], BAB[64],
        BAB[65], BAB[66], BAB[67], BAT[64], BAT[65], BAT[66], BAT[67], QT[64],
        QT[65], QT[66], QT[67], RBL[64], RBL[65], RBL[66], RBL[67], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_F2 (VDDA[17], VDDAI[17],
        VDDAI_SAC[17], VDDP[17], VDDPI[17], VSS[17], VBP[17], VBN[17], BAB[68],
        BAB[69], BAB[70], BAB[71], BAT[68], BAT[69], BAT[70], BAT[71], QT[68],
        QT[69], QT[70], QT[71], RBL[68], RBL[69], RBL[70], RBL[71], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_F1 (VDDA[18], VDDAI[18],
        VDDAI_SAC[18], VDDP[18], VDDPI[18], VSS[18], VBP[18], VBN[18], BAB[72],
        BAB[73], BAB[74], BAB[75], BAT[72], BAT[73], BAT[74], BAT[75], QT[72],
        QT[73], QT[74], QT[75], RBL[72], RBL[73], RBL[74], RBL[75], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    mm17a04_u_hdrf2p_ar4x4m1 X_mm17a04_u_hdrf2p_ar4x4m1_F0 (VDDA[19], VDDAI[19],
        VDDAI_SAC[19], VDDP[19], VDDPI[19], VSS[19], VBP[19], VBN[19], BAB[76],
        BAB[77], BAB[78], BAB[79], BAT[76], BAT[77], BAT[78], BAT[79], QT[76],
        QT[77], QT[78], QT[79], RBL[76], RBL[77], RBL[78], RBL[79], WLRD[0],
        WLRD[1], WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
endmodule

module SNPS_RF_DP_HD_256x80_ary_rt_b (BAB, BAT, DMY_EDGE_LB, DMY_EDGE_LT,
       DMY_EDGE_RB, DMY_EDGE_RT, LCGTV, LOG0, LOG1, PGIOI, QT, RBL, RERASSB,
       VBN, VBP, VDDA, VDDAIR1, VDDAIR2, VDDAI_SACR1, VDDAI_SACR2, VDDP, VDDPI,
       VDDWL_RD_REBUF, VDDWL_WR_REBUF, VEDGE, VSS, WLRD, WLWR, WL_VSS);
    inout [159:0] BAB;
    inout [159:0] BAT;
    inout DMY_EDGE_LB;
    inout DMY_EDGE_LT;
    inout [1:0] DMY_EDGE_RB;
    inout [1:0] DMY_EDGE_RT;
    inout LCGTV;
    inout LOG0;
    inout LOG1;
    inout PGIOI;
    inout [159:0] QT;
    inout [159:0] RBL;
    inout [1:0] RERASSB;
    wire [3:0] REWLRD;
    wire [3:0] REWLWR;
    inout [41:0] VBN;
    supply0 [41:0] VBN;
    inout [41:0] VBP;
    supply0 [41:0] VBP;
    inout [41:0] VDDA;
    supply1 [41:0] VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout [41:0] VDDP;
    supply1 [41:0] VDDP;
    inout [41:0] VDDPI;
    inout VDDWL_RD_REBUF;
    inout VDDWL_WR_REBUF;
    inout VEDGE;
    inout [41:0] VSS;
    supply0 [41:0] VSS;
    inout [3:0] WLRD;
    inout [3:0] WLWR;
    inout WL_VSS;
    SNPS_RF_DP_HD_256x80_ary_rt_seg1 X_ary_rt_seg1_S0
        (.BAB({BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .QT({QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .VBN({VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAI({VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1}),
        .VDDAI_SAC({VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1}),
        .VDDP({VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VSS({VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[3],WLRD[2],WLRD[1],WLRD[0]}),
        .WLWR({WLWR[3],WLWR[2],WLWR[1],WLWR[0]}));
    mm17a04_u_hdrf2p_x4rebuf X_mm17a04_u_hdrf2p_x4rebuf_b (VDDA[20], VDDP[20],
        VDDPI[20], VDDWL_RD_REBUF, VDDWL_WR_REBUF, VSS[20], VBP[20], VBN[20],
        REWLRD[0], REWLRD[1], REWLRD[2], REWLRD[3], REWLWR[0], REWLWR[1],
        REWLWR[2], REWLWR[3], DMY_EDGE_LB, DMY_EDGE_LT, DMY_EDGE_RB[0],
        DMY_EDGE_RT[0], LCGTV, RERASSB[0], RERASSB[1], WL_VSS, WLRD[0], WLRD[1],
        WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    SNPS_RF_DP_HD_256x80_ary_rt_seg1 X_ary_rt_seg1_F0
        (.BAB({}),
        .BAT({}),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80]}),
        .VBN({VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21]}),
        .VBP({VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21]}),
        .VDDA({VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21]}),
        .VDDAI({VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2}),
        .VDDAI_SAC({VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2}),
        .VDDP({VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21]}),
        .VDDPI({VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21]}),
        .VSS({VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21]}),
        .WLRD({REWLRD[3],REWLRD[2],REWLRD[1],REWLRD[0]}),
        .WLWR({REWLWR[3],REWLWR[2],REWLWR[1],REWLWR[0]}));
    mm17a04_u_hdrf2p_edge4_dp X_mm17a04_u_hdrf2p_edge4_dp (VDDA[41], VDDP[41],
        VDDPI[41], VSS[41], VBP[41], VBN[41], DMY_EDGE_RB[1], DMY_EDGE_RT[1],
        LOG0, LOG1, PGIOI, VEDGE, REWLRD[0], REWLRD[1], REWLRD[2], REWLRD[3],
        REWLWR[0], REWLWR[1], REWLWR[2], REWLWR[3]);
endmodule

module SNPS_RF_DP_HD_256x80_ary_rt_a (BAB, BAT, DMY_EDGE_LB, DMY_EDGE_LT,
       DMY_EDGE_RB, DMY_EDGE_RT, LCGTV, LOG0, LOG1, PGIOI, QT, RBL, RERASSB,
       VBN, VBP, VDDA, VDDAIR1, VDDAIR2, VDDAI_SACR1, VDDAI_SACR2, VDDP, VDDPI,
       VDDWL_RD_REBUF, VDDWL_WR_REBUF, VEDGE, VSS, WLRD, WLWR, WL_VSS);
    inout [159:0] BAB;
    inout [159:0] BAT;
    inout DMY_EDGE_LB;
    inout DMY_EDGE_LT;
    inout [1:0] DMY_EDGE_RB;
    inout [1:0] DMY_EDGE_RT;
    inout LCGTV;
    inout LOG0;
    inout LOG1;
    inout PGIOI;
    inout [159:0] QT;
    inout [159:0] RBL;
    inout [1:0] RERASSB;
    wire [3:0] REWLRD;
    wire [3:0] REWLWR;
    inout [41:0] VBN;
    supply0 [41:0] VBN;
    inout [41:0] VBP;
    supply0 [41:0] VBP;
    inout [41:0] VDDA;
    supply1 [41:0] VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout [41:0] VDDP;
    supply1 [41:0] VDDP;
    inout [41:0] VDDPI;
    inout VDDWL_RD_REBUF;
    inout VDDWL_WR_REBUF;
    inout VEDGE;
    inout [41:0] VSS;
    supply0 [41:0] VSS;
    inout [3:0] WLRD;
    inout [3:0] WLWR;
    inout WL_VSS;
    SNPS_RF_DP_HD_256x80_ary_rt_seg1 X_ary_rt_seg1_S0
        (.BAB({BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .QT({QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({}),
        .VBN({VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAI({VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1}),
        .VDDAI_SAC({VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1}),
        .VDDP({VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VSS({VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[3],WLRD[2],WLRD[1],WLRD[0]}),
        .WLWR({WLWR[3],WLWR[2],WLWR[1],WLWR[0]}));
    mm17a04_u_hdrf2p_x4rebuf X_mm17a04_u_hdrf2p_x4rebuf_a (VDDA[20], VDDP[20],
        VDDPI[20], VDDWL_RD_REBUF, VDDWL_WR_REBUF, VSS[20], VBP[20], VBN[20],
        REWLRD[0], REWLRD[1], REWLRD[2], REWLRD[3], REWLWR[0], REWLWR[1],
        REWLWR[2], REWLWR[3], DMY_EDGE_LB, DMY_EDGE_LT, DMY_EDGE_RB[0],
        DMY_EDGE_RT[0], LCGTV, RERASSB[0], RERASSB[1], WL_VSS, WLRD[0], WLRD[1],
        WLRD[2], WLRD[3], WLWR[0], WLWR[1], WLWR[2], WLWR[3]);
    SNPS_RF_DP_HD_256x80_ary_rt_seg1 X_ary_rt_seg1_F0
        (.BAB({}),
        .BAT({}),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80]}),
        .VBN({VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21]}),
        .VBP({VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21]}),
        .VDDA({VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21]}),
        .VDDAI({VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2}),
        .VDDAI_SAC({VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2}),
        .VDDP({VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21]}),
        .VDDPI({VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21]}),
        .VSS({VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21]}),
        .WLRD({REWLRD[3],REWLRD[2],REWLRD[1],REWLRD[0]}),
        .WLWR({REWLWR[3],REWLWR[2],REWLWR[1],REWLWR[0]}));
    mm17a04_u_hdrf2p_edge4_dp X_mm17a04_u_hdrf2p_edge4_dp (VDDA[41], VDDP[41],
        VDDPI[41], VSS[41], VBP[41], VBN[41], DMY_EDGE_RB[1], DMY_EDGE_RT[1],
        LOG0, LOG1, PGIOI, VEDGE, REWLRD[0], REWLRD[1], REWLRD[2], REWLRD[3],
        REWLWR[0], REWLWR[1], REWLWR[2], REWLWR[3]);
endmodule

module SNPS_RF_DP_HD_256x80_ary_rt_no_cut (BAB, BAT,
       .DMY_EDGE_LT({DMY_EDGE_LT[32], DMY_EDGE_LT[1]}),
       .DMY_EDGE_RT({DMY_EDGE_RT[65], DMY_EDGE_RT[64], DMY_EDGE_RT[3],
       DMY_EDGE_RT[2]}), LCGTV, LOG0, LOG1, PGIOI, QT, RBL, RERASSB, VBN, VBP,
       VDDA, VDDAIR1, VDDAIR2, VDDAI_SACR1, VDDAI_SACR2, VDDP, VDDPI,
       VDDWL_RD_REBUF, VDDWL_WR_REBUF, VEDGE, VSS, WLRD, WLWR, WL_VSS);
    inout [159:0] BAB;
    inout [159:0] BAT;
    inout [32:0] DMY_EDGE_LT;
    inout [65:0] DMY_EDGE_RT;
    inout LCGTV;
    inout LOG0;
    inout LOG1;
    inout PGIOI;
    inout [159:0] QT;
    inout [159:0] RBL;
    inout [1:0] RERASSB;
    inout [41:0] VBN;
    supply0 [41:0] VBN;
    inout [41:0] VBP;
    supply0 [41:0] VBP;
    inout [41:0] VDDA;
    supply1 [41:0] VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout [41:0] VDDP;
    supply1 [41:0] VDDP;
    inout [41:0] VDDPI;
    inout VDDWL_RD_REBUF;
    inout VDDWL_WR_REBUF;
    inout VEDGE;
    inout [41:0] VSS;
    supply0 [41:0] VSS;
    inout [127:0] WLRD;
    inout [127:0] WLWR;
    inout WL_VSS;
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_S0
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[1]), .DMY_EDGE_LT(DMY_EDGE_LT[0]),
        .DMY_EDGE_RB({DMY_EDGE_RT[3],DMY_EDGE_RT[2]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[1],DMY_EDGE_RT[0]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[3],WLRD[2],WLRD[1],WLRD[0]}),
        .WLWR({WLWR[3],WLWR[2],WLWR[1],WLWR[0]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_S0
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[0]), .DMY_EDGE_LT(DMY_EDGE_LT[2]),
        .DMY_EDGE_RB({DMY_EDGE_RT[1],DMY_EDGE_RT[0]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[5],DMY_EDGE_RT[4]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[7],WLRD[6],WLRD[5],WLRD[4]}),
        .WLWR({WLWR[7],WLWR[6],WLWR[5],WLWR[4]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_S1
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[2]), .DMY_EDGE_LT(DMY_EDGE_LT[3]),
        .DMY_EDGE_RB({DMY_EDGE_RT[5],DMY_EDGE_RT[4]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[7],DMY_EDGE_RT[6]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[11],WLRD[10],WLRD[9],WLRD[8]}),
        .WLWR({WLWR[11],WLWR[10],WLWR[9],WLWR[8]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_S1
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[3]), .DMY_EDGE_LT(DMY_EDGE_LT[4]),
        .DMY_EDGE_RB({DMY_EDGE_RT[7],DMY_EDGE_RT[6]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[9],DMY_EDGE_RT[8]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[15],WLRD[14],WLRD[13],WLRD[12]}),
        .WLWR({WLWR[15],WLWR[14],WLWR[13],WLWR[12]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_S2
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[4]), .DMY_EDGE_LT(DMY_EDGE_LT[5]),
        .DMY_EDGE_RB({DMY_EDGE_RT[9],DMY_EDGE_RT[8]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[11],DMY_EDGE_RT[10]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[19],WLRD[18],WLRD[17],WLRD[16]}),
        .WLWR({WLWR[19],WLWR[18],WLWR[17],WLWR[16]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_S2
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[5]), .DMY_EDGE_LT(DMY_EDGE_LT[6]),
        .DMY_EDGE_RB({DMY_EDGE_RT[11],DMY_EDGE_RT[10]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[13],DMY_EDGE_RT[12]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[23],WLRD[22],WLRD[21],WLRD[20]}),
        .WLWR({WLWR[23],WLWR[22],WLWR[21],WLWR[20]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_S3
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[6]), .DMY_EDGE_LT(DMY_EDGE_LT[7]),
        .DMY_EDGE_RB({DMY_EDGE_RT[13],DMY_EDGE_RT[12]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[15],DMY_EDGE_RT[14]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[27],WLRD[26],WLRD[25],WLRD[24]}),
        .WLWR({WLWR[27],WLWR[26],WLWR[25],WLWR[24]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_S3
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[7]), .DMY_EDGE_LT(DMY_EDGE_LT[8]),
        .DMY_EDGE_RB({DMY_EDGE_RT[15],DMY_EDGE_RT[14]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[17],DMY_EDGE_RT[16]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[31],WLRD[30],WLRD[29],WLRD[28]}),
        .WLWR({WLWR[31],WLWR[30],WLWR[29],WLWR[28]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_S4
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[8]), .DMY_EDGE_LT(DMY_EDGE_LT[9]),
        .DMY_EDGE_RB({DMY_EDGE_RT[17],DMY_EDGE_RT[16]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[19],DMY_EDGE_RT[18]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[35],WLRD[34],WLRD[33],WLRD[32]}),
        .WLWR({WLWR[35],WLWR[34],WLWR[33],WLWR[32]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_S4
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[9]), .DMY_EDGE_LT(DMY_EDGE_LT[10]),
        .DMY_EDGE_RB({DMY_EDGE_RT[19],DMY_EDGE_RT[18]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[21],DMY_EDGE_RT[20]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[39],WLRD[38],WLRD[37],WLRD[36]}),
        .WLWR({WLWR[39],WLWR[38],WLWR[37],WLWR[36]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_S5
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[10]), .DMY_EDGE_LT(DMY_EDGE_LT[11]),
        .DMY_EDGE_RB({DMY_EDGE_RT[21],DMY_EDGE_RT[20]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[23],DMY_EDGE_RT[22]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[43],WLRD[42],WLRD[41],WLRD[40]}),
        .WLWR({WLWR[43],WLWR[42],WLWR[41],WLWR[40]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_S5
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[11]), .DMY_EDGE_LT(DMY_EDGE_LT[12]),
        .DMY_EDGE_RB({DMY_EDGE_RT[23],DMY_EDGE_RT[22]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[25],DMY_EDGE_RT[24]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[47],WLRD[46],WLRD[45],WLRD[44]}),
        .WLWR({WLWR[47],WLWR[46],WLWR[45],WLWR[44]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_S6
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[12]), .DMY_EDGE_LT(DMY_EDGE_LT[13]),
        .DMY_EDGE_RB({DMY_EDGE_RT[25],DMY_EDGE_RT[24]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[27],DMY_EDGE_RT[26]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[51],WLRD[50],WLRD[49],WLRD[48]}),
        .WLWR({WLWR[51],WLWR[50],WLWR[49],WLWR[48]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_S6
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[13]), .DMY_EDGE_LT(DMY_EDGE_LT[14]),
        .DMY_EDGE_RB({DMY_EDGE_RT[27],DMY_EDGE_RT[26]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[29],DMY_EDGE_RT[28]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[55],WLRD[54],WLRD[53],WLRD[52]}),
        .WLWR({WLWR[55],WLWR[54],WLWR[53],WLWR[52]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_S7
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[14]), .DMY_EDGE_LT(DMY_EDGE_LT[15]),
        .DMY_EDGE_RB({DMY_EDGE_RT[29],DMY_EDGE_RT[28]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[31],DMY_EDGE_RT[30]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[59],WLRD[58],WLRD[57],WLRD[56]}),
        .WLWR({WLWR[59],WLWR[58],WLWR[57],WLWR[56]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_S7
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[15]), .DMY_EDGE_LT(DMY_EDGE_LT[16]),
        .DMY_EDGE_RB({DMY_EDGE_RT[31],DMY_EDGE_RT[30]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[33],DMY_EDGE_RT[32]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[63],WLRD[62],WLRD[61],WLRD[60]}),
        .WLWR({WLWR[63],WLWR[62],WLWR[61],WLWR[60]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_F7
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[16]), .DMY_EDGE_LT(DMY_EDGE_LT[17]),
        .DMY_EDGE_RB({DMY_EDGE_RT[33],DMY_EDGE_RT[32]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[35],DMY_EDGE_RT[34]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[67],WLRD[66],WLRD[65],WLRD[64]}),
        .WLWR({WLWR[67],WLWR[66],WLWR[65],WLWR[64]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_F7
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[17]), .DMY_EDGE_LT(DMY_EDGE_LT[18]),
        .DMY_EDGE_RB({DMY_EDGE_RT[35],DMY_EDGE_RT[34]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[37],DMY_EDGE_RT[36]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[71],WLRD[70],WLRD[69],WLRD[68]}),
        .WLWR({WLWR[71],WLWR[70],WLWR[69],WLWR[68]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_F6
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[18]), .DMY_EDGE_LT(DMY_EDGE_LT[19]),
        .DMY_EDGE_RB({DMY_EDGE_RT[37],DMY_EDGE_RT[36]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[39],DMY_EDGE_RT[38]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[75],WLRD[74],WLRD[73],WLRD[72]}),
        .WLWR({WLWR[75],WLWR[74],WLWR[73],WLWR[72]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_F6
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[19]), .DMY_EDGE_LT(DMY_EDGE_LT[20]),
        .DMY_EDGE_RB({DMY_EDGE_RT[39],DMY_EDGE_RT[38]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[41],DMY_EDGE_RT[40]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[79],WLRD[78],WLRD[77],WLRD[76]}),
        .WLWR({WLWR[79],WLWR[78],WLWR[77],WLWR[76]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_F5
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[20]), .DMY_EDGE_LT(DMY_EDGE_LT[21]),
        .DMY_EDGE_RB({DMY_EDGE_RT[41],DMY_EDGE_RT[40]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[43],DMY_EDGE_RT[42]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[83],WLRD[82],WLRD[81],WLRD[80]}),
        .WLWR({WLWR[83],WLWR[82],WLWR[81],WLWR[80]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_F5
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[21]), .DMY_EDGE_LT(DMY_EDGE_LT[22]),
        .DMY_EDGE_RB({DMY_EDGE_RT[43],DMY_EDGE_RT[42]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[45],DMY_EDGE_RT[44]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[87],WLRD[86],WLRD[85],WLRD[84]}),
        .WLWR({WLWR[87],WLWR[86],WLWR[85],WLWR[84]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_F4
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[22]), .DMY_EDGE_LT(DMY_EDGE_LT[23]),
        .DMY_EDGE_RB({DMY_EDGE_RT[45],DMY_EDGE_RT[44]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[47],DMY_EDGE_RT[46]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[91],WLRD[90],WLRD[89],WLRD[88]}),
        .WLWR({WLWR[91],WLWR[90],WLWR[89],WLWR[88]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_F4
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[23]), .DMY_EDGE_LT(DMY_EDGE_LT[24]),
        .DMY_EDGE_RB({DMY_EDGE_RT[47],DMY_EDGE_RT[46]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[49],DMY_EDGE_RT[48]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[95],WLRD[94],WLRD[93],WLRD[92]}),
        .WLWR({WLWR[95],WLWR[94],WLWR[93],WLWR[92]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_F3
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[24]), .DMY_EDGE_LT(DMY_EDGE_LT[25]),
        .DMY_EDGE_RB({DMY_EDGE_RT[49],DMY_EDGE_RT[48]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[51],DMY_EDGE_RT[50]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[99],WLRD[98],WLRD[97],WLRD[96]}),
        .WLWR({WLWR[99],WLWR[98],WLWR[97],WLWR[96]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_F3
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[25]), .DMY_EDGE_LT(DMY_EDGE_LT[26]),
        .DMY_EDGE_RB({DMY_EDGE_RT[51],DMY_EDGE_RT[50]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[53],DMY_EDGE_RT[52]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[103],WLRD[102],WLRD[101],WLRD[100]}),
        .WLWR({WLWR[103],WLWR[102],WLWR[101],WLWR[100]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_F2
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[26]), .DMY_EDGE_LT(DMY_EDGE_LT[27]),
        .DMY_EDGE_RB({DMY_EDGE_RT[53],DMY_EDGE_RT[52]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[55],DMY_EDGE_RT[54]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[107],WLRD[106],WLRD[105],WLRD[104]}),
        .WLWR({WLWR[107],WLWR[106],WLWR[105],WLWR[104]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_F2
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[27]), .DMY_EDGE_LT(DMY_EDGE_LT[28]),
        .DMY_EDGE_RB({DMY_EDGE_RT[55],DMY_EDGE_RT[54]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[57],DMY_EDGE_RT[56]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[111],WLRD[110],WLRD[109],WLRD[108]}),
        .WLWR({WLWR[111],WLWR[110],WLWR[109],WLWR[108]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_F1
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[28]), .DMY_EDGE_LT(DMY_EDGE_LT[29]),
        .DMY_EDGE_RB({DMY_EDGE_RT[57],DMY_EDGE_RT[56]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[59],DMY_EDGE_RT[58]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[115],WLRD[114],WLRD[113],WLRD[112]}),
        .WLWR({WLWR[115],WLWR[114],WLWR[113],WLWR[112]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_F1
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[29]), .DMY_EDGE_LT(DMY_EDGE_LT[30]),
        .DMY_EDGE_RB({DMY_EDGE_RT[59],DMY_EDGE_RT[58]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[61],DMY_EDGE_RT[60]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[119],WLRD[118],WLRD[117],WLRD[116]}),
        .WLWR({WLWR[119],WLWR[118],WLWR[117],WLWR[116]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_b X_ary_rt_b_F0
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[30]), .DMY_EDGE_LT(DMY_EDGE_LT[31]),
        .DMY_EDGE_RB({DMY_EDGE_RT[61],DMY_EDGE_RT[60]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[63],DMY_EDGE_RT[62]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[123],WLRD[122],WLRD[121],WLRD[120]}),
        .WLWR({WLWR[123],WLWR[122],WLWR[121],WLWR[120]}), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ary_rt_a X_ary_rt_a_F0
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LB(DMY_EDGE_LT[31]), .DMY_EDGE_LT(DMY_EDGE_LT[32]),
        .DMY_EDGE_RB({DMY_EDGE_RT[63],DMY_EDGE_RT[62]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[65],DMY_EDGE_RT[64]}), .LCGTV(LCGTV),
        .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD[127],WLRD[126],WLRD[125],WLRD[124]}),
        .WLWR({WLWR[127],WLWR[126],WLWR[125],WLWR[124]}), .WL_VSS(WL_VSS));
endmodule

module SNPS_RF_DP_HD_256x80_ary_right (BAB, BAT, DMY_EDGE_LT, DMY_EDGE_RT,
       LCGTV, LOG0, LOG1, PGIOI, QT, RBL, RERASSB, VBN, VBP, VDDA, VDDAIR1,
       VDDAIR2, VDDAI_SACR1, VDDAI_SACR2, VDDP, VDDPI, VDDWL_RD_REBUF,
       VDDWL_WR_REBUF, VEDGE, VSS, WLRD_H, WLWR_H, WL_VSS);
    inout [159:0] BAB;
    inout [159:0] BAT;
    inout [1:0] DMY_EDGE_LT;
    inout [3:0] DMY_EDGE_RT;
    inout LCGTV;
    inout LOG0;
    inout LOG1;
    inout PGIOI;
    inout [159:0] QT;
    inout [159:0] RBL;
    inout [1:0] RERASSB;
    inout [41:0] VBN;
    supply0 [41:0] VBN;
    inout [41:0] VBP;
    supply0 [41:0] VBP;
    inout [41:0] VDDA;
    supply1 [41:0] VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout [41:0] VDDP;
    supply1 [41:0] VDDP;
    inout [41:0] VDDPI;
    inout VDDWL_RD_REBUF;
    inout VDDWL_WR_REBUF;
    inout VEDGE;
    inout [41:0] VSS;
    supply0 [41:0] VSS;
    inout [127:0] WLRD_H;
    inout [127:0] WLWR_H;
    inout WL_VSS;
    SNPS_RF_DP_HD_256x80_ary_rt_no_cut X_ary_rt_no_cut
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LT({DMY_EDGE_LT[1],DMY_EDGE_LT[0]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[3],DMY_EDGE_RT[2],DMY_EDGE_RT[1],DMY_EDGE_RT[0]}),
        .LCGTV(LCGTV), .LOG0(LOG0), .LOG1(LOG1), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .WLRD({WLRD_H[127],WLRD_H[126],WLRD_H[125],WLRD_H[124],WLRD_H[123],WLRD_H[122],WLRD_H[121],WLRD_H[120],WLRD_H[119],WLRD_H[118],WLRD_H[117],WLRD_H[116],WLRD_H[115],WLRD_H[114],WLRD_H[113],WLRD_H[112],WLRD_H[111],WLRD_H[110],WLRD_H[109],WLRD_H[108],WLRD_H[107],WLRD_H[106],WLRD_H[105],WLRD_H[104],WLRD_H[103],WLRD_H[102],WLRD_H[101],WLRD_H[100],WLRD_H[99],WLRD_H[98],WLRD_H[97],WLRD_H[96],WLRD_H[95],WLRD_H[94],WLRD_H[93],WLRD_H[92],WLRD_H[91],WLRD_H[90],WLRD_H[89],WLRD_H[88],WLRD_H[87],WLRD_H[86],WLRD_H[85],WLRD_H[84],WLRD_H[83],WLRD_H[82],WLRD_H[81],WLRD_H[80],WLRD_H[79],WLRD_H[78],WLRD_H[77],WLRD_H[76],WLRD_H[75],WLRD_H[74],WLRD_H[73],WLRD_H[72],WLRD_H[71],WLRD_H[70],WLRD_H[69],WLRD_H[68],WLRD_H[67],WLRD_H[66],WLRD_H[65],WLRD_H[64],WLRD_H[63],WLRD_H[62],WLRD_H[61],WLRD_H[60],WLRD_H[59],WLRD_H[58],WLRD_H[57],WLRD_H[56],WLRD_H[55],WLRD_H[54],WLRD_H[53],WLRD_H[52],WLRD_H[51],WLRD_H[50],WLRD_H[49],WLRD_H[48],WLRD_H[47],WLRD_H[46],WLRD_H[45],WLRD_H[44],WLRD_H[43],WLRD_H[42],WLRD_H[41],WLRD_H[40],WLRD_H[39],WLRD_H[38],WLRD_H[37],WLRD_H[36],WLRD_H[35],WLRD_H[34],WLRD_H[33],WLRD_H[32],WLRD_H[31],WLRD_H[30],WLRD_H[29],WLRD_H[28],WLRD_H[27],WLRD_H[26],WLRD_H[25],WLRD_H[24],WLRD_H[23],WLRD_H[22],WLRD_H[21],WLRD_H[20],WLRD_H[19],WLRD_H[18],WLRD_H[17],WLRD_H[16],WLRD_H[15],WLRD_H[14],WLRD_H[13],WLRD_H[12],WLRD_H[11],WLRD_H[10],WLRD_H[9],WLRD_H[8],WLRD_H[7],WLRD_H[6],WLRD_H[5],WLRD_H[4],WLRD_H[3],WLRD_H[2],WLRD_H[1],WLRD_H[0]}),
        .WLWR({WLWR_H[127],WLWR_H[126],WLWR_H[125],WLWR_H[124],WLWR_H[123],WLWR_H[122],WLWR_H[121],WLWR_H[120],WLWR_H[119],WLWR_H[118],WLWR_H[117],WLWR_H[116],WLWR_H[115],WLWR_H[114],WLWR_H[113],WLWR_H[112],WLWR_H[111],WLWR_H[110],WLWR_H[109],WLWR_H[108],WLWR_H[107],WLWR_H[106],WLWR_H[105],WLWR_H[104],WLWR_H[103],WLWR_H[102],WLWR_H[101],WLWR_H[100],WLWR_H[99],WLWR_H[98],WLWR_H[97],WLWR_H[96],WLWR_H[95],WLWR_H[94],WLWR_H[93],WLWR_H[92],WLWR_H[91],WLWR_H[90],WLWR_H[89],WLWR_H[88],WLWR_H[87],WLWR_H[86],WLWR_H[85],WLWR_H[84],WLWR_H[83],WLWR_H[82],WLWR_H[81],WLWR_H[80],WLWR_H[79],WLWR_H[78],WLWR_H[77],WLWR_H[76],WLWR_H[75],WLWR_H[74],WLWR_H[73],WLWR_H[72],WLWR_H[71],WLWR_H[70],WLWR_H[69],WLWR_H[68],WLWR_H[67],WLWR_H[66],WLWR_H[65],WLWR_H[64],WLWR_H[63],WLWR_H[62],WLWR_H[61],WLWR_H[60],WLWR_H[59],WLWR_H[58],WLWR_H[57],WLWR_H[56],WLWR_H[55],WLWR_H[54],WLWR_H[53],WLWR_H[52],WLWR_H[51],WLWR_H[50],WLWR_H[49],WLWR_H[48],WLWR_H[47],WLWR_H[46],WLWR_H[45],WLWR_H[44],WLWR_H[43],WLWR_H[42],WLWR_H[41],WLWR_H[40],WLWR_H[39],WLWR_H[38],WLWR_H[37],WLWR_H[36],WLWR_H[35],WLWR_H[34],WLWR_H[33],WLWR_H[32],WLWR_H[31],WLWR_H[30],WLWR_H[29],WLWR_H[28],WLWR_H[27],WLWR_H[26],WLWR_H[25],WLWR_H[24],WLWR_H[23],WLWR_H[22],WLWR_H[21],WLWR_H[20],WLWR_H[19],WLWR_H[18],WLWR_H[17],WLWR_H[16],WLWR_H[15],WLWR_H[14],WLWR_H[13],WLWR_H[12],WLWR_H[11],WLWR_H[10],WLWR_H[9],WLWR_H[8],WLWR_H[7],WLWR_H[6],WLWR_H[5],WLWR_H[4],WLWR_H[3],WLWR_H[2],WLWR_H[1],WLWR_H[0]}),
        .WL_VSS(WL_VSS));
endmodule

module SNPS_RF_DP_HD_256x80_ary_r (ARYSD, BAB, BAT, BKRDB, BKRDB_128, CENDP,
       DEF1_RD, DEF1_WR, DMY_EDGE_LT, DMY_EDGE_RT, FAST1_RD, FAST1_WR, FAST2_RD,
       FAST2_WR, LCGTL, LCGTV, LOG0, LOG1, LRWMEB, LXADRB, PAWRB, PBRDB, PBWRB,
       PCRDB, PCWRB, PGIOI, QT, RASSB_H, RBL, RBLWA, RDBL, RERASSB, RFLOAT,
       RFLT_RET, RM3CNT, RMTRD, RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB,
       VBN, VBP, VDDA, VDDAIR1, VDDAIR2, VDDAI_SACR1, VDDAI_SACR2, VDDAPI, VDDF,
       VDDP, VDDPI, VDDWL_RD, VDDWL_RD_REBUF, VDDWL_WR, VDDWL_WR_REBUF, VEDGE,
       VSS, VSSWL, WCLKRD, WCLKWR, WDBL, WFLOAT, WL_VSS, XAWRB, XBRDB, XBWRB,
       XCRDB, XCWRB, YSELRD);
    inout ARYSD;
    inout [159:0] BAB;
    inout [159:0] BAT;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    inout DEF1_RD;
    inout DEF1_WR;
    inout [3:0] DMY_EDGE_LT;
    inout [3:0] DMY_EDGE_RT;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout [1:0] LCGTV;
    inout [1:0] LOG0;
    inout [1:0] LOG1;
    inout LRWMEB;
    inout [2:0] LXADRB;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout PGIOI;
    inout [159:0] QT;
    inout [1:0] RASSB_H;
    inout [159:0] RBL;
    inout RBLWA;
    inout RDBL;
    inout [1:0] RERASSB;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout [44:0] VBN;
    supply0 [44:0] VBN;
    inout [44:0] VBP;
    supply0 [44:0] VBP;
    inout [44:0] VDDA;
    supply1 [44:0] VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout [44:0] VDDP;
    supply1 [44:0] VDDP;
    inout [44:0] VDDPI;
    inout VDDWL_RD;
    inout VDDWL_RD_REBUF;
    inout VDDWL_WR;
    inout VDDWL_WR_REBUF;
    inout VEDGE;
    inout [44:0] VSS;
    supply0 [44:0] VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    wire [127:0] WLRD_H;
    wire [127:0] WLWR_H;
    inout WL_VSS;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;
    SNPS_RF_DP_HD_256x80_ary_cnt X_ary_cnt (.ARYSD(ARYSD), .BKRDB(BKRDB),
        .BKRDB_128(BKRDB_128), .CENDP(CENDP), .DEF1_RD(DEF1_RD),
        .DEF1_WR(DEF1_WR), .DMY_EDGE_LT({DMY_EDGE_LT[1],DMY_EDGE_LT[0]}),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LCGTV(LCGTV[0]), .LOG0(LOG0[0]),
        .LOG1(LOG1[0]), .LRWMEB(LRWMEB),
        .LXADRB({LXADRB[2],LXADRB[1],LXADRB[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}),
        .RASSB_H({RASSB_H[1],RASSB_H[0]}), .RBLWA(RBLWA), .RDBL(RDBL),
        .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN({VBN[2],VBN[1],VBN[0]}), .VBP({VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[2],VDDA[1],VDDA[0]}), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP({VDDP[2],VDDP[1],VDDP[0]}), .VDDPI({VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR), .VSS({VSS[2],VSS[1],VSS[0]}),
        .VSSWL(VSSWL), .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT),
        .WLRD_H({WLRD_H[127],WLRD_H[126],WLRD_H[125],WLRD_H[124],WLRD_H[123],WLRD_H[122],WLRD_H[121],WLRD_H[120],WLRD_H[119],WLRD_H[118],WLRD_H[117],WLRD_H[116],WLRD_H[115],WLRD_H[114],WLRD_H[113],WLRD_H[112],WLRD_H[111],WLRD_H[110],WLRD_H[109],WLRD_H[108],WLRD_H[107],WLRD_H[106],WLRD_H[105],WLRD_H[104],WLRD_H[103],WLRD_H[102],WLRD_H[101],WLRD_H[100],WLRD_H[99],WLRD_H[98],WLRD_H[97],WLRD_H[96],WLRD_H[95],WLRD_H[94],WLRD_H[93],WLRD_H[92],WLRD_H[91],WLRD_H[90],WLRD_H[89],WLRD_H[88],WLRD_H[87],WLRD_H[86],WLRD_H[85],WLRD_H[84],WLRD_H[83],WLRD_H[82],WLRD_H[81],WLRD_H[80],WLRD_H[79],WLRD_H[78],WLRD_H[77],WLRD_H[76],WLRD_H[75],WLRD_H[74],WLRD_H[73],WLRD_H[72],WLRD_H[71],WLRD_H[70],WLRD_H[69],WLRD_H[68],WLRD_H[67],WLRD_H[66],WLRD_H[65],WLRD_H[64],WLRD_H[63],WLRD_H[62],WLRD_H[61],WLRD_H[60],WLRD_H[59],WLRD_H[58],WLRD_H[57],WLRD_H[56],WLRD_H[55],WLRD_H[54],WLRD_H[53],WLRD_H[52],WLRD_H[51],WLRD_H[50],WLRD_H[49],WLRD_H[48],WLRD_H[47],WLRD_H[46],WLRD_H[45],WLRD_H[44],WLRD_H[43],WLRD_H[42],WLRD_H[41],WLRD_H[40],WLRD_H[39],WLRD_H[38],WLRD_H[37],WLRD_H[36],WLRD_H[35],WLRD_H[34],WLRD_H[33],WLRD_H[32],WLRD_H[31],WLRD_H[30],WLRD_H[29],WLRD_H[28],WLRD_H[27],WLRD_H[26],WLRD_H[25],WLRD_H[24],WLRD_H[23],WLRD_H[22],WLRD_H[21],WLRD_H[20],WLRD_H[19],WLRD_H[18],WLRD_H[17],WLRD_H[16],WLRD_H[15],WLRD_H[14],WLRD_H[13],WLRD_H[12],WLRD_H[11],WLRD_H[10],WLRD_H[9],WLRD_H[8],WLRD_H[7],WLRD_H[6],WLRD_H[5],WLRD_H[4],WLRD_H[3],WLRD_H[2],WLRD_H[1],WLRD_H[0]}),
        .WLWR_H({WLWR_H[127],WLWR_H[126],WLWR_H[125],WLWR_H[124],WLWR_H[123],WLWR_H[122],WLWR_H[121],WLWR_H[120],WLWR_H[119],WLWR_H[118],WLWR_H[117],WLWR_H[116],WLWR_H[115],WLWR_H[114],WLWR_H[113],WLWR_H[112],WLWR_H[111],WLWR_H[110],WLWR_H[109],WLWR_H[108],WLWR_H[107],WLWR_H[106],WLWR_H[105],WLWR_H[104],WLWR_H[103],WLWR_H[102],WLWR_H[101],WLWR_H[100],WLWR_H[99],WLWR_H[98],WLWR_H[97],WLWR_H[96],WLWR_H[95],WLWR_H[94],WLWR_H[93],WLWR_H[92],WLWR_H[91],WLWR_H[90],WLWR_H[89],WLWR_H[88],WLWR_H[87],WLWR_H[86],WLWR_H[85],WLWR_H[84],WLWR_H[83],WLWR_H[82],WLWR_H[81],WLWR_H[80],WLWR_H[79],WLWR_H[78],WLWR_H[77],WLWR_H[76],WLWR_H[75],WLWR_H[74],WLWR_H[73],WLWR_H[72],WLWR_H[71],WLWR_H[70],WLWR_H[69],WLWR_H[68],WLWR_H[67],WLWR_H[66],WLWR_H[65],WLWR_H[64],WLWR_H[63],WLWR_H[62],WLWR_H[61],WLWR_H[60],WLWR_H[59],WLWR_H[58],WLWR_H[57],WLWR_H[56],WLWR_H[55],WLWR_H[54],WLWR_H[53],WLWR_H[52],WLWR_H[51],WLWR_H[50],WLWR_H[49],WLWR_H[48],WLWR_H[47],WLWR_H[46],WLWR_H[45],WLWR_H[44],WLWR_H[43],WLWR_H[42],WLWR_H[41],WLWR_H[40],WLWR_H[39],WLWR_H[38],WLWR_H[37],WLWR_H[36],WLWR_H[35],WLWR_H[34],WLWR_H[33],WLWR_H[32],WLWR_H[31],WLWR_H[30],WLWR_H[29],WLWR_H[28],WLWR_H[27],WLWR_H[26],WLWR_H[25],WLWR_H[24],WLWR_H[23],WLWR_H[22],WLWR_H[21],WLWR_H[20],WLWR_H[19],WLWR_H[18],WLWR_H[17],WLWR_H[16],WLWR_H[15],WLWR_H[14],WLWR_H[13],WLWR_H[12],WLWR_H[11],WLWR_H[10],WLWR_H[9],WLWR_H[8],WLWR_H[7],WLWR_H[6],WLWR_H[5],WLWR_H[4],WLWR_H[3],WLWR_H[2],WLWR_H[1],WLWR_H[0]}),
        .XAWRB(XAWRB), .XBRDB(XBRDB), .XBWRB(XBWRB), .XCRDB(XCRDB),
        .XCWRB(XCWRB), .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_right X_ary_right
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_LT({DMY_EDGE_LT[3],DMY_EDGE_LT[2]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[3],DMY_EDGE_RT[2],DMY_EDGE_RT[1],DMY_EDGE_RT[0]}),
        .LCGTV(LCGTV[1]), .LOG0(LOG0[1]), .LOG1(LOG1[1]), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}),
        .VBN({VBN[44],VBN[43],VBN[42],VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23],VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3]}),
        .VBP({VBP[44],VBP[43],VBP[42],VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23],VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3]}),
        .VDDA({VDDA[44],VDDA[43],VDDA[42],VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23],VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3]}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[44],VDDP[43],VDDP[42],VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23],VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3]}),
        .VDDPI({VDDPI[44],VDDPI[43],VDDPI[42],VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22],VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VEDGE(VEDGE),
        .VSS({VSS[44],VSS[43],VSS[42],VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23],VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3]}),
        .WLRD_H({WLRD_H[127],WLRD_H[126],WLRD_H[125],WLRD_H[124],WLRD_H[123],WLRD_H[122],WLRD_H[121],WLRD_H[120],WLRD_H[119],WLRD_H[118],WLRD_H[117],WLRD_H[116],WLRD_H[115],WLRD_H[114],WLRD_H[113],WLRD_H[112],WLRD_H[111],WLRD_H[110],WLRD_H[109],WLRD_H[108],WLRD_H[107],WLRD_H[106],WLRD_H[105],WLRD_H[104],WLRD_H[103],WLRD_H[102],WLRD_H[101],WLRD_H[100],WLRD_H[99],WLRD_H[98],WLRD_H[97],WLRD_H[96],WLRD_H[95],WLRD_H[94],WLRD_H[93],WLRD_H[92],WLRD_H[91],WLRD_H[90],WLRD_H[89],WLRD_H[88],WLRD_H[87],WLRD_H[86],WLRD_H[85],WLRD_H[84],WLRD_H[83],WLRD_H[82],WLRD_H[81],WLRD_H[80],WLRD_H[79],WLRD_H[78],WLRD_H[77],WLRD_H[76],WLRD_H[75],WLRD_H[74],WLRD_H[73],WLRD_H[72],WLRD_H[71],WLRD_H[70],WLRD_H[69],WLRD_H[68],WLRD_H[67],WLRD_H[66],WLRD_H[65],WLRD_H[64],WLRD_H[63],WLRD_H[62],WLRD_H[61],WLRD_H[60],WLRD_H[59],WLRD_H[58],WLRD_H[57],WLRD_H[56],WLRD_H[55],WLRD_H[54],WLRD_H[53],WLRD_H[52],WLRD_H[51],WLRD_H[50],WLRD_H[49],WLRD_H[48],WLRD_H[47],WLRD_H[46],WLRD_H[45],WLRD_H[44],WLRD_H[43],WLRD_H[42],WLRD_H[41],WLRD_H[40],WLRD_H[39],WLRD_H[38],WLRD_H[37],WLRD_H[36],WLRD_H[35],WLRD_H[34],WLRD_H[33],WLRD_H[32],WLRD_H[31],WLRD_H[30],WLRD_H[29],WLRD_H[28],WLRD_H[27],WLRD_H[26],WLRD_H[25],WLRD_H[24],WLRD_H[23],WLRD_H[22],WLRD_H[21],WLRD_H[20],WLRD_H[19],WLRD_H[18],WLRD_H[17],WLRD_H[16],WLRD_H[15],WLRD_H[14],WLRD_H[13],WLRD_H[12],WLRD_H[11],WLRD_H[10],WLRD_H[9],WLRD_H[8],WLRD_H[7],WLRD_H[6],WLRD_H[5],WLRD_H[4],WLRD_H[3],WLRD_H[2],WLRD_H[1],WLRD_H[0]}),
        .WLWR_H({WLWR_H[127],WLWR_H[126],WLWR_H[125],WLWR_H[124],WLWR_H[123],WLWR_H[122],WLWR_H[121],WLWR_H[120],WLWR_H[119],WLWR_H[118],WLWR_H[117],WLWR_H[116],WLWR_H[115],WLWR_H[114],WLWR_H[113],WLWR_H[112],WLWR_H[111],WLWR_H[110],WLWR_H[109],WLWR_H[108],WLWR_H[107],WLWR_H[106],WLWR_H[105],WLWR_H[104],WLWR_H[103],WLWR_H[102],WLWR_H[101],WLWR_H[100],WLWR_H[99],WLWR_H[98],WLWR_H[97],WLWR_H[96],WLWR_H[95],WLWR_H[94],WLWR_H[93],WLWR_H[92],WLWR_H[91],WLWR_H[90],WLWR_H[89],WLWR_H[88],WLWR_H[87],WLWR_H[86],WLWR_H[85],WLWR_H[84],WLWR_H[83],WLWR_H[82],WLWR_H[81],WLWR_H[80],WLWR_H[79],WLWR_H[78],WLWR_H[77],WLWR_H[76],WLWR_H[75],WLWR_H[74],WLWR_H[73],WLWR_H[72],WLWR_H[71],WLWR_H[70],WLWR_H[69],WLWR_H[68],WLWR_H[67],WLWR_H[66],WLWR_H[65],WLWR_H[64],WLWR_H[63],WLWR_H[62],WLWR_H[61],WLWR_H[60],WLWR_H[59],WLWR_H[58],WLWR_H[57],WLWR_H[56],WLWR_H[55],WLWR_H[54],WLWR_H[53],WLWR_H[52],WLWR_H[51],WLWR_H[50],WLWR_H[49],WLWR_H[48],WLWR_H[47],WLWR_H[46],WLWR_H[45],WLWR_H[44],WLWR_H[43],WLWR_H[42],WLWR_H[41],WLWR_H[40],WLWR_H[39],WLWR_H[38],WLWR_H[37],WLWR_H[36],WLWR_H[35],WLWR_H[34],WLWR_H[33],WLWR_H[32],WLWR_H[31],WLWR_H[30],WLWR_H[29],WLWR_H[28],WLWR_H[27],WLWR_H[26],WLWR_H[25],WLWR_H[24],WLWR_H[23],WLWR_H[22],WLWR_H[21],WLWR_H[20],WLWR_H[19],WLWR_H[18],WLWR_H[17],WLWR_H[16],WLWR_H[15],WLWR_H[14],WLWR_H[13],WLWR_H[12],WLWR_H[11],WLWR_H[10],WLWR_H[9],WLWR_H[8],WLWR_H[7],WLWR_H[6],WLWR_H[5],WLWR_H[4],WLWR_H[3],WLWR_H[2],WLWR_H[1],WLWR_H[0]}),
        .WL_VSS(WL_VSS));
endmodule

module SNPS_RF_DP_HD_256x80_ary_row_1 (ARYSD, BAB, BAT, BKRDB, BKRDB_128, CENDP,
       DEF1_RD, DEF1_WR, DMY_EDGE_LB, DMY_EDGE_LT, DMY_EDGE_RB, DMY_EDGE_RT,
       FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LCGTV, LOG0, LOG1, LRWMEB,
       LXADRBRD_2, LXADRBRD_3, LXADRBRD_4, PAWRB, PBRDB, PBWRB, PCRDB, PCWRB,
       PGIOI, QT, RASSB_H, RBL, RBLWA, RDBL, RERASSB, RFLOAT, RFLT_RET, RM3CNT,
       RMTRD, RMTWR, RWLB_RD, RWLB_WR, T1TRD, T1TWR, TKEEPB, VBN, VBP, VDDA,
       VDDAIR1, VDDAIR2, VDDAI_SACR1, VDDAI_SACR2, VDDAPI, VDDF, VDDP, VDDPI,
       VDDWL_RD, VDDWL_RD_REBUF, VDDWL_WR, VDDWL_WR_REBUF, VEDGE, VSS, VSSWL,
       WCLKRD, WCLKWR, WDBL, WFLOAT, WL_VSS, XAWRB, XBRDB, XBWRB, XCRDB, XCWRB,
       YSELRD);
    inout ARYSD;
    inout [159:0] BAB;
    inout [159:0] BAT;
    inout BKRDB;
    inout BKRDB_128;
    inout CENDP;
    inout DEF1_RD;
    inout DEF1_WR;
    inout [1:0] DMY_EDGE_LB;
    inout [1:0] DMY_EDGE_LT;
    inout [1:0] DMY_EDGE_RB;
    inout [1:0] DMY_EDGE_RT;
    inout FAST1_RD;
    inout FAST1_WR;
    inout FAST2_RD;
    inout FAST2_WR;
    inout LCGTL;
    inout [1:0] LCGTV;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout LXADRBRD_2;
    inout LXADRBRD_3;
    inout LXADRBRD_4;
    inout [3:0] PAWRB;
    inout [3:0] PBRDB;
    inout [3:0] PBWRB;
    inout [3:0] PCRDB;
    inout [3:0] PCWRB;
    inout PGIOI;
    inout [159:0] QT;
    inout [1:0] RASSB_H;
    inout [159:0] RBL;
    inout RBLWA;
    inout RDBL;
    inout [1:0] RERASSB;
    inout RFLOAT;
    inout RFLT_RET;
    inout RM3CNT;
    inout [3:0] RMTRD;
    inout [3:0] RMTWR;
    inout RWLB_RD;
    inout RWLB_WR;
    inout T1TRD;
    inout T1TWR;
    inout TKEEPB;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_RD_REBUF;
    inout VDDWL_WR;
    inout VDDWL_WR_REBUF;
    inout VEDGE;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout [3:0] WCLKRD;
    inout [3:0] WCLKWR;
    inout WDBL;
    inout WFLOAT;
    inout WL_VSS;
    input XAWRB;
    input XBRDB;
    input XBWRB;
    input XCRDB;
    input XCWRB;
    inout [3:0] YSELRD;
    SNPS_RF_DP_HD_256x80_ary_r X_ary_r (.ARYSD(ARYSD),
        .BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .BKRDB(BKRDB), .BKRDB_128(BKRDB_128), .CENDP(CENDP), .DEF1_RD(DEF1_RD),
        .DEF1_WR(DEF1_WR),
        .DMY_EDGE_LT({DMY_EDGE_LT[1],DMY_EDGE_LB[1],DMY_EDGE_LT[0],DMY_EDGE_LB[0]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[1],DMY_EDGE_RT[0],DMY_EDGE_RB[1],DMY_EDGE_RB[0]}),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LCGTV({LCGTV[1],LCGTV[0]}),
        .LOG0({LOG0,LOG0}), .LOG1({LOG1,LOG1}), .LRWMEB(LRWMEB),
        .LXADRB({LXADRBRD_4,LXADRBRD_3,LXADRBRD_2}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RASSB_H({RASSB_H[1],RASSB_H[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RBLWA(RBLWA), .RDBL(RDBL), .RERASSB({RERASSB[1],RERASSB[0]}),
        .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN({VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN}),
        .VBP({VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP}),
        .VDDA({VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP({VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP}),
        .VDDPI({VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI}),
        .VDDWL_RD(VDDWL_RD), .VDDWL_RD_REBUF(VDDWL_RD_REBUF),
        .VDDWL_WR(VDDWL_WR), .VDDWL_WR_REBUF(VDDWL_WR_REBUF), .VEDGE(VEDGE),
        .VSS({VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS}),
        .VSSWL(VSSWL), .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WL_VSS(WL_VSS), .XAWRB(XAWRB), .XBRDB(XBRDB),
        .XBWRB(XBWRB), .XCRDB(XCRDB), .XCWRB(XCWRB),
        .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
endmodule

module SNPS_RF_DP_HD_256x80_ref_cnt (ARYSD, CENDP, DEF1_RD, DEF1_WR,
       DMY_EDGE_LB, DMY_EDGE_T2_R, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR,
       LCGTL, LCGTV, LOG0, LOG1, LRWMEB, RBLWA, RDBL, REF_LLSB_H, RFLOAT,
       RM3CNT, RMTRD, RMTWR, RWLB_INT_WR, RWLB_RD, RWLB_WR, RWLDRD, RWLDRD_PASS,
       RWLDWR, RWLRD, RWLRD_INT, RWLRD_PROG, RWLWR, RWL_PROG, T1TRD, T1TWR, VBN,
       VBP, VDDA, VDDAPI, VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL,
       WDBL, WFLOAT);
    inout ARYSD;
    inout CENDP;
    input DEF1_RD;
    input DEF1_WR;
    inout DMY_EDGE_LB;
    inout DMY_EDGE_T2_R;
    input FAST1_RD;
    input FAST1_WR;
    input FAST2_RD;
    input FAST2_WR;
    inout LCGTL;
    inout LCGTV;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    output RBLWA;
    inout RDBL;
    output REF_LLSB_H;
    inout RFLOAT;
    inout RM3CNT;
    input [3:0] RMTRD;
    input [3:0] RMTWR;
    output RWLB_INT_WR;
    input RWLB_RD;
    input RWLB_WR;
    inout RWLDRD;
    output RWLDRD_PASS;
    inout RWLDWR;
    output RWLRD;
    output RWLRD_INT;
    input RWLRD_PROG;
    output RWLWR;
    input RWL_PROG;
    inout T1TRD;
    inout T1TWR;
    inout [2:0] VBN;
    supply0 [2:0] VBN;
    inout [2:0] VBP;
    supply0 [2:0] VBP;
    inout [2:0] VDDA;
    supply1 [2:0] VDDA;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout [2:0] VDDP;
    supply1 [2:0] VDDP;
    inout [1:0] VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout [2:0] VSS;
    supply0 [2:0] VSS;
    inout VSSWL;
    inout WDBL;
    inout WFLOAT;

    //*** Jumper Report ***
    // Jumper: RWLDRD_PASS RWLRD_PROG
    // Jumper: RWLDWR RWL_PROG
    // Jumper: VDDA[1] VDDF VDDP[1] VDDPI[0]
    // Jumper: VDDA[2] VDDP[2] VDDPI[1]

    mm17a04_u_hdrf2p_rw_edgel X_mm17a04_u_hdrf2p_rw_edgel (VDDA[0], VDDP[0],
        VSS[0], VBP[0], VBN[0]);
    mm17a04_u_hdrf2p_rw X_mm17a04_u_hdrf2p_rw (VDDA[1], VDDAPI, VDDF, VDDP[1],
        VDDPI[0], VSS[1], VSSWL, VBP[1], VBN[1], LLST, RBLWA, RWLBRD, RWLBWR,
        RWLB_INT_WR, RWLDRD_PASS, RWLRD_INT, ARYSD, CENDP, LCGTL, LOG0, LOG1,
        LRWMEB, RDBL, RFLOAT, RM3CNT, T1TRD, T1TWR, WDBL, WFLOAT, DEF1_RD,
        DEF1_WR, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR, LCGTV, RMTRD[0],
        RMTRD[1], RMTRD[2], RMTRD[3], RMTWR[0], RMTWR[1], RMTWR[2], RMTWR[3],
        RWLB_RD, RWLB_WR, RWLDRD, RWLDWR, RWLRD_PROG, RWL_PROG);
    mm17a04_u_hdrf2p_rwbuf X_mm17a04_u_hdrf2p_rwbuf (VDDA[2], VDDP[2], VDDPI[1],
        VDDWL_RD, VDDWL_WR, VSS[2], VBP[2], VBN[2], REF_LLSB_H, RWLRD, RWLWR,
        DMY_EDGE_LB, DMY_EDGE_T2_R, LCGTV, LOG0, LOG1, RWLDRD, RWLDWR, LLST,
        RWLBRD, RWLBWR);
endmodule

module SNPS_RF_DP_HD_256x80_ref_rt_rwl (BAB, BAT, .DMY_EDGE_T2({DMY_EDGE_T2[5],
       DMY_EDGE_T2[1]}), LLSB, LOG0, LOG1, QT, RBL, RWLDRD, RWLDWR, RWLRD,
       RWLWR, VBN, VBP, VDDA, VDDAI, VDDAI_SAC, VDDP, VDDPI, VSS);
    inout [19:0] BAB;
    inout [19:0] BAT;
    inout [5:0] DMY_EDGE_T2;
    inout LLSB;
    inout LOG0;
    inout LOG1;
    inout [19:0] QT;
    inout [19:0] RBL;
    inout RWLDRD;
    inout RWLDWR;
    inout RWLRD;
    inout RWLWR;
    inout [4:0] VBN;
    supply0 [4:0] VBN;
    inout [4:0] VBP;
    supply0 [4:0] VBP;
    inout [4:0] VDDA;
    supply1 [4:0] VDDA;
    inout [4:0] VDDAI;
    inout [4:0] VDDAI_SAC;
    inout [4:0] VDDP;
    supply1 [4:0] VDDP;
    inout [4:0] VDDPI;
    inout [4:0] VSS;
    supply0 [4:0] VSS;

    //*** Jumper Report ***
    // Jumper: VDDA[0] VDDAI[0] VDDAI_SAC[0] VDDP[0]
    // Jumper: VDDA[1] VDDAI[1] VDDAI_SAC[1] VDDP[1]
    // Jumper: VDDA[2] VDDAI[2] VDDAI_SAC[2] VDDP[2]
    // Jumper: VDDA[3] VDDAI[3] VDDAI_SAC[3] VDDP[3]
    // Jumper: VDDA[4] VDDAI[4] VDDAI_SAC[4] VDDP[4]

    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S0 (VDDA[0], VDDAI[0],
        VDDAI_SAC[0], VDDP[0], VDDPI[0], VSS[0], VBP[0], VBN[0], BAB[0], BAB[1],
        BAB[2], BAB[3], BAT[0], BAT[1], BAT[2], BAT[3], DMY_EDGE_T2[1],
        DMY_EDGE_T2[0], LLSB, LOG0, LOG1, QT[0], QT[1], QT[2], QT[3], RBL[0],
        RBL[1], RBL[2], RBL[3], RWLDRD, RWLDWR, RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S1 (VDDA[1], VDDAI[1],
        VDDAI_SAC[1], VDDP[1], VDDPI[1], VSS[1], VBP[1], VBN[1], BAB[4], BAB[5],
        BAB[6], BAB[7], BAT[4], BAT[5], BAT[6], BAT[7], DMY_EDGE_T2[0],
        DMY_EDGE_T2[2], LLSB, LOG0, LOG1, QT[4], QT[5], QT[6], QT[7], RBL[4],
        RBL[5], RBL[6], RBL[7], RWLDRD, RWLDWR, RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F2 (VDDA[2], VDDAI[2],
        VDDAI_SAC[2], VDDP[2], VDDPI[2], VSS[2], VBP[2], VBN[2], BAB[8], BAB[9],
        BAB[10], BAB[11], BAT[8], BAT[9], BAT[10], BAT[11], DMY_EDGE_T2[2],
        DMY_EDGE_T2[3], LLSB, LOG0, LOG1, QT[8], QT[9], QT[10], QT[11], RBL[8],
        RBL[9], RBL[10], RBL[11], RWLDRD, RWLDWR, RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F1 (VDDA[3], VDDAI[3],
        VDDAI_SAC[3], VDDP[3], VDDPI[3], VSS[3], VBP[3], VBN[3], BAB[12],
        BAB[13], BAB[14], BAB[15], BAT[12], BAT[13], BAT[14], BAT[15],
        DMY_EDGE_T2[3], DMY_EDGE_T2[4], LLSB, LOG0, LOG1, QT[12], QT[13],
        QT[14], QT[15], RBL[12], RBL[13], RBL[14], RBL[15], RWLDRD, RWLDWR,
        RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F0 (VDDA[4], VDDAI[4],
        VDDAI_SAC[4], VDDP[4], VDDPI[4], VSS[4], VBP[4], VBN[4], BAB[16],
        BAB[17], BAB[18], BAB[19], BAT[16], BAT[17], BAT[18], BAT[19],
        DMY_EDGE_T2[4], DMY_EDGE_T2[5], LLSB, LOG0, LOG1, QT[16], QT[17],
        QT[18], QT[19], RBL[16], RBL[17], RBL[18], RBL[19], RWLDRD, RWLDWR,
        RWLRD, RWLWR);
endmodule

module SNPS_RF_DP_HD_256x80_ref_cnt_rt_rwl (ARYSD, BAB, BAT, CENDP, DEF1_RD,
       DEF1_WR, DMY_EDGE_LB, .DMY_EDGE_T2_R({DMY_EDGE_T2_R[1]}), FAST1_RD,
       FAST1_WR, FAST2_RD, FAST2_WR, LCGTL, LCGTV, LOG0, LOG1, LRWMEB, QT, RBL,
       RBLWA, RDBL, REF_LLSB_H, RFLOAT, RM3CNT, RMTRD, RMTWR, RWLB_INT_WR,
       RWLB_RD, RWLB_WR, RWLDRD, RWLDRD_PASS, RWLDWR, RWLRD, RWLRD_INT,
       RWLRD_PROG, RWLWR, RWL_PROG, T1TRD, T1TWR, VBN, VBP, VDDA, VDDAIR1,
       VDDAI_SACR1, VDDAPI, VDDF, VDDP, VDDPI, VDDWL_RD, VDDWL_WR, VSS, VSSWL,
       WDBL, WFLOAT);
    inout ARYSD;
    inout [19:0] BAB;
    inout [19:0] BAT;
    inout CENDP;
    input DEF1_RD;
    input DEF1_WR;
    inout DMY_EDGE_LB;
    inout [1:0] DMY_EDGE_T2_R;
    input FAST1_RD;
    input FAST1_WR;
    input FAST2_RD;
    input FAST2_WR;
    inout LCGTL;
    inout LCGTV;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    inout [19:0] QT;
    inout [19:0] RBL;
    output RBLWA;
    inout RDBL;
    inout REF_LLSB_H;
    inout RFLOAT;
    inout RM3CNT;
    input [3:0] RMTRD;
    input [3:0] RMTWR;
    output RWLB_INT_WR;
    input RWLB_RD;
    input RWLB_WR;
    inout RWLDRD;
    output RWLDRD_PASS;
    inout RWLDWR;
    inout RWLRD;
    output RWLRD_INT;
    input RWLRD_PROG;
    inout RWLWR;
    input RWL_PROG;
    inout T1TRD;
    inout T1TWR;
    inout [7:0] VBN;
    supply0 [7:0] VBN;
    inout [7:0] VBP;
    supply0 [7:0] VBP;
    inout [7:0] VDDA;
    supply1 [7:0] VDDA;
    inout VDDAIR1;
    inout VDDAI_SACR1;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout [7:0] VDDP;
    supply1 [7:0] VDDP;
    inout [6:0] VDDPI;
    inout VDDWL_RD;
    inout VDDWL_WR;
    inout [7:0] VSS;
    supply0 [7:0] VSS;
    inout VSSWL;
    inout WDBL;
    inout WFLOAT;
    SNPS_RF_DP_HD_256x80_ref_cnt X_ref_cnt (.ARYSD(ARYSD), .CENDP(CENDP),
        .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR), .DMY_EDGE_LB(DMY_EDGE_LB),
        .DMY_EDGE_T2_R(DMY_EDGE_T2_R[0]), .FAST1_RD(FAST1_RD),
        .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD), .FAST2_WR(FAST2_WR),
        .LCGTL(LCGTL), .LCGTV(LCGTV), .LOG0(LOG0), .LOG1(LOG1), .LRWMEB(LRWMEB),
        .RBLWA(RBLWA), .RDBL(RDBL), .REF_LLSB_H(REF_LLSB_H), .RFLOAT(RFLOAT),
        .RM3CNT(RM3CNT), .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}),
        .RWLB_INT_WR(RWLB_INT_WR), .RWLB_RD(RWLB_RD), .RWLB_WR(RWLB_WR),
        .RWLDRD(RWLDRD), .RWLDRD_PASS(RWLDRD_PASS), .RWLDWR(RWLDWR),
        .RWLRD(RWLRD), .RWLRD_INT(RWLRD_INT), .RWLRD_PROG(RWLRD_PROG),
        .RWLWR(RWLWR), .RWL_PROG(RWL_PROG), .T1TRD(T1TRD), .T1TWR(T1TWR),
        .VBN({VBN[2],VBN[1],VBN[0]}), .VBP({VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[2],VDDA[1],VDDA[0]}), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP({VDDP[2],VDDP[1],VDDP[0]}), .VDDPI({VDDPI[1],VDDPI[0]}),
        .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR), .VSS({VSS[2],VSS[1],VSS[0]}),
        .VSSWL(VSSWL), .WDBL(WDBL), .WFLOAT(WFLOAT));
    SNPS_RF_DP_HD_256x80_ref_rt_rwl X_ref_rt_rwl
        (.BAB({BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_T2({DMY_EDGE_T2_R[1],DMY_EDGE_T2_R[0]}), .LLSB(REF_LLSB_H),
        .LOG0(LOG0), .LOG1(LOG1),
        .QT({QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RWLDRD(RWLDRD), .RWLDWR(RWLDWR), .RWLRD(RWLRD), .RWLWR(RWLWR),
        .VBN({VBN[7],VBN[6],VBN[5],VBN[4],VBN[3]}),
        .VBP({VBP[7],VBP[6],VBP[5],VBP[4],VBP[3]}),
        .VDDA({VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3]}),
        .VDDAI({VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1}),
        .VDDAI_SAC({VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1}),
        .VDDP({VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3]}),
        .VDDPI({VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2]}),
        .VSS({VSS[7],VSS[6],VSS[5],VSS[4],VSS[3]}));
endmodule

module SNPS_RF_DP_HD_256x80_ref_rt_log0_case (BAB, BAT,
       .DMY_EDGE_T2({DMY_EDGE_T2[14], DMY_EDGE_T2[1]}), LLSB, LOG0, LOG1, QT,
       RBL, RWLDRD, RWLDWR, RWLRD, RWLWR, VBN, VBP, VDDA, VDDAI, VDDAI_SAC,
       VDDP, VDDPI, VSS);
    inout [55:0] BAB;
    inout [55:0] BAT;
    inout [14:0] DMY_EDGE_T2;
    inout LLSB;
    inout LOG0;
    inout LOG1;
    inout [55:0] QT;
    inout [55:0] RBL;
    inout RWLDRD;
    inout RWLDWR;
    inout RWLRD;
    inout RWLWR;
    inout [13:0] VBN;
    supply0 [13:0] VBN;
    inout [13:0] VBP;
    supply0 [13:0] VBP;
    inout [13:0] VDDA;
    supply1 [13:0] VDDA;
    inout [13:0] VDDAI;
    inout [13:0] VDDAI_SAC;
    inout [13:0] VDDP;
    supply1 [13:0] VDDP;
    inout [13:0] VDDPI;
    inout [13:0] VSS;
    supply0 [13:0] VSS;

    //*** Jumper Report ***
    // Jumper: VDDA[0] VDDAI[0] VDDAI_SAC[0] VDDP[0]
    // Jumper: VDDA[1] VDDAI[1] VDDAI_SAC[1] VDDP[1]
    // Jumper: VDDA[2] VDDAI[2] VDDAI_SAC[2] VDDP[2]
    // Jumper: VDDA[3] VDDAI[3] VDDAI_SAC[3] VDDP[3]
    // Jumper: VDDA[4] VDDAI[4] VDDAI_SAC[4] VDDP[4]
    // Jumper: VDDA[5] VDDAI[5] VDDAI_SAC[5] VDDP[5]
    // Jumper: VDDA[6] VDDAI[6] VDDAI_SAC[6] VDDP[6]
    // Jumper: VDDA[7] VDDAI[7] VDDAI_SAC[7] VDDP[7]
    // Jumper: VDDA[8] VDDAI[8] VDDAI_SAC[8] VDDP[8]
    // Jumper: VDDA[9] VDDAI[9] VDDAI_SAC[9] VDDP[9]
    // Jumper: VDDA[10] VDDAI[10] VDDAI_SAC[10] VDDP[10]
    // Jumper: VDDA[11] VDDAI[11] VDDAI_SAC[11] VDDP[11]
    // Jumper: VDDA[12] VDDAI[12] VDDAI_SAC[12] VDDP[12]
    // Jumper: VDDA[13] VDDAI[13] VDDAI_SAC[13] VDDP[13]

    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S0 (VDDA[0], VDDAI[0],
        VDDAI_SAC[0], VDDP[0], VDDPI[0], VSS[0], VBP[0], VBN[0], BAB[0], BAB[1],
        BAB[2], BAB[3], BAT[0], BAT[1], BAT[2], BAT[3], DMY_EDGE_T2[1],
        DMY_EDGE_T2[0], LLSB, LOG0, LOG1, QT[0], QT[1], QT[2], QT[3], RBL[0],
        RBL[1], RBL[2], RBL[3], RWLDRD, RWLDWR, RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S1 (VDDA[1], VDDAI[1],
        VDDAI_SAC[1], VDDP[1], VDDPI[1], VSS[1], VBP[1], VBN[1], BAB[4], BAB[5],
        BAB[6], BAB[7], BAT[4], BAT[5], BAT[6], BAT[7], DMY_EDGE_T2[0],
        DMY_EDGE_T2[2], LLSB, LOG0, LOG1, QT[4], QT[5], QT[6], QT[7], RBL[4],
        RBL[5], RBL[6], RBL[7], RWLDRD, RWLDWR, RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S2 (VDDA[2], VDDAI[2],
        VDDAI_SAC[2], VDDP[2], VDDPI[2], VSS[2], VBP[2], VBN[2], BAB[8], BAB[9],
        BAB[10], BAB[11], BAT[8], BAT[9], BAT[10], BAT[11], DMY_EDGE_T2[2],
        DMY_EDGE_T2[3], LLSB, LOG0, LOG1, QT[8], QT[9], QT[10], QT[11], RBL[8],
        RBL[9], RBL[10], RBL[11], RWLDRD, RWLDWR, RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S3 (VDDA[3], VDDAI[3],
        VDDAI_SAC[3], VDDP[3], VDDPI[3], VSS[3], VBP[3], VBN[3], BAB[12],
        BAB[13], BAB[14], BAB[15], BAT[12], BAT[13], BAT[14], BAT[15],
        DMY_EDGE_T2[3], DMY_EDGE_T2[4], LLSB, LOG0, LOG1, QT[12], QT[13],
        QT[14], QT[15], RBL[12], RBL[13], RBL[14], RBL[15], RWLDRD, RWLDWR,
        RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S4 (VDDA[4], VDDAI[4],
        VDDAI_SAC[4], VDDP[4], VDDPI[4], VSS[4], VBP[4], VBN[4], BAB[16],
        BAB[17], BAB[18], BAB[19], BAT[16], BAT[17], BAT[18], BAT[19],
        DMY_EDGE_T2[4], DMY_EDGE_T2[5], LLSB, LOG0, LOG1, QT[16], QT[17],
        QT[18], QT[19], RBL[16], RBL[17], RBL[18], RBL[19], RWLDRD, RWLDWR,
        RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S5 (VDDA[5], VDDAI[5],
        VDDAI_SAC[5], VDDP[5], VDDPI[5], VSS[5], VBP[5], VBN[5], BAB[20],
        BAB[21], BAB[22], BAB[23], BAT[20], BAT[21], BAT[22], BAT[23],
        DMY_EDGE_T2[5], DMY_EDGE_T2[6], LLSB, LOG0, LOG1, QT[20], QT[21],
        QT[22], QT[23], RBL[20], RBL[21], RBL[22], RBL[23], RWLDRD, RWLDWR,
        RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S6 (VDDA[6], VDDAI[6],
        VDDAI_SAC[6], VDDP[6], VDDPI[6], VSS[6], VBP[6], VBN[6], BAB[24],
        BAB[25], BAB[26], BAB[27], BAT[24], BAT[25], BAT[26], BAT[27],
        DMY_EDGE_T2[6], DMY_EDGE_T2[7], LLSB, LOG0, LOG1, QT[24], QT[25],
        QT[26], QT[27], RBL[24], RBL[25], RBL[26], RBL[27], RWLDRD, RWLDWR,
        RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F6 (VDDA[7], VDDAI[7],
        VDDAI_SAC[7], VDDP[7], VDDPI[7], VSS[7], VBP[7], VBN[7], BAB[28],
        BAB[29], BAB[30], BAB[31], BAT[28], BAT[29], BAT[30], BAT[31],
        DMY_EDGE_T2[7], DMY_EDGE_T2[8], LLSB, LOG0, LOG1, QT[28], QT[29],
        QT[30], QT[31], RBL[28], RBL[29], RBL[30], RBL[31], RWLDRD, RWLDWR,
        RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F5 (VDDA[8], VDDAI[8],
        VDDAI_SAC[8], VDDP[8], VDDPI[8], VSS[8], VBP[8], VBN[8], BAB[32],
        BAB[33], BAB[34], BAB[35], BAT[32], BAT[33], BAT[34], BAT[35],
        DMY_EDGE_T2[8], DMY_EDGE_T2[9], LLSB, LOG0, LOG1, QT[32], QT[33],
        QT[34], QT[35], RBL[32], RBL[33], RBL[34], RBL[35], RWLDRD, RWLDWR,
        RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F4 (VDDA[9], VDDAI[9],
        VDDAI_SAC[9], VDDP[9], VDDPI[9], VSS[9], VBP[9], VBN[9], BAB[36],
        BAB[37], BAB[38], BAB[39], BAT[36], BAT[37], BAT[38], BAT[39],
        DMY_EDGE_T2[9], DMY_EDGE_T2[10], LLSB, LOG0, LOG1, QT[36], QT[37],
        QT[38], QT[39], RBL[36], RBL[37], RBL[38], RBL[39], RWLDRD, RWLDWR,
        RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F3 (VDDA[10],
        VDDAI[10], VDDAI_SAC[10], VDDP[10], VDDPI[10], VSS[10], VBP[10],
        VBN[10], BAB[40], BAB[41], BAB[42], BAB[43], BAT[40], BAT[41], BAT[42],
        BAT[43], DMY_EDGE_T2[10], DMY_EDGE_T2[11], LLSB, LOG0, LOG1, QT[40],
        QT[41], QT[42], QT[43], RBL[40], RBL[41], RBL[42], RBL[43], RWLDRD,
        RWLDWR, RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F2 (VDDA[11],
        VDDAI[11], VDDAI_SAC[11], VDDP[11], VDDPI[11], VSS[11], VBP[11],
        VBN[11], BAB[44], BAB[45], BAB[46], BAB[47], BAT[44], BAT[45], BAT[46],
        BAT[47], DMY_EDGE_T2[11], DMY_EDGE_T2[12], LLSB, LOG0, LOG1, QT[44],
        QT[45], QT[46], QT[47], RBL[44], RBL[45], RBL[46], RBL[47], RWLDRD,
        RWLDWR, RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F1 (VDDA[12],
        VDDAI[12], VDDAI_SAC[12], VDDP[12], VDDPI[12], VSS[12], VBP[12],
        VBN[12], BAB[48], BAB[49], BAB[50], BAB[51], BAT[48], BAT[49], BAT[50],
        BAT[51], DMY_EDGE_T2[12], DMY_EDGE_T2[13], LLSB, LOG0, LOG1, QT[48],
        QT[49], QT[50], QT[51], RBL[48], RBL[49], RBL[50], RBL[51], RWLDRD,
        RWLDWR, RWLRD, RWLWR);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F0 (VDDA[13],
        VDDAI[13], VDDAI_SAC[13], VDDP[13], VDDPI[13], VSS[13], VBP[13],
        VBN[13], BAB[52], BAB[53], BAB[54], BAB[55], BAT[52], BAT[53], BAT[54],
        BAT[55], DMY_EDGE_T2[13], DMY_EDGE_T2[14], LLSB, LOG0, LOG1, QT[52],
        QT[53], QT[54], QT[55], RBL[52], RBL[53], RBL[54], RBL[55], RWLDRD,
        RWLDWR, RWLRD, RWLWR);
endmodule

module SNPS_RF_DP_HD_256x80_ref_rt_seg2 (BAB, BAT,
       .DMY_EDGE_T2({DMY_EDGE_T2[20], DMY_EDGE_T2[1]}), LLSB, LOG0, LOG1, QT,
       RBL, VBN, VBP, VDDA, VDDAI, VDDAI_SAC, VDDP, VDDPI, VSS);
    inout [79:0] BAB;
    inout [79:0] BAT;
    inout [20:0] DMY_EDGE_T2;
    inout LLSB;
    inout LOG0;
    inout LOG1;
    inout [79:0] QT;
    inout [79:0] RBL;
    inout [19:0] VBN;
    supply0 [19:0] VBN;
    inout [19:0] VBP;
    supply0 [19:0] VBP;
    inout [19:0] VDDA;
    supply1 [19:0] VDDA;
    inout [19:0] VDDAI;
    inout [19:0] VDDAI_SAC;
    inout [19:0] VDDP;
    supply1 [19:0] VDDP;
    inout [19:0] VDDPI;
    inout [19:0] VSS;
    supply0 [19:0] VSS;

    //*** Jumper Report ***
    // Jumper: VDDA[0] VDDAI[0] VDDAI_SAC[0] VDDP[0]
    // Jumper: VDDA[1] VDDAI[1] VDDAI_SAC[1] VDDP[1]
    // Jumper: VDDA[2] VDDAI[2] VDDAI_SAC[2] VDDP[2]
    // Jumper: VDDA[3] VDDAI[3] VDDAI_SAC[3] VDDP[3]
    // Jumper: VDDA[4] VDDAI[4] VDDAI_SAC[4] VDDP[4]
    // Jumper: VDDA[5] VDDAI[5] VDDAI_SAC[5] VDDP[5]
    // Jumper: VDDA[6] VDDAI[6] VDDAI_SAC[6] VDDP[6]
    // Jumper: VDDA[7] VDDAI[7] VDDAI_SAC[7] VDDP[7]
    // Jumper: VDDA[8] VDDAI[8] VDDAI_SAC[8] VDDP[8]
    // Jumper: VDDA[9] VDDAI[9] VDDAI_SAC[9] VDDP[9]
    // Jumper: VDDA[10] VDDAI[10] VDDAI_SAC[10] VDDP[10]
    // Jumper: VDDA[11] VDDAI[11] VDDAI_SAC[11] VDDP[11]
    // Jumper: VDDA[12] VDDAI[12] VDDAI_SAC[12] VDDP[12]
    // Jumper: VDDA[13] VDDAI[13] VDDAI_SAC[13] VDDP[13]
    // Jumper: VDDA[14] VDDAI[14] VDDAI_SAC[14] VDDP[14]
    // Jumper: VDDA[15] VDDAI[15] VDDAI_SAC[15] VDDP[15]
    // Jumper: VDDA[16] VDDAI[16] VDDAI_SAC[16] VDDP[16]
    // Jumper: VDDA[17] VDDAI[17] VDDAI_SAC[17] VDDP[17]
    // Jumper: VDDA[18] VDDAI[18] VDDAI_SAC[18] VDDP[18]
    // Jumper: VDDA[19] VDDAI[19] VDDAI_SAC[19] VDDP[19]

    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S0 (VDDA[0], VDDAI[0],
        VDDAI_SAC[0], VDDP[0], VDDPI[0], VSS[0], VBP[0], VBN[0], BAB[0], BAB[1],
        BAB[2], BAB[3], BAT[0], BAT[1], BAT[2], BAT[3], DMY_EDGE_T2[1],
        DMY_EDGE_T2[0], LLSB, LOG0, LOG1, QT[0], QT[1], QT[2], QT[3], RBL[0],
        RBL[1], RBL[2], RBL[3], LOG0, LOG0, LOG0, LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S1 (VDDA[1], VDDAI[1],
        VDDAI_SAC[1], VDDP[1], VDDPI[1], VSS[1], VBP[1], VBN[1], BAB[4], BAB[5],
        BAB[6], BAB[7], BAT[4], BAT[5], BAT[6], BAT[7], DMY_EDGE_T2[0],
        DMY_EDGE_T2[2], LLSB, LOG0, LOG1, QT[4], QT[5], QT[6], QT[7], RBL[4],
        RBL[5], RBL[6], RBL[7], LOG0, LOG0, LOG0, LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S2 (VDDA[2], VDDAI[2],
        VDDAI_SAC[2], VDDP[2], VDDPI[2], VSS[2], VBP[2], VBN[2], BAB[8], BAB[9],
        BAB[10], BAB[11], BAT[8], BAT[9], BAT[10], BAT[11], DMY_EDGE_T2[2],
        DMY_EDGE_T2[3], LLSB, LOG0, LOG1, QT[8], QT[9], QT[10], QT[11], RBL[8],
        RBL[9], RBL[10], RBL[11], LOG0, LOG0, LOG0, LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S3 (VDDA[3], VDDAI[3],
        VDDAI_SAC[3], VDDP[3], VDDPI[3], VSS[3], VBP[3], VBN[3], BAB[12],
        BAB[13], BAB[14], BAB[15], BAT[12], BAT[13], BAT[14], BAT[15],
        DMY_EDGE_T2[3], DMY_EDGE_T2[4], LLSB, LOG0, LOG1, QT[12], QT[13],
        QT[14], QT[15], RBL[12], RBL[13], RBL[14], RBL[15], LOG0, LOG0, LOG0,
        LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S4 (VDDA[4], VDDAI[4],
        VDDAI_SAC[4], VDDP[4], VDDPI[4], VSS[4], VBP[4], VBN[4], BAB[16],
        BAB[17], BAB[18], BAB[19], BAT[16], BAT[17], BAT[18], BAT[19],
        DMY_EDGE_T2[4], DMY_EDGE_T2[5], LLSB, LOG0, LOG1, QT[16], QT[17],
        QT[18], QT[19], RBL[16], RBL[17], RBL[18], RBL[19], LOG0, LOG0, LOG0,
        LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S5 (VDDA[5], VDDAI[5],
        VDDAI_SAC[5], VDDP[5], VDDPI[5], VSS[5], VBP[5], VBN[5], BAB[20],
        BAB[21], BAB[22], BAB[23], BAT[20], BAT[21], BAT[22], BAT[23],
        DMY_EDGE_T2[5], DMY_EDGE_T2[6], LLSB, LOG0, LOG1, QT[20], QT[21],
        QT[22], QT[23], RBL[20], RBL[21], RBL[22], RBL[23], LOG0, LOG0, LOG0,
        LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S6 (VDDA[6], VDDAI[6],
        VDDAI_SAC[6], VDDP[6], VDDPI[6], VSS[6], VBP[6], VBN[6], BAB[24],
        BAB[25], BAB[26], BAB[27], BAT[24], BAT[25], BAT[26], BAT[27],
        DMY_EDGE_T2[6], DMY_EDGE_T2[7], LLSB, LOG0, LOG1, QT[24], QT[25],
        QT[26], QT[27], RBL[24], RBL[25], RBL[26], RBL[27], LOG0, LOG0, LOG0,
        LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S7 (VDDA[7], VDDAI[7],
        VDDAI_SAC[7], VDDP[7], VDDPI[7], VSS[7], VBP[7], VBN[7], BAB[28],
        BAB[29], BAB[30], BAB[31], BAT[28], BAT[29], BAT[30], BAT[31],
        DMY_EDGE_T2[7], DMY_EDGE_T2[8], LLSB, LOG0, LOG1, QT[28], QT[29],
        QT[30], QT[31], RBL[28], RBL[29], RBL[30], RBL[31], LOG0, LOG0, LOG0,
        LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S8 (VDDA[8], VDDAI[8],
        VDDAI_SAC[8], VDDP[8], VDDPI[8], VSS[8], VBP[8], VBN[8], BAB[32],
        BAB[33], BAB[34], BAB[35], BAT[32], BAT[33], BAT[34], BAT[35],
        DMY_EDGE_T2[8], DMY_EDGE_T2[9], LLSB, LOG0, LOG1, QT[32], QT[33],
        QT[34], QT[35], RBL[32], RBL[33], RBL[34], RBL[35], LOG0, LOG0, LOG0,
        LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_S9 (VDDA[9], VDDAI[9],
        VDDAI_SAC[9], VDDP[9], VDDPI[9], VSS[9], VBP[9], VBN[9], BAB[36],
        BAB[37], BAB[38], BAB[39], BAT[36], BAT[37], BAT[38], BAT[39],
        DMY_EDGE_T2[9], DMY_EDGE_T2[10], LLSB, LOG0, LOG1, QT[36], QT[37],
        QT[38], QT[39], RBL[36], RBL[37], RBL[38], RBL[39], LOG0, LOG0, LOG0,
        LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F9 (VDDA[10],
        VDDAI[10], VDDAI_SAC[10], VDDP[10], VDDPI[10], VSS[10], VBP[10],
        VBN[10], BAB[40], BAB[41], BAB[42], BAB[43], BAT[40], BAT[41], BAT[42],
        BAT[43], DMY_EDGE_T2[10], DMY_EDGE_T2[11], LLSB, LOG0, LOG1, QT[40],
        QT[41], QT[42], QT[43], RBL[40], RBL[41], RBL[42], RBL[43], LOG0, LOG0,
        LOG0, LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F8 (VDDA[11],
        VDDAI[11], VDDAI_SAC[11], VDDP[11], VDDPI[11], VSS[11], VBP[11],
        VBN[11], BAB[44], BAB[45], BAB[46], BAB[47], BAT[44], BAT[45], BAT[46],
        BAT[47], DMY_EDGE_T2[11], DMY_EDGE_T2[12], LLSB, LOG0, LOG1, QT[44],
        QT[45], QT[46], QT[47], RBL[44], RBL[45], RBL[46], RBL[47], LOG0, LOG0,
        LOG0, LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F7 (VDDA[12],
        VDDAI[12], VDDAI_SAC[12], VDDP[12], VDDPI[12], VSS[12], VBP[12],
        VBN[12], BAB[48], BAB[49], BAB[50], BAB[51], BAT[48], BAT[49], BAT[50],
        BAT[51], DMY_EDGE_T2[12], DMY_EDGE_T2[13], LLSB, LOG0, LOG1, QT[48],
        QT[49], QT[50], QT[51], RBL[48], RBL[49], RBL[50], RBL[51], LOG0, LOG0,
        LOG0, LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F6 (VDDA[13],
        VDDAI[13], VDDAI_SAC[13], VDDP[13], VDDPI[13], VSS[13], VBP[13],
        VBN[13], BAB[52], BAB[53], BAB[54], BAB[55], BAT[52], BAT[53], BAT[54],
        BAT[55], DMY_EDGE_T2[13], DMY_EDGE_T2[14], LLSB, LOG0, LOG1, QT[52],
        QT[53], QT[54], QT[55], RBL[52], RBL[53], RBL[54], RBL[55], LOG0, LOG0,
        LOG0, LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F5 (VDDA[14],
        VDDAI[14], VDDAI_SAC[14], VDDP[14], VDDPI[14], VSS[14], VBP[14],
        VBN[14], BAB[56], BAB[57], BAB[58], BAB[59], BAT[56], BAT[57], BAT[58],
        BAT[59], DMY_EDGE_T2[14], DMY_EDGE_T2[15], LLSB, LOG0, LOG1, QT[56],
        QT[57], QT[58], QT[59], RBL[56], RBL[57], RBL[58], RBL[59], LOG0, LOG0,
        LOG0, LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F4 (VDDA[15],
        VDDAI[15], VDDAI_SAC[15], VDDP[15], VDDPI[15], VSS[15], VBP[15],
        VBN[15], BAB[60], BAB[61], BAB[62], BAB[63], BAT[60], BAT[61], BAT[62],
        BAT[63], DMY_EDGE_T2[15], DMY_EDGE_T2[16], LLSB, LOG0, LOG1, QT[60],
        QT[61], QT[62], QT[63], RBL[60], RBL[61], RBL[62], RBL[63], LOG0, LOG0,
        LOG0, LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F3 (VDDA[16],
        VDDAI[16], VDDAI_SAC[16], VDDP[16], VDDPI[16], VSS[16], VBP[16],
        VBN[16], BAB[64], BAB[65], BAB[66], BAB[67], BAT[64], BAT[65], BAT[66],
        BAT[67], DMY_EDGE_T2[16], DMY_EDGE_T2[17], LLSB, LOG0, LOG1, QT[64],
        QT[65], QT[66], QT[67], RBL[64], RBL[65], RBL[66], RBL[67], LOG0, LOG0,
        LOG0, LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F2 (VDDA[17],
        VDDAI[17], VDDAI_SAC[17], VDDP[17], VDDPI[17], VSS[17], VBP[17],
        VBN[17], BAB[68], BAB[69], BAB[70], BAB[71], BAT[68], BAT[69], BAT[70],
        BAT[71], DMY_EDGE_T2[17], DMY_EDGE_T2[18], LLSB, LOG0, LOG1, QT[68],
        QT[69], QT[70], QT[71], RBL[68], RBL[69], RBL[70], RBL[71], LOG0, LOG0,
        LOG0, LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F1 (VDDA[18],
        VDDAI[18], VDDAI_SAC[18], VDDP[18], VDDPI[18], VSS[18], VBP[18],
        VBN[18], BAB[72], BAB[73], BAB[74], BAB[75], BAT[72], BAT[73], BAT[74],
        BAT[75], DMY_EDGE_T2[18], DMY_EDGE_T2[19], LLSB, LOG0, LOG1, QT[72],
        QT[73], QT[74], QT[75], RBL[72], RBL[73], RBL[74], RBL[75], LOG0, LOG0,
        LOG0, LOG0);
    mm17a04_u_hdrf2p_rar2x4m1 X_mm17a04_u_hdrf2p_rar2x4m1_F0 (VDDA[19],
        VDDAI[19], VDDAI_SAC[19], VDDP[19], VDDPI[19], VSS[19], VBP[19],
        VBN[19], BAB[76], BAB[77], BAB[78], BAB[79], BAT[76], BAT[77], BAT[78],
        BAT[79], DMY_EDGE_T2[19], DMY_EDGE_T2[20], LLSB, LOG0, LOG1, QT[76],
        QT[77], QT[78], QT[79], RBL[76], RBL[77], RBL[78], RBL[79], LOG0, LOG0,
        LOG0, LOG0);
endmodule

module SNPS_RF_DP_HD_256x80_ref_rt_rep_seg2 (BAB, BAT, DMY_EDGE_LB, DMY_EDGE_RB,
       .DMY_EDGE_T2({DMY_EDGE_T2[2], DMY_EDGE_T2[1]}), LCGTV, LOG0, LOG1, QT,
       RBL, REF_LLSB_H, RELLSB, RWLDRD, RWLDWR, RWLRD, RWLWR, VBN, VBP, VDDA,
       VDDAIR2, VDDAI_SACR2, VDDP, VDDPI, VDDWL_RD_REBUF, VDDWL_WR_REBUF, VSS,
       WL_VSS);
    inout [79:0] BAB;
    inout [79:0] BAT;
    inout DMY_EDGE_LB;
    inout DMY_EDGE_RB;
    inout [2:0] DMY_EDGE_T2;
    input LCGTV;
    inout LOG0;
    inout LOG1;
    inout [79:0] QT;
    inout [79:0] RBL;
    input REF_LLSB_H;
    inout RELLSB;
    output RWLDRD;
    output RWLDWR;
    input RWLRD;
    input RWLWR;
    inout [20:0] VBN;
    supply0 [20:0] VBN;
    inout [20:0] VBP;
    supply0 [20:0] VBP;
    inout [20:0] VDDA;
    supply1 [20:0] VDDA;
    inout VDDAIR2;
    inout VDDAI_SACR2;
    inout [20:0] VDDP;
    supply1 [20:0] VDDP;
    inout [20:0] VDDPI;
    inout VDDWL_RD_REBUF;
    inout VDDWL_WR_REBUF;
    inout [20:0] VSS;
    supply0 [20:0] VSS;
    inout WL_VSS;

    //*** Jumper Report ***
    // Jumper: LOG0 RWLDRD RWLDWR RWLRD RWLWR
    // Jumper: VDDP[0] VDDPI[0]

    mm17a04_u_hdrf2p_rwrebuf X_mm17a04_u_hdrf2p_rwrebuf (VDDA[0], VDDP[0],
        VDDPI[0], VDDWL_RD_REBUF, VDDWL_WR_REBUF, VSS[0], VBP[0], VBN[0],
        RELLSB, RWLDRD, RWLDWR, DMY_EDGE_LB, DMY_EDGE_RB, DMY_EDGE_T2[1],
        DMY_EDGE_T2[0], LOG0, LOG1, WL_VSS, LCGTV, REF_LLSB_H, RWLRD, RWLWR);
    SNPS_RF_DP_HD_256x80_ref_rt_seg2 X_ref_rt_seg2
        (.BAB({BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .DMY_EDGE_T2({DMY_EDGE_T2[2],DMY_EDGE_T2[0]}), .LLSB(RELLSB),
        .LOG0(LOG0), .LOG1(LOG1),
        .QT({QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({}),
        .VBN({VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9],VBN[8],VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1]}),
        .VBP({VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9],VBP[8],VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1]}),
        .VDDA({VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9],VDDA[8],VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1]}),
        .VDDAI({VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2,VDDAIR2}),
        .VDDAI_SAC({VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2,VDDAI_SACR2}),
        .VDDP({VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9],VDDP[8],VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1]}),
        .VDDPI({VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8],VDDPI[7],VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1]}),
        .VSS({VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9],VSS[8],VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1]}));
endmodule

module SNPS_RF_DP_HD_256x80_ref_row (ARYSD, BAB, BAT, CENDP, DEF1_RD, DEF1_WR,
       DMY_EDGE_LB, DMY_EDGE_RB, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR, LCGTL,
       LCGTV, LOG0, LOG1, LRWMEB, PGIOI, QT, RBL, RBLWA, RDBL, RFLOAT, RM3CNT,
       RMTRD, RMTWR, RWLB_INT_WR, RWLB_RD, RWLB_WR, RWLDRD_PASS, RWLRD_INT,
       RWLRD_PROG, RWL_PROG, T1TRD, T1TWR, VBN, VBP, VDDA, VDDAIR1, VDDAIR2,
       VDDAI_SACR1, VDDAI_SACR2, VDDAPI, VDDF, VDDP, VDDPI, VDDWL_RD,
       VDDWL_RD_REBUF, VDDWL_WR, VDDWL_WR_REBUF, VEDGE, VSS, VSSWL, WDBL,
       WFLOAT, WL_VSS);
    inout ARYSD;
    inout [159:0] BAB;
    inout [159:0] BAT;
    inout CENDP;
    input DEF1_RD;
    input DEF1_WR;
    inout [1:0] DMY_EDGE_LB;
    inout [1:0] DMY_EDGE_RB;
    wire [2:0] DMY_EDGE_T2;
    input FAST1_RD;
    input FAST1_WR;
    input FAST2_RD;
    input FAST2_WR;
    inout LCGTL;
    inout [1:0] LCGTV;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    input PGIOI;
    inout [159:0] QT;
    inout [159:0] RBL;
    output RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RM3CNT;
    input [3:0] RMTRD;
    input [3:0] RMTWR;
    output RWLB_INT_WR;
    input RWLB_RD;
    input RWLB_WR;
    wire [1:0] RWLDRD;
    output RWLDRD_PASS;
    wire [1:0] RWLDWR;
    output RWLRD_INT;
    input RWLRD_PROG;
    input RWL_PROG;
    inout T1TRD;
    inout T1TWR;
    inout [44:0] VBN;
    supply0 [44:0] VBN;
    inout [44:0] VBP;
    supply0 [44:0] VBP;
    inout [44:0] VDDA;
    supply1 [44:0] VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout [44:0] VDDP;
    supply1 [44:0] VDDP;
    inout [43:0] VDDPI;
    inout VDDWL_RD;
    inout VDDWL_RD_REBUF;
    inout VDDWL_WR;
    inout VDDWL_WR_REBUF;
    inout VEDGE;
    inout [44:0] VSS;
    supply0 [44:0] VSS;
    inout VSSWL;
    inout WDBL;
    inout WFLOAT;
    inout WL_VSS;

    //*** Jumper Report ***
    // Jumper: LOG1 PGIOI
    // Jumper: VDDA[8] VDDAIR1 VDDAI_SACR1 VDDP[8]
    // Jumper: VDDA[44] VDDP[44]

    SNPS_RF_DP_HD_256x80_ref_cnt_rt_rwl X_ref_cnt_rt_rwl (.ARYSD(ARYSD),
        .BAB({BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .CENDP(CENDP), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .DMY_EDGE_LB(DMY_EDGE_LB[0]), .DMY_EDGE_T2_R({DMY_EDGE_T2_R}),
        .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD),
        .FAST2_WR(FAST2_WR), .LCGTL(LCGTL), .LCGTV(LCGTV[0]), .LOG0(LOG0),
        .LOG1(LOG1), .LRWMEB(LRWMEB),
        .QT({QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RBLWA(RBLWA), .RDBL(RDBL), .REF_LLSB_H(REF_LLSB_H), .RFLOAT(RFLOAT),
        .RM3CNT(RM3CNT), .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}),
        .RWLB_INT_WR(RWLB_INT_WR), .RWLB_RD(RWLB_RD), .RWLB_WR(RWLB_WR),
        .RWLDRD(RWLDRD[0]), .RWLDRD_PASS(RWLDRD_PASS), .RWLDWR(RWL_PROG),
        .RWLRD(RWLDRD[0]), .RWLRD_INT(RWLRD_INT), .RWLRD_PROG(RWLRD_PROG),
        .RWLWR(RWL_PROG), .RWL_PROG(RWL_PROG), .T1TRD(T1TRD), .T1TWR(T1TWR),
        .VBN({VBN[7],VBN[6],VBN[5],VBN[4],VBN[3],VBN[2],VBN[1],VBN[0]}),
        .VBP({VBP[7],VBP[6],VBP[5],VBP[4],VBP[3],VBP[2],VBP[1],VBP[0]}),
        .VDDA({VDDA[7],VDDA[6],VDDA[5],VDDA[4],VDDA[3],VDDA[2],VDDA[1],VDDA[0]}),
        .VDDAIR1(VDDAIR1), .VDDAI_SACR1(VDDAI_SACR1), .VDDAPI(VDDAPI),
        .VDDF(VDDF),
        .VDDP({VDDP[7],VDDP[6],VDDP[5],VDDP[4],VDDP[3],VDDP[2],VDDP[1],VDDP[0]}),
        .VDDPI({VDDPI[6],VDDPI[5],VDDPI[4],VDDPI[3],VDDPI[2],VDDPI[1],VDDPI[0]}),
        .VDDWL_RD(VDDWL_RD), .VDDWL_WR(VDDWL_WR),
        .VSS({VSS[7],VSS[6],VSS[5],VSS[4],VSS[3],VSS[2],VSS[1],VSS[0]}),
        .VSSWL(VSSWL), .WDBL(WDBL), .WFLOAT(WFLOAT));
    mm17a04_u_hdrf2p_rrar2x4m1 X_mm17a04_u_hdrf2p_rrar2x4m1 (VDDA[8], VDDAIR1,
        VDDAI_SACR1, VDDP[8], VDDPI[7], VSS[8], VBP[8], VBN[8], BAB[20],
        BAB[21], BAB[22], BAB[23], BAT[20], BAT[21], BAT[22], BAT[23],
        DMY_EDGE_T2_R, DMY_EDGE_T2[0], REF_LLSB_H, LOG0, LOG1, QT[20], QT[21],
        QT[22], QT[23], RBL[20], RBL[21], RBL[22], RBL[23], RWLDRD[0],
        RWL_PROG);
    SNPS_RF_DP_HD_256x80_ref_rt_log0_case X_ref_rt_log0_case
        (.BAB({BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24]}),
        .BAT({BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24]}),
        .DMY_EDGE_T2({DMY_EDGE_T2[1],DMY_EDGE_T2[0]}), .LLSB(REF_LLSB_H),
        .LOG0(LOG0), .LOG1(LOG1),
        .QT({QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24]}),
        .RBL({RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24]}),
        .RWLDRD(LOG0), .RWLDWR(LOG0), .RWLRD(LOG0), .RWLWR(LOG0),
        .VBN({VBN[22],VBN[21],VBN[20],VBN[19],VBN[18],VBN[17],VBN[16],VBN[15],VBN[14],VBN[13],VBN[12],VBN[11],VBN[10],VBN[9]}),
        .VBP({VBP[22],VBP[21],VBP[20],VBP[19],VBP[18],VBP[17],VBP[16],VBP[15],VBP[14],VBP[13],VBP[12],VBP[11],VBP[10],VBP[9]}),
        .VDDA({VDDA[22],VDDA[21],VDDA[20],VDDA[19],VDDA[18],VDDA[17],VDDA[16],VDDA[15],VDDA[14],VDDA[13],VDDA[12],VDDA[11],VDDA[10],VDDA[9]}),
        .VDDAI({VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1,VDDAIR1}),
        .VDDAI_SAC({VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1,VDDAI_SACR1}),
        .VDDP({VDDP[22],VDDP[21],VDDP[20],VDDP[19],VDDP[18],VDDP[17],VDDP[16],VDDP[15],VDDP[14],VDDP[13],VDDP[12],VDDP[11],VDDP[10],VDDP[9]}),
        .VDDPI({VDDPI[21],VDDPI[20],VDDPI[19],VDDPI[18],VDDPI[17],VDDPI[16],VDDPI[15],VDDPI[14],VDDPI[13],VDDPI[12],VDDPI[11],VDDPI[10],VDDPI[9],VDDPI[8]}),
        .VSS({VSS[22],VSS[21],VSS[20],VSS[19],VSS[18],VSS[17],VSS[16],VSS[15],VSS[14],VSS[13],VSS[12],VSS[11],VSS[10],VSS[9]}));
    SNPS_RF_DP_HD_256x80_ref_rt_rep_seg2 X_ref_rt_rep_seg2
        (.BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80]}),
        .BAT({}),
        .DMY_EDGE_LB(DMY_EDGE_LB[1]), .DMY_EDGE_RB(DMY_EDGE_RB[0]),
        .DMY_EDGE_T2({DMY_EDGE_T2[2],DMY_EDGE_T2_R_REBUF}), .LCGTV(LCGTV[1]),
        .LOG0(LOG0), .LOG1(LOG1),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80]}),
        .REF_LLSB_H(REF_LLSB_H), .RELLSB(RELLSB), .RWLDRD(LOG0), .RWLDWR(LOG0),
        .RWLRD(LOG0), .RWLWR(LOG0),
        .VBN({VBN[43],VBN[42],VBN[41],VBN[40],VBN[39],VBN[38],VBN[37],VBN[36],VBN[35],VBN[34],VBN[33],VBN[32],VBN[31],VBN[30],VBN[29],VBN[28],VBN[27],VBN[26],VBN[25],VBN[24],VBN[23]}),
        .VBP({VBP[43],VBP[42],VBP[41],VBP[40],VBP[39],VBP[38],VBP[37],VBP[36],VBP[35],VBP[34],VBP[33],VBP[32],VBP[31],VBP[30],VBP[29],VBP[28],VBP[27],VBP[26],VBP[25],VBP[24],VBP[23]}),
        .VDDA({VDDA[43],VDDA[42],VDDA[41],VDDA[40],VDDA[39],VDDA[38],VDDA[37],VDDA[36],VDDA[35],VDDA[34],VDDA[33],VDDA[32],VDDA[31],VDDA[30],VDDA[29],VDDA[28],VDDA[27],VDDA[26],VDDA[25],VDDA[24],VDDA[23]}),
        .VDDAIR2(VDDAIR2), .VDDAI_SACR2(VDDAI_SACR2),
        .VDDP({VDDP[43],VDDP[42],VDDP[41],VDDP[40],VDDP[39],VDDP[38],VDDP[37],VDDP[36],VDDP[35],VDDP[34],VDDP[33],VDDP[32],VDDP[31],VDDP[30],VDDP[29],VDDP[28],VDDP[27],VDDP[26],VDDP[25],VDDP[24],VDDP[23]}),
        .VDDPI({VDDPI[42],VDDPI[41],VDDPI[40],VDDPI[39],VDDPI[38],VDDPI[37],VDDPI[36],VDDPI[35],VDDPI[34],VDDPI[33],VDDPI[32],VDDPI[31],VDDPI[30],VDDPI[29],VDDPI[28],VDDPI[27],VDDPI[26],VDDPI[25],VDDPI[24],VDDPI[23],VDDPI[22]}),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR_REBUF(VDDWL_WR_REBUF),
        .VSS({VSS[43],VSS[42],VSS[41],VSS[40],VSS[39],VSS[38],VSS[37],VSS[36],VSS[35],VSS[34],VSS[33],VSS[32],VSS[31],VSS[30],VSS[29],VSS[28],VSS[27],VSS[26],VSS[25],VSS[24],VSS[23]}),
        .WL_VSS(WL_VSS));
    mm17a04_u_hdrf2p_pg_pwedge X_mm17a04_u_hdrf2p_pg_pwedge (VDDA[44], VDDP[44],
        VDDPI[43], VSS[44], VBP[44], VBN[44], DMY_EDGE_RB[1], DMY_EDGE_T2[2],
        LOG0, LOG1, VEDGE, PGIOI);
endmodule

module SNPS_RF_DP_HD_256x80_ref_row_1 (ARYSD, BAB, BAT, CENDP, DEF1_RD, DEF1_WR,
       DMY_EDGE_LB, DMY_EDGE_RB, FAST1_RD, FAST1_WR, FAST2_RD, FAST2_WR, LCGTL,
       LCGTV, LOG0, LOG1, LRWMEB, PGIOI, QT, RBL, RBLWA, RDBL, RFLOAT, RM3CNT,
       RMTRD, RMTWR, RWLB_INT_WR, RWLB_RD, RWLB_WR, RWLDRD_PASS, RWLRD_INT,
       RWLRD_PROG, RWL_PROG, T1TRD, T1TWR, VBN, VBP, VDDA, VDDAIR1, VDDAIR2,
       VDDAI_SACR1, VDDAI_SACR2, VDDAPI, VDDF, VDDP, VDDPI, VDDWL_RD,
       VDDWL_RD_REBUF, VDDWL_WR, VDDWL_WR_REBUF, VEDGE, VSS, VSSWL, WDBL,
       WFLOAT, WL_VSS);
    inout ARYSD;
    inout [159:0] BAB;
    inout [159:0] BAT;
    inout CENDP;
    input DEF1_RD;
    input DEF1_WR;
    inout [1:0] DMY_EDGE_LB;
    inout [1:0] DMY_EDGE_RB;
    input FAST1_RD;
    input FAST1_WR;
    input FAST2_RD;
    input FAST2_WR;
    inout LCGTL;
    inout [1:0] LCGTV;
    inout LOG0;
    inout LOG1;
    inout LRWMEB;
    input PGIOI;
    inout [159:0] QT;
    inout [159:0] RBL;
    output RBLWA;
    inout RDBL;
    inout RFLOAT;
    inout RM3CNT;
    input [3:0] RMTRD;
    input [3:0] RMTWR;
    output RWLB_INT_WR;
    input RWLB_RD;
    input RWLB_WR;
    output RWLDRD_PASS;
    output RWLRD_INT;
    input RWLRD_PROG;
    input RWL_PROG;
    inout T1TRD;
    inout T1TWR;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDAIR1;
    inout VDDAIR2;
    inout VDDAI_SACR1;
    inout VDDAI_SACR2;
    inout VDDAPI;
    inout VDDF;
    supply1 VDDF;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VDDWL_RD;
    inout VDDWL_RD_REBUF;
    inout VDDWL_WR;
    inout VDDWL_WR_REBUF;
    inout VEDGE;
    inout VSS;
    supply0 VSS;
    inout VSSWL;
    inout WDBL;
    inout WFLOAT;
    inout WL_VSS;
    SNPS_RF_DP_HD_256x80_ref_row X_ref_row (.ARYSD(ARYSD),
        .BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .CENDP(CENDP), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .DMY_EDGE_LB({DMY_EDGE_LB[1],DMY_EDGE_LB[0]}),
        .DMY_EDGE_RB({DMY_EDGE_RB[1],DMY_EDGE_RB[0]}), .FAST1_RD(FAST1_RD),
        .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD), .FAST2_WR(FAST2_WR),
        .LCGTL(LCGTL), .LCGTV({LCGTV[1],LCGTV[0]}), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .PGIOI(PGIOI),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RBLWA(RBLWA), .RDBL(RDBL), .RFLOAT(RFLOAT), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}),
        .RWLB_INT_WR(RWLB_INT_WR), .RWLB_RD(RWLB_RD), .RWLB_WR(RWLB_WR),
        .RWLDRD_PASS(RWLDRD_PASS), .RWLRD_INT(RWLRD_INT),
        .RWLRD_PROG(RWLRD_PROG), .RWL_PROG(RWL_PROG), .T1TRD(T1TRD),
        .T1TWR(T1TWR),
        .VBN({VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN}),
        .VBP({VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP}),
        .VDDA({VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA}),
        .VDDAIR1(VDDAIR1), .VDDAIR2(VDDAIR2), .VDDAI_SACR1(VDDAI_SACR1),
        .VDDAI_SACR2(VDDAI_SACR2), .VDDAPI(VDDAPI), .VDDF(VDDF),
        .VDDP({VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP}),
        .VDDPI({VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI}),
        .VDDWL_RD(VDDWL_RD), .VDDWL_RD_REBUF(VDDWL_RD_REBUF),
        .VDDWL_WR(VDDWL_WR), .VDDWL_WR_REBUF(VDDWL_WR_REBUF), .VEDGE(VEDGE),
        .VSS({VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS}),
        .VSSWL(VSSWL), .WDBL(WDBL), .WFLOAT(WFLOAT), .WL_VSS(WL_VSS));
endmodule

module SNPS_RF_DP_HD_256x80_ref_cnt_dummy ();
    mm17a04_u_hdrf2p_rw_edgel_dummy X_mm17a04_u_hdrf2p_rw_edgel_dummy ();
    mm17a04_u_hdrf2p_rw_dummy X_mm17a04_u_hdrf2p_rw_dummy ();
    mm17a04_u_hdrf2p_rwbuf_dummy X_mm17a04_u_hdrf2p_rwbuf_dummy ();
endmodule

module SNPS_RF_DP_HD_256x80_ref_rt_rwl_dummy ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S0 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S1 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F2 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F1 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F0 ();
endmodule

module SNPS_RF_DP_HD_256x80_ref_cnt_rt_rwl_dummy ();
    SNPS_RF_DP_HD_256x80_ref_cnt_dummy X_ref_cnt_dummy ();
    SNPS_RF_DP_HD_256x80_ref_rt_rwl_dummy X_ref_rt_rwl_dummy ();
endmodule

module SNPS_RF_DP_HD_256x80_ref_rt_log0_case_dummy ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S0 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S1 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S2 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S3 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S4 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S5 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S6 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F6 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F5 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F4 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F3 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F2 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F1 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F0 ();
endmodule

module SNPS_RF_DP_HD_256x80_ref_rt_seg2_dummy ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S0 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S1 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S2 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S3 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S4 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S5 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S6 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S7 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S8 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_S9 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F9 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F8 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F7 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F6 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F5 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F4 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F3 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F2 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F1 ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy_F0 ();
endmodule

module SNPS_RF_DP_HD_256x80_ref_rt_rep_seg2_dummy ();
    mm17a04_u_hdrf2p_rwrebuf_dummy X_mm17a04_u_hdrf2p_rwrebuf_dummy ();
    SNPS_RF_DP_HD_256x80_ref_rt_seg2_dummy X_ref_rt_seg2_dummy ();
endmodule

module SNPS_RF_DP_HD_256x80_ref_row_dummy ();
    SNPS_RF_DP_HD_256x80_ref_cnt_rt_rwl_dummy X_ref_cnt_rt_rwl_dummy ();
    mm17a04_u_hdrf2p_rar2x4m1_dummy X_mm17a04_u_hdrf2p_rar2x4m1_dummy ();
    SNPS_RF_DP_HD_256x80_ref_rt_log0_case_dummy X_ref_rt_log0_case_dummy ();
    SNPS_RF_DP_HD_256x80_ref_rt_rep_seg2_dummy X_ref_rt_rep_seg2_dummy ();
    mm17a04_u_hdrf2p_pg_pwedge_dummy X_mm17a04_u_hdrf2p_pg_pwedge_dummy ();
endmodule

module SNPS_RF_DP_HD_256x80_top (ARYSD, CLKRD, CLKWR, D, DS, FISO, LOG0, LOG1,
       LS, MERD, MEWR, PROCOM, Q, RA, RMERD, RMEWR, RMRD, RMWR, ROP, TEST1RD,
       TEST1WR, TEST_RNM, VBN, VBP, VDDA, VDDP, VDDPI, VSS, WA, WE, WEM, WP,
       XADRRD, XADRWR, YADRRD, YADRWR);
    inout ARYSD;
    wire [159:0] BAB;
    wire [39:0] BADB;
    wire [159:0] BAT;
    wire [39:0] CB;
    inout CLKRD;
    inout CLKWR;
    wire [39:0] CT;
    inout [79:0] D;
    wire [39:0] DFTBIO;
    wire [39:0] DFTBIOB;
    wire [79:0] DIB_LT;
    wire [79:0] DINB;
    wire [3:0] DMY_EDGE_LT;
    wire [3:0] DMY_EDGE_RT;
    inout DS;
    inout FISO;
    wire [1:0] LCGTL;
    wire [1:0] LCGTV;
    wire [79:0] LDIB;
    wire [1:0] LIOPD;
    inout LOG0;
    inout LOG1;
    wire [79:0] LQB;
    inout LS;
    wire [2:0] LXADR;
    wire [7:0] LXADRBWR;
    wire [7:0] LXADRRD;
    wire [7:0] LXADRWR;
    wire [1:0] LYADRBRD;
    wire [1:0] LYADRBWR;
    wire [1:0] LYADRRD;
    wire [1:0] LYADRWR;
    inout MERD;
    inout MEWR;
    wire [3:0] PAARD;
    wire [3:0] PAAWR;
    wire [3:0] PAWR;
    wire [3:0] PAWRB;
    wire [3:0] PBRD;
    wire [3:0] PBRDB;
    wire [3:0] PBWR;
    wire [3:0] PBWRB;
    wire [3:0] PCRD;
    wire [3:0] PCRDB;
    wire [3:0] PCWR;
    wire [3:0] PCWRB;
    wire [2:0] PLBKADR;
    inout [1:0] PROCOM;
    inout [79:0] Q;
    wire [159:0] QT;
    inout [1:0] RA;
    wire [1:0] RASSB_H;
    wire [159:0] RBL;
    wire [1:0] RDBL;
    wire [1:0] RERASSB;
    wire [3:0] RMDEF12_RD_PROCOM00;
    wire [3:0] RMDEF12_RD_PROCOM01;
    wire [3:0] RMDEF12_WR_PROCOM00;
    wire [3:0] RMDEF12_WR_PROCOM01;
    inout RMERD;
    inout RMEWR;
    inout [3:0] RMRD;
    wire [3:0] RMTRD;
    wire [3:0] RMTWR;
    inout [3:0] RMWR;
    inout ROP;
    inout TEST1RD;
    inout TEST1WR;
    inout TEST_RNM;
    inout VBN;
    supply0 VBN;
    inout VBP;
    supply0 VBP;
    inout VDDA;
    supply1 VDDA;
    inout VDDP;
    supply1 VDDP;
    inout VDDPI;
    inout VSS;
    supply0 VSS;
    inout [1:0] WA;
    wire [2:0] WABUF;
    wire [79:0] WAGND;
    wire [79:0] WBI;
    wire [3:0] WCLKRD;
    wire [3:0] WCLKWR;
    inout WE;
    inout [79:0] WEM;
    wire [79:0] WEMB;
    inout [2:0] WP;
    wire [2:0] WPBUF;
    wire [79:0] WTI;
    inout [7:0] XADRRD;
    inout [7:0] XADRWR;
    inout [1:0] YADRRD;
    inout [1:0] YADRWR;
    wire [3:0] YCOLRD;
    wire [3:0] YCOLWR;
    wire [3:0] YSELRD;
    SNPS_RF_DP_HD_256x80_pin_row X_pin_row (.ARYSD(ARYSD), .CLKRD(CLKRD),
        .CLKWR(CLKWR),
        .D({D[79],D[78],D[77],D[76],D[75],D[74],D[73],D[72],D[71],D[70],D[69],D[68],D[67],D[66],D[65],D[64],D[63],D[62],D[61],D[60],D[59],D[58],D[57],D[56],D[55],D[54],D[53],D[52],D[51],D[50],D[49],D[48],D[47],D[46],D[45],D[44],D[43],D[42],D[41],D[40],D[39],D[38],D[37],D[36],D[35],D[34],D[33],D[32],D[31],D[30],D[29],D[28],D[27],D[26],D[25],D[24],D[23],D[22],D[21],D[20],D[19],D[18],D[17],D[16],D[15],D[14],D[13],D[12],D[11],D[10],D[9],D[8],D[7],D[6],D[5],D[4],D[3],D[2],D[1],D[0]}),
        .DS(DS), .FISO(FISO), .LOG0({LOG0,LOG0}), .LOG1({LOG1,LOG1}), .LS(LS),
        .MERD(MERD), .MEWR(MEWR), .PROCOM({PROCOM[1],PROCOM[0]}),
        .Q({Q[79],Q[78],Q[77],Q[76],Q[75],Q[74],Q[73],Q[72],Q[71],Q[70],Q[69],Q[68],Q[67],Q[66],Q[65],Q[64],Q[63],Q[62],Q[61],Q[60],Q[59],Q[58],Q[57],Q[56],Q[55],Q[54],Q[53],Q[52],Q[51],Q[50],Q[49],Q[48],Q[47],Q[46],Q[45],Q[44],Q[43],Q[42],Q[41],Q[40],Q[39],Q[38],Q[37],Q[36],Q[35],Q[34],Q[33],Q[32],Q[31],Q[30],Q[29],Q[28],Q[27],Q[26],Q[25],Q[24],Q[23],Q[22],Q[21],Q[20],Q[19],Q[18],Q[17],Q[16],Q[15],Q[14],Q[13],Q[12],Q[11],Q[10],Q[9],Q[8],Q[7],Q[6],Q[5],Q[4],Q[3],Q[2],Q[1],Q[0]}),
        .RA({RA[1],RA[0]}), .RMERD(RMERD), .RMEWR(RMEWR),
        .RMRD({RMRD[3],RMRD[2],RMRD[1],RMRD[0]}),
        .RMWR({RMWR[3],RMWR[2],RMWR[1],RMWR[0]}), .ROP(ROP), .RSCEN(LOG0),
        .RSCIN(LOG0), .RSCLK(LOG0), .RSCOUT(LOG0), .RSCRST(LOG0),
        .TEST1RD(TEST1RD), .TEST1WR(TEST1WR), .TEST_RNM(TEST_RNM),
        .VBN({VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN}),
        .VBP({VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP}),
        .VDDA({VDDA,VDDA,VDDA}),
        .VDDP({VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP}),
        .VDDPI({VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI}),
        .VSS({VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS}),
        .WA({WA[1],WA[0]}), .WE(WE),
        .WEM({WEM[79],WEM[78],WEM[77],WEM[76],WEM[75],WEM[74],WEM[73],WEM[72],WEM[71],WEM[70],WEM[69],WEM[68],WEM[67],WEM[66],WEM[65],WEM[64],WEM[63],WEM[62],WEM[61],WEM[60],WEM[59],WEM[58],WEM[57],WEM[56],WEM[55],WEM[54],WEM[53],WEM[52],WEM[51],WEM[50],WEM[49],WEM[48],WEM[47],WEM[46],WEM[45],WEM[44],WEM[43],WEM[42],WEM[41],WEM[40],WEM[39],WEM[38],WEM[37],WEM[36],WEM[35],WEM[34],WEM[33],WEM[32],WEM[31],WEM[30],WEM[29],WEM[28],WEM[27],WEM[26],WEM[25],WEM[24],WEM[23],WEM[22],WEM[21],WEM[20],WEM[19],WEM[18],WEM[17],WEM[16],WEM[15],WEM[14],WEM[13],WEM[12],WEM[11],WEM[10],WEM[9],WEM[8],WEM[7],WEM[6],WEM[5],WEM[4],WEM[3],WEM[2],WEM[1],WEM[0]}),
        .WP({WP[2],WP[1],WP[0]}),
        .XADRRD({XADRRD[7],XADRRD[6],XADRRD[5],XADRRD[4],XADRRD[3],XADRRD[2],XADRRD[1],XADRRD[0]}),
        .XADRWR({XADRWR[7],XADRWR[6],XADRWR[5],XADRWR[4],XADRWR[3],XADRWR[2],XADRWR[1],XADRWR[0]}),
        .YADRRD({YADRRD[1],YADRRD[0]}), .YADRWR({YADRWR[1],YADRWR[0]}));
    SNPS_RF_DP_HD_256x80_gio_row X_gio_row (.ARYSD(ARYSD),
        .CB({CB[39],CB[38],CB[37],CB[36],CB[35],CB[34],CB[33],CB[32],CB[31],CB[30],CB[29],CB[28],CB[27],CB[26],CB[25],CB[24],CB[23],CB[22],CB[21],CB[20],CB[19],CB[18],CB[17],CB[16],CB[15],CB[14],CB[13],CB[12],CB[11],CB[10],CB[9],CB[8],CB[7],CB[6],CB[5],CB[4],CB[3],CB[2],CB[1],CB[0]}),
        .CENDP(LOG0), .CKGATE_RD(CKGATE_RD), .CLKRD(CLKRD), .CLKWR(CLKWR),
        .CT({CT[39],CT[38],CT[37],CT[36],CT[35],CT[34],CT[33],CT[32],CT[31],CT[30],CT[29],CT[28],CT[27],CT[26],CT[25],CT[24],CT[23],CT[22],CT[21],CT[20],CT[19],CT[18],CT[17],CT[16],CT[15],CT[14],CT[13],CT[12],CT[11],CT[10],CT[9],CT[8],CT[7],CT[6],CT[5],CT[4],CT[3],CT[2],CT[1],CT[0]}),
        .D({D[79],D[78],D[77],D[76],D[75],D[74],D[73],D[72],D[71],D[70],D[69],D[68],D[67],D[66],D[65],D[64],D[63],D[62],D[61],D[60],D[59],D[58],D[57],D[56],D[55],D[54],D[53],D[52],D[51],D[50],D[49],D[48],D[47],D[46],D[45],D[44],D[43],D[42],D[41],D[40],D[39],D[38],D[37],D[36],D[35],D[34],D[33],D[32],D[31],D[30],D[29],D[28],D[27],D[26],D[25],D[24],D[23],D[22],D[21],D[20],D[19],D[18],D[17],D[16],D[15],D[14],D[13],D[12],D[11],D[10],D[9],D[8],D[7],D[6],D[5],D[4],D[3],D[2],D[1],D[0]}),
        .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .DFTBIO({LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0,LOG0}),
        .DFTBIOB({LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1}),
        .DFTCKRD(LOG0), .DFTCKWR(LOG0), .DFT_OR_SERD(LOG0), .DFT_OR_SEWR(LOG0),
        .DIB_LT({DIB_LT[79],DIB_LT[78],DIB_LT[77],DIB_LT[76],DIB_LT[75],DIB_LT[74],DIB_LT[73],DIB_LT[72],DIB_LT[71],DIB_LT[70],DIB_LT[69],DIB_LT[68],DIB_LT[67],DIB_LT[66],DIB_LT[65],DIB_LT[64],DIB_LT[63],DIB_LT[62],DIB_LT[61],DIB_LT[60],DIB_LT[59],DIB_LT[58],DIB_LT[57],DIB_LT[56],DIB_LT[55],DIB_LT[54],DIB_LT[53],DIB_LT[52],DIB_LT[51],DIB_LT[50],DIB_LT[49],DIB_LT[48],DIB_LT[47],DIB_LT[46],DIB_LT[45],DIB_LT[44],DIB_LT[43],DIB_LT[42],DIB_LT[41],DIB_LT[40],DIB_LT[39],DIB_LT[38],DIB_LT[37],DIB_LT[36],DIB_LT[35],DIB_LT[34],DIB_LT[33],DIB_LT[32],DIB_LT[31],DIB_LT[30],DIB_LT[29],DIB_LT[28],DIB_LT[27],DIB_LT[26],DIB_LT[25],DIB_LT[24],DIB_LT[23],DIB_LT[22],DIB_LT[21],DIB_LT[20],DIB_LT[19],DIB_LT[18],DIB_LT[17],DIB_LT[16],DIB_LT[15],DIB_LT[14],DIB_LT[13],DIB_LT[12],DIB_LT[11],DIB_LT[10],DIB_LT[9],DIB_LT[8],DIB_LT[7],DIB_LT[6],DIB_LT[5],DIB_LT[4],DIB_LT[3],DIB_LT[2],DIB_LT[1],DIB_LT[0]}),
        .DINB({DINB[79],DINB[78],DINB[77],DINB[76],DINB[75],DINB[74],DINB[73],DINB[72],DINB[71],DINB[70],DINB[69],DINB[68],DINB[67],DINB[66],DINB[65],DINB[64],DINB[63],DINB[62],DINB[61],DINB[60],DINB[59],DINB[58],DINB[57],DINB[56],DINB[55],DINB[54],DINB[53],DINB[52],DINB[51],DINB[50],DINB[49],DINB[48],DINB[47],DINB[46],DINB[45],DINB[44],DINB[43],DINB[42],DINB[41],DINB[40],DINB[39],DINB[38],DINB[37],DINB[36],DINB[35],DINB[34],DINB[33],DINB[32],DINB[31],DINB[30],DINB[29],DINB[28],DINB[27],DINB[26],DINB[25],DINB[24],DINB[23],DINB[22],DINB[21],DINB[20],DINB[19],DINB[18],DINB[17],DINB[16],DINB[15],DINB[14],DINB[13],DINB[12],DINB[11],DINB[10],DINB[9],DINB[8],DINB[7],DINB[6],DINB[5],DINB[4],DINB[3],DINB[2],DINB[1],DINB[0]}),
        .DLYPDB(LOG1), .DLYPW(LOG0), .DSORSD(LOG0), .FAST1_RD(FAST1_RD),
        .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD), .FAST2_WR(FAST2_WR),
        .FISO(FISO), .LCLKRDB(LCLKRDB), .LCLKRDT(LCLKRDT), .LCLKWRB(LCLKWRB),
        .LCLKWRT(LCLKWRT),
        .LDIB({LDIB[79],LDIB[78],LDIB[77],LDIB[76],LDIB[75],LDIB[74],LDIB[73],LDIB[72],LDIB[71],LDIB[70],LDIB[69],LDIB[68],LDIB[67],LDIB[66],LDIB[65],LDIB[64],LDIB[63],LDIB[62],LDIB[61],LDIB[60],LDIB[59],LDIB[58],LDIB[57],LDIB[56],LDIB[55],LDIB[54],LDIB[53],LDIB[52],LDIB[51],LDIB[50],LDIB[49],LDIB[48],LDIB[47],LDIB[46],LDIB[45],LDIB[44],LDIB[43],LDIB[42],LDIB[41],LDIB[40],LDIB[39],LDIB[38],LDIB[37],LDIB[36],LDIB[35],LDIB[34],LDIB[33],LDIB[32],LDIB[31],LDIB[30],LDIB[29],LDIB[28],LDIB[27],LDIB[26],LDIB[25],LDIB[24],LDIB[23],LDIB[22],LDIB[21],LDIB[20],LDIB[19],LDIB[18],LDIB[17],LDIB[16],LDIB[15],LDIB[14],LDIB[13],LDIB[12],LDIB[11],LDIB[10],LDIB[9],LDIB[8],LDIB[7],LDIB[6],LDIB[5],LDIB[4],LDIB[3],LDIB[2],LDIB[1],LDIB[0]}),
        .LITESLP(LITESLP), .LMERD(LMERD), .LMEWR(LMEWR), .LME_GATING_RD(LOG1),
        .LME_GATING_WR(LOG1), .LOG0(LOG0), .LOG1(LOG1),
        .LOG1RMRD_VDDPI(LOG1RMRD_VDDPI), .LOG1RMWR_VDDPI(LOG1RMWR_VDDPI),
        .LOG1_RMRD(LOG1RMRD_VDDPI), .LOG1_RMWR(LOG1RMWR_VDDPI),
        .LQB({}),
        .LRWMEB(LRWMEB), .LS(LS), .LWE(LWE),
        .LXADRBRD({LXADRBRD_7,LXADRBRD_6,LXADRBRD_5,LXADRBRD_4,LXADRBRD_3,LXADRBRD_2,LXADRBRD_1,LXADRBRD_0}),
        .LXADRBWR({LXADRBWR[7],LXADRBWR[6],LXADRBWR[5],LXADRBWR[4],LXADRBWR[3],LXADRBWR[2],LXADRBWR[1],LXADRBWR[0]}),
        .LXADRRD({LXADRRD[7],LXADRRD[6],LXADRRD[5],LXADRRD[4],LXADRRD[3],LXADRRD[2],LXADRRD[1],LXADRRD[0]}),
        .LXADRWR({LXADRWR[7],LXADRWR[6],LXADRWR[5],LXADRWR[4],LXADRWR[3],LXADRWR[2],LXADRWR[1],LXADRWR[0]}),
        .LYADRBRD({LYADRBRD[1],LYADRBRD[0]}),
        .LYADRBWR({LYADRBWR[1],LYADRBWR[0]}), .LYADRRD({LYADRRD[1],LYADRRD[0]}),
        .LYADRWR({LYADRWR[1],LYADRWR[0]}), .MCLKRDB(MCLKRDB), .MCLKRDT(MCLKRDT),
        .MCLKWRB(MCLKWRB), .MCLKWRT(MCLKWRT), .MERD(MERD), .MEWR(MEWR),
        .PROCOM({PROCOM[1],PROCOM[0]}), .PWDO(PWDO),
        .Q({Q[79],Q[78],Q[77],Q[76],Q[75],Q[74],Q[73],Q[72],Q[71],Q[70],Q[69],Q[68],Q[67],Q[66],Q[65],Q[64],Q[63],Q[62],Q[61],Q[60],Q[59],Q[58],Q[57],Q[56],Q[55],Q[54],Q[53],Q[52],Q[51],Q[50],Q[49],Q[48],Q[47],Q[46],Q[45],Q[44],Q[43],Q[42],Q[41],Q[40],Q[39],Q[38],Q[37],Q[36],Q[35],Q[34],Q[33],Q[32],Q[31],Q[30],Q[29],Q[28],Q[27],Q[26],Q[25],Q[24],Q[23],Q[22],Q[21],Q[20],Q[19],Q[18],Q[17],Q[16],Q[15],Q[14],Q[13],Q[12],Q[11],Q[10],Q[9],Q[8],Q[7],Q[6],Q[5],Q[4],Q[3],Q[2],Q[1],Q[0]}),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RA({RA[1],RA[0]}), .RASSB_H({RASSB_H[1],RASSB_H[0]}),
        .RERASSB({RERASSB[1],RERASSB[0]}), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET),
        .RMDEF12_RD_PROCOM00({RMDEF12_RD_PROCOM00[3],RMDEF12_RD_PROCOM00[2],RMDEF12_RD_PROCOM00[1],RMDEF12_RD_PROCOM00[0]}),
        .RMDEF12_RD_PROCOM01({RMDEF12_RD_PROCOM01[3],RMDEF12_RD_PROCOM01[2],RMDEF12_RD_PROCOM01[1],RMDEF12_RD_PROCOM01[0]}),
        .RMDEF12_WR_PROCOM00({RMDEF12_WR_PROCOM00[3],RMDEF12_WR_PROCOM00[2],RMDEF12_WR_PROCOM00[1],RMDEF12_WR_PROCOM00[0]}),
        .RMDEF12_WR_PROCOM01({RMDEF12_WR_PROCOM01[3],RMDEF12_WR_PROCOM01[2],RMDEF12_WR_PROCOM01[1],RMDEF12_WR_PROCOM01[0]}),
        .RMERD(RMERD), .RMEWR(RMEWR), .RMRD({RMRD[3],RMRD[2],RMRD[1],RMRD[0]}),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}),
        .RMWR({RMWR[3],RMWR[2],RMWR[1],RMWR[0]}), .RSCEN(LOG0), .RSCIN(LOG0),
        .RSCLK(LOG0), .RSCOUT(LOG0), .RSCRST(LOG0), .RWLCKB(RWLCKB),
        .SEDB(LOG1), .SEDT(LOG0), .STRSB(STRSB), .T1TRD(T1TRD), .T1TWR(T1TWR),
        .TEST1RD(TEST1RD), .TEST1WR(TEST1WR), .TEST_RNM(TEST_RNM),
        .TKEEPB(TKEEPB),
        .VBN({VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN}),
        .VBP({VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP}),
        .VDDA({VDDA,VDDA,VDDA}),
        .VDDP({VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP}),
        .VDDPI({VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI}),
        .VEDGE(VEDGE),
        .VSS({VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS}),
        .WA({WA[1],WA[0]}), .WABUF({WABUF[2],WABUF[1],WABUF[0]}),
        .WBI({WBI[79],WBI[78],WBI[77],WBI[76],WBI[75],WBI[74],WBI[73],WBI[72],WBI[71],WBI[70],WBI[69],WBI[68],WBI[67],WBI[66],WBI[65],WBI[64],WBI[63],WBI[62],WBI[61],WBI[60],WBI[59],WBI[58],WBI[57],WBI[56],WBI[55],WBI[54],WBI[53],WBI[52],WBI[51],WBI[50],WBI[49],WBI[48],WBI[47],WBI[46],WBI[45],WBI[44],WBI[43],WBI[42],WBI[41],WBI[40],WBI[39],WBI[38],WBI[37],WBI[36],WBI[35],WBI[34],WBI[33],WBI[32],WBI[31],WBI[30],WBI[29],WBI[28],WBI[27],WBI[26],WBI[25],WBI[24],WBI[23],WBI[22],WBI[21],WBI[20],WBI[19],WBI[18],WBI[17],WBI[16],WBI[15],WBI[14],WBI[13],WBI[12],WBI[11],WBI[10],WBI[9],WBI[8],WBI[7],WBI[6],WBI[5],WBI[4],WBI[3],WBI[2],WBI[1],WBI[0]}),
        .WE(WE),
        .WEM({WEM[79],WEM[78],WEM[77],WEM[76],WEM[75],WEM[74],WEM[73],WEM[72],WEM[71],WEM[70],WEM[69],WEM[68],WEM[67],WEM[66],WEM[65],WEM[64],WEM[63],WEM[62],WEM[61],WEM[60],WEM[59],WEM[58],WEM[57],WEM[56],WEM[55],WEM[54],WEM[53],WEM[52],WEM[51],WEM[50],WEM[49],WEM[48],WEM[47],WEM[46],WEM[45],WEM[44],WEM[43],WEM[42],WEM[41],WEM[40],WEM[39],WEM[38],WEM[37],WEM[36],WEM[35],WEM[34],WEM[33],WEM[32],WEM[31],WEM[30],WEM[29],WEM[28],WEM[27],WEM[26],WEM[25],WEM[24],WEM[23],WEM[22],WEM[21],WEM[20],WEM[19],WEM[18],WEM[17],WEM[16],WEM[15],WEM[14],WEM[13],WEM[12],WEM[11],WEM[10],WEM[9],WEM[8],WEM[7],WEM[6],WEM[5],WEM[4],WEM[3],WEM[2],WEM[1],WEM[0]}),
        .WEMB({}),
        .WFLOAT(WFLOAT), .WFLT_RET(WFLT_RET), .WP({WP[2],WP[1],WP[0]}),
        .WPBUF({WPBUF[2],WPBUF[1],WPBUF[0]}),
        .WTI({}),
        .XADRRD({XADRRD[7],XADRRD[6],XADRRD[5],XADRRD[4],XADRRD[3],XADRRD[2],XADRRD[1],XADRRD[0]}),
        .XADRWR({XADRWR[7],XADRWR[6],XADRWR[5],XADRWR[4],XADRWR[3],XADRWR[2],XADRWR[1],XADRWR[0]}),
        .YADRRD({YADRRD[1],YADRRD[0]}), .YADRWR({YADRWR[1],YADRWR[0]}),
        .YCOLRD({YCOLRD[3],YCOLRD[2],YCOLRD[1],YCOLRD[0]}),
        .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_was_row X_was_row (.ARYSD(ARYSD),
        .BADB({BADB[39],BADB[38],BADB[37],BADB[36],BADB[35],BADB[34],BADB[33],BADB[32],BADB[31],BADB[30],BADB[29],BADB[28],BADB[27],BADB[26],BADB[25],BADB[24],BADB[23],BADB[22],BADB[21],BADB[20],BADB[19],BADB[18],BADB[17],BADB[16],BADB[15],BADB[14],BADB[13],BADB[12],BADB[11],BADB[10],BADB[9],BADB[8],BADB[7],BADB[6],BADB[5],BADB[4],BADB[3],BADB[2],BADB[1],BADB[0]}),
        .CENDP(LOG0), .CKGATE_RD(CKGATE_RD), .DEF1_RD(DEF1_RD),
        .DEF1_WR(DEF1_WR), .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR),
        .FAST2_RD(FAST2_RD), .FAST2_WR(FAST2_WR), .LIOPD({LOG0,LOG0}),
        .LITESLP(LITESLP), .LOG0(LOG0), .LOG1(LOG1), .LRWMEB(LRWMEB),
        .LXADRBRD({LXADRBRD_7,LXADRBRD_6,LXADRBRD_5,LXADRBRD_4,LXADRBRD_3,LXADRBRD_2,LXADRBRD_1,LXADRBRD_0}),
        .LXADRBWR({LXADRBWR[7],LXADRBWR[6],LXADRBWR[5],LXADRBWR[4],LXADRBWR[3],LXADRBWR[2],LXADRBWR[1],LXADRBWR[0]}),
        .LXADRRD({LXADRRD[7],LXADRRD[6],LXADRRD[5],LXADRRD[4],LXADRRD[3],LXADRRD[2],LXADRRD[1],LXADRRD[0]}),
        .LXADRWR({LXADRWR[7],LXADRWR[6],LXADRWR[5],LXADRWR[4],LXADRWR[3],LXADRWR[2],LXADRWR[1],LXADRWR[0]}),
        .LYADRBRD({LYADRBRD[1],LYADRBRD[0]}),
        .LYADRBWR({LYADRBWR[1],LYADRBWR[0]}), .LYADRRD({LYADRRD[1],LYADRRD[0]}),
        .LYADRWR({LYADRWR[1],LYADRWR[0]}),
        .PAARD({PAARD[3],PAARD[2],PAARD[1],PAARD[0]}),
        .PAAWR({PAAWR[3],PAAWR[2],PAAWR[1],PAAWR[0]}),
        .PAWR({PAWR[3],PAWR[2],PAWR[1],PAWR[0]}),
        .PBRD({PBRD[3],PBRD[2],PBRD[1],PBRD[0]}),
        .PBWR({PBWR[3],PBWR[2],PBWR[1],PBWR[0]}),
        .PCRD({PCRD[3],PCRD[2],PCRD[1],PCRD[0]}),
        .PCWR({PCWR[3],PCWR[2],PCWR[1],PCWR[0]}), .PGIOI(LOG1),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RASSB_H({RASSB_H[1],RASSB_H[0]}), .RBLWA(RBLWA),
        .RERASSB({RERASSB[1],RERASSB[0]}), .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET),
        .RM3CNT(RM3CNT), .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .STCLK(STCLK),
        .STRSB(STRSB), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB), .VBN(VBN),
        .VBP(VBP), .VDDA(VDDA), .VDDAIR1(VDDP), .VDDAIR2(VDDP),
        .VDDAI_SACR1(VDDP), .VDDAI_SACR2(VDDP), .VDDF(VDDP), .VDDP(VDDP),
        .VDDPI(VDDPI), .VEDGE(VEDGE), .VSS(VSS),
        .WABUF({WABUF[2],WABUF[1],WABUF[0]}),
        .WAGND({WAGND[79],WAGND[78],WAGND[77],WAGND[76],WAGND[75],WAGND[74],WAGND[73],WAGND[72],WAGND[71],WAGND[70],WAGND[69],WAGND[68],WAGND[67],WAGND[66],WAGND[65],WAGND[64],WAGND[63],WAGND[62],WAGND[61],WAGND[60],WAGND[59],WAGND[58],WAGND[57],WAGND[56],WAGND[55],WAGND[54],WAGND[53],WAGND[52],WAGND[51],WAGND[50],WAGND[49],WAGND[48],WAGND[47],WAGND[46],WAGND[45],WAGND[44],WAGND[43],WAGND[42],WAGND[41],WAGND[40],WAGND[39],WAGND[38],WAGND[37],WAGND[36],WAGND[35],WAGND[34],WAGND[33],WAGND[32],WAGND[31],WAGND[30],WAGND[29],WAGND[28],WAGND[27],WAGND[26],WAGND[25],WAGND[24],WAGND[23],WAGND[22],WAGND[21],WAGND[20],WAGND[19],WAGND[18],WAGND[17],WAGND[16],WAGND[15],WAGND[14],WAGND[13],WAGND[12],WAGND[11],WAGND[10],WAGND[9],WAGND[8],WAGND[7],WAGND[6],WAGND[5],WAGND[4],WAGND[3],WAGND[2],WAGND[1],WAGND[0]}),
        .WAPRCLKB_RET(WAPRCLKB_RET_LCEN), .WAPRCLKB_RET_DEL(WAPRCLKB_RET_DEL),
        .WAPRCLKB_RET_DEL_2(WAPRCLKB_RET_DEL_2),
        .WAPRCLKB_RET_DEL_4(WAPRCLKB_RET_DEL_4),
        .WAPRCLKB_RET_LCEN(WAPRCLKB_RET_LCEN),
        .WBI({WBI[79],WBI[78],WBI[77],WBI[76],WBI[75],WBI[74],WBI[73],WBI[72],WBI[71],WBI[70],WBI[69],WBI[68],WBI[67],WBI[66],WBI[65],WBI[64],WBI[63],WBI[62],WBI[61],WBI[60],WBI[59],WBI[58],WBI[57],WBI[56],WBI[55],WBI[54],WBI[53],WBI[52],WBI[51],WBI[50],WBI[49],WBI[48],WBI[47],WBI[46],WBI[45],WBI[44],WBI[43],WBI[42],WBI[41],WBI[40],WBI[39],WBI[38],WBI[37],WBI[36],WBI[35],WBI[34],WBI[33],WBI[32],WBI[31],WBI[30],WBI[29],WBI[28],WBI[27],WBI[26],WBI[25],WBI[24],WBI[23],WBI[22],WBI[21],WBI[20],WBI[19],WBI[18],WBI[17],WBI[16],WBI[15],WBI[14],WBI[13],WBI[12],WBI[11],WBI[10],WBI[9],WBI[8],WBI[7],WBI[6],WBI[5],WBI[4],WBI[3],WBI[2],WBI[1],WBI[0]}),
        .WFLOAT(WFLOAT), .WFLT_RET(WFLT_RET),
        .WPBUF({WPBUF[2],WPBUF[1],WPBUF[0]}),
        .WTI({}),
        .YCOLRD({YCOLRD[3],YCOLRD[2],YCOLRD[1],YCOLRD[0]}),
        .YCOLWR({YCOLWR[3],YCOLWR[2],YCOLWR[1],YCOLWR[0]}),
        .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_mux_row X_mux_row (.ARYSD(ARYSD), .CENDP(LOG0),
        .CKGATE_RD(CKGATE_RD), .CKGATE_RLCEN_PROG(LOG0), .CLKWLB_RD(CLKWLB_RD),
        .CLKWLB_RD_HV(CLKWLB_RD_HV), .CLKWLB_RD_prog(CLKWLB_RD),
        .CLKWLB_WR_HV(CLKWLB_WR_HV), .CLKWLB_WR_prog(WFLOAT), .DEF1_RD(DEF1_RD),
        .DEF1_WR(DEF1_WR), .FAST1_RD(FAST1_RD), .FAST1_WR(FAST1_WR),
        .FAST2_RD(FAST2_RD), .FAST2_WR(FAST2_WR), .LCGTL(LCGTL[0]),
        .LCGTV({LCGTV[1],LCGTV[0]}), .LITESLP(LITESLP), .LOG0({LOG0,LOG0}),
        .LOG1({LOG1,LOG1}), .LRWMEB(LRWMEB),
        .LXADRB({LXADRBRD_4,LXADRBRD_3,LXADRBRD_2}),
        .PAARD({PAARD[3],PAARD[2],PAARD[1],PAARD[0]}),
        .PAAWR({PAAWR[3],PAAWR[2],PAAWR[1],PAAWR[0]}),
        .PAWR({PAWR[3],PAWR[2],PAWR[1],PAWR[0]}),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRD({PBRD[3],PBRD[2],PBRD[1],PBRD[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWR({PBWR[3],PBWR[2],PBWR[1],PBWR[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRD({PCRD[3],PCRD[2],PCRD[1],PCRD[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWR({PCWR[3],PCWR[2],PCWR[1],PCWR[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .PGIOI(LOG1),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RASSB_H({RASSB_H[1],RASSB_H[0]}), .RBLWA(RBLWA), .RDBL(RDBL[0]),
        .RERASSB({RERASSB[1],RERASSB[0]}), .RFLOAT(RFLOAT),
        .RFLOAT_RLCEN_PROG(LOG1), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .STCLK(STCLK),
        .STCLK_WR_RST_PGM(STCLK_WR_RST_PGM), .STRSB(STRSB), .T1TRD(T1TRD),
        .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN({VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN,VBN}),
        .VBP({VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP,VBP}),
        .VDDA({VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA,VDDA}),
        .VDDAIR1(VDDP), .VDDAIR2(VDDP), .VDDAI_SACR1(VDDP), .VDDAI_SACR2(VDDP),
        .VDDAPI(VDDAPI), .VDDF(VDDP),
        .VDDP({VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP,VDDP}),
        .VDDPI({VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI,VDDPI}),
        .VDDWL_RD(VDDWL_RD), .VDDWL_RD_REBUF(VDDWL_RD_REBUF),
        .VDDWL_WR(VDDWL_WR), .VDDWL_WR_REBUF(VDDWL_WR_REBUF), .VEDGE(VEDGE),
        .VSS({VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS,VSS}),
        .VSSWL(VSSWL), .WABUF(WABUF[2]),
        .WAGND({WAGND[79],WAGND[78],WAGND[77],WAGND[76],WAGND[75],WAGND[74],WAGND[73],WAGND[72],WAGND[71],WAGND[70],WAGND[69],WAGND[68],WAGND[67],WAGND[66],WAGND[65],WAGND[64],WAGND[63],WAGND[62],WAGND[61],WAGND[60],WAGND[59],WAGND[58],WAGND[57],WAGND[56],WAGND[55],WAGND[54],WAGND[53],WAGND[52],WAGND[51],WAGND[50],WAGND[49],WAGND[48],WAGND[47],WAGND[46],WAGND[45],WAGND[44],WAGND[43],WAGND[42],WAGND[41],WAGND[40],WAGND[39],WAGND[38],WAGND[37],WAGND[36],WAGND[35],WAGND[34],WAGND[33],WAGND[32],WAGND[31],WAGND[30],WAGND[29],WAGND[28],WAGND[27],WAGND[26],WAGND[25],WAGND[24],WAGND[23],WAGND[22],WAGND[21],WAGND[20],WAGND[19],WAGND[18],WAGND[17],WAGND[16],WAGND[15],WAGND[14],WAGND[13],WAGND[12],WAGND[11],WAGND[10],WAGND[9],WAGND[8],WAGND[7],WAGND[6],WAGND[5],WAGND[4],WAGND[3],WAGND[2],WAGND[1],WAGND[0]}),
        .WAPRCLKB_RET_LCEN(WAPRCLKB_RET_LCEN),
        .WBI({WBI[79],WBI[78],WBI[77],WBI[76],WBI[75],WBI[74],WBI[73],WBI[72],WBI[71],WBI[70],WBI[69],WBI[68],WBI[67],WBI[66],WBI[65],WBI[64],WBI[63],WBI[62],WBI[61],WBI[60],WBI[59],WBI[58],WBI[57],WBI[56],WBI[55],WBI[54],WBI[53],WBI[52],WBI[51],WBI[50],WBI[49],WBI[48],WBI[47],WBI[46],WBI[45],WBI[44],WBI[43],WBI[42],WBI[41],WBI[40],WBI[39],WBI[38],WBI[37],WBI[36],WBI[35],WBI[34],WBI[33],WBI[32],WBI[31],WBI[30],WBI[29],WBI[28],WBI[27],WBI[26],WBI[25],WBI[24],WBI[23],WBI[22],WBI[21],WBI[20],WBI[19],WBI[18],WBI[17],WBI[16],WBI[15],WBI[14],WBI[13],WBI[12],WBI[11],WBI[10],WBI[9],WBI[8],WBI[7],WBI[6],WBI[5],WBI[4],WBI[3],WBI[2],WBI[1],WBI[0]}),
        .WBLB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .WBLT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WFLT_DEL_A(WFLT_DEL_A), .WFLT_DEL_B(STCLK_WR_RST_PGM),
        .WFLT_RET(WFLT_RET), .WL_VSS(WL_VSS),
        .WTI({}),
        .YCOLWR({YCOLWR[3],YCOLWR[2],YCOLWR[1],YCOLWR[0]}),
        .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_sac_row_t X_sac_row_t (.ARYSD(ARYSD),
        .BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .CENDP(LOG0), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .DMY_EDGE_LT({DMY_EDGE_LT[1],DMY_EDGE_LT[0]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[1],DMY_EDGE_RT[0]}), .FAST1_RD(FAST1_RD),
        .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD), .FAST2_WR(FAST2_WR),
        .LCGTL({LCGTL[1],LCGTL[0]}), .LCGTV({LCGTV[1],LCGTV[0]}), .LOG0(LOG0),
        .LOG1(LOG1), .LRWMEB(LRWMEB), .LXADR({LXADR[2],LXADR[1],LXADR[0]}),
        .LXADRBRD_2(LXADRBRD_2), .LXADRBRD_3(LXADRBRD_3),
        .LXADRBRD_4(LXADRBRD_4), .OPT_RET(OPT_RET),
        .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .PGIOI(LOG1),
        .PLBKADR({PLBKADR[2],PLBKADR[1],LXADR[0]}), .PLBKADRB(LXADRBRD_2),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RASSB_H({RASSB_H[1],RASSB_H[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RBLWA(RBLWA), .RDBL(RDBL[1]), .RERASSB({RERASSB[1],RERASSB[0]}),
        .RFLOAT(RFLOAT), .RFLOAT_H(RFLOAT_H), .RFLOAT_H_DEL0(RFLOAT_H_DEL0),
        .RFLOAT_H_DEL2(RFLOAT_H_DEL2), .RFLOAT_H_DEL4(RFLOAT_H_DEL4),
        .RFLOAT_H_DEL6(RFLOAT_H_DEL6), .RFLOAT_H_PGM(RFLOAT_H_DEL6),
        .RFLOAT_PGM(RFLOAT_H_DEL2), .RFLT_DEL_A(RFLT_DEL_A),
        .RFLT_DEL_B(RFLT_DEL_B), .RFLT_DEL_C(RFLT_DEL_C), .RFLT_RET(RFLT_RET),
        .RM3CNT(RM3CNT), .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .ROWBKDB(ROWBKDB),
        .ROWBKTB(ROWBKTB), .RWLB_RD(RWLB_RD), .RWLB_WR(RWLB_WR),
        .STCLK_RD_RST_PGM(RFLT_DEL_C), .T1TRD(T1TRD), .T1TWR(T1TWR),
        .TKEEPB(TKEEPB), .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAIR1(VDDP),
        .VDDAIR2(VDDP), .VDDAI_SACR1(VDDP), .VDDAI_SACR2(VDDP), .VDDAPI(VDDAPI),
        .VDDF(VDDP), .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR(VDDWL_WR),
        .VDDWL_WR_REBUF(VDDWL_WR_REBUF), .VEDGE(VEDGE), .VSS(VSS),
        .VSSWL(VSSWL), .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WFLOAT_H(WFLOAT_H), .WFLOAT_H_DEL0(WFLOAT_H_DEL0),
        .WFLOAT_H_DEL2(WFLOAT_H_DEL2), .WFLOAT_H_DEL4(WFLOAT_H_DEL4),
        .WFLOAT_H_DEL6(WFLOAT_H_DEL6), .WFLOAT_H_PGM(WFLOAT_H_DEL4),
        .WFLOAT_PGM(WFLOAT_H_DEL2), .WL_VSS(WL_VSS),
        .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ary_row_1 X_ary_row_1 (.ARYSD(ARYSD),
        .BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .BKRDB(ROWBKDB), .BKRDB_128(ROWBKTB), .CENDP(LOG0), .DEF1_RD(DEF1_RD),
        .DEF1_WR(DEF1_WR), .DMY_EDGE_LB({DMY_EDGE_LT[1],DMY_EDGE_LT[0]}),
        .DMY_EDGE_LT({DMY_EDGE_LT[3],DMY_EDGE_LT[2]}),
        .DMY_EDGE_RB({DMY_EDGE_RT[1],DMY_EDGE_RT[0]}),
        .DMY_EDGE_RT({DMY_EDGE_RT[3],DMY_EDGE_RT[2]}), .FAST1_RD(FAST1_RD),
        .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD), .FAST2_WR(FAST2_WR),
        .LCGTL(LCGTL[1]), .LCGTV({LCGTV[1],LCGTV[0]}), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .LXADRBRD_2(LXADRBRD_2), .LXADRBRD_3(LXADRBRD_3),
        .LXADRBRD_4(LXADRBRD_4), .PAWRB({PAWRB[3],PAWRB[2],PAWRB[1],PAWRB[0]}),
        .PBRDB({PBRDB[3],PBRDB[2],PBRDB[1],PBRDB[0]}),
        .PBWRB({PBWRB[3],PBWRB[2],PBWRB[1],PBWRB[0]}),
        .PCRDB({PCRDB[3],PCRDB[2],PCRDB[1],PCRDB[0]}),
        .PCWRB({PCWRB[3],PCWRB[2],PCWRB[1],PCWRB[0]}), .PGIOI(LOG1),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RASSB_H({RASSB_H[1],RASSB_H[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RBLWA(RBLWA), .RDBL(RDBL[1]), .RERASSB({RERASSB[1],RERASSB[0]}),
        .RFLOAT(RFLOAT), .RFLT_RET(RFLT_RET), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}), .RWLB_RD(RWLB_RD),
        .RWLB_WR(RWLB_WR), .T1TRD(T1TRD), .T1TWR(T1TWR), .TKEEPB(TKEEPB),
        .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAIR1(VDDP), .VDDAIR2(VDDP),
        .VDDAI_SACR1(VDDP), .VDDAI_SACR2(VDDP), .VDDAPI(VDDAPI), .VDDF(VDDP),
        .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR(VDDWL_WR),
        .VDDWL_WR_REBUF(VDDWL_WR_REBUF), .VEDGE(VEDGE), .VSS(VSS),
        .VSSWL(VSSWL), .WCLKRD({WCLKRD[3],WCLKRD[2],WCLKRD[1],WCLKRD[0]}),
        .WCLKWR({WCLKWR[3],WCLKWR[2],WCLKWR[1],WCLKWR[0]}), .WDBL(WDBL),
        .WFLOAT(WFLOAT), .WL_VSS(WL_VSS), .XAWRB(PAWRB[0]), .XBRDB(PBRDB[0]),
        .XBWRB(PBWRB[0]), .XCRDB(PCRDB[0]), .XCWRB(PCWRB[0]),
        .YSELRD({YSELRD[3],YSELRD[2],YSELRD[1],YSELRD[0]}));
    SNPS_RF_DP_HD_256x80_ref_row_1 X_ref_row (.ARYSD(ARYSD),
        .BAB({BAB[159],BAB[158],BAB[157],BAB[156],BAB[155],BAB[154],BAB[153],BAB[152],BAB[151],BAB[150],BAB[149],BAB[148],BAB[147],BAB[146],BAB[145],BAB[144],BAB[143],BAB[142],BAB[141],BAB[140],BAB[139],BAB[138],BAB[137],BAB[136],BAB[135],BAB[134],BAB[133],BAB[132],BAB[131],BAB[130],BAB[129],BAB[128],BAB[127],BAB[126],BAB[125],BAB[124],BAB[123],BAB[122],BAB[121],BAB[120],BAB[119],BAB[118],BAB[117],BAB[116],BAB[115],BAB[114],BAB[113],BAB[112],BAB[111],BAB[110],BAB[109],BAB[108],BAB[107],BAB[106],BAB[105],BAB[104],BAB[103],BAB[102],BAB[101],BAB[100],BAB[99],BAB[98],BAB[97],BAB[96],BAB[95],BAB[94],BAB[93],BAB[92],BAB[91],BAB[90],BAB[89],BAB[88],BAB[87],BAB[86],BAB[85],BAB[84],BAB[83],BAB[82],BAB[81],BAB[80],BAB[79],BAB[78],BAB[77],BAB[76],BAB[75],BAB[74],BAB[73],BAB[72],BAB[71],BAB[70],BAB[69],BAB[68],BAB[67],BAB[66],BAB[65],BAB[64],BAB[63],BAB[62],BAB[61],BAB[60],BAB[59],BAB[58],BAB[57],BAB[56],BAB[55],BAB[54],BAB[53],BAB[52],BAB[51],BAB[50],BAB[49],BAB[48],BAB[47],BAB[46],BAB[45],BAB[44],BAB[43],BAB[42],BAB[41],BAB[40],BAB[39],BAB[38],BAB[37],BAB[36],BAB[35],BAB[34],BAB[33],BAB[32],BAB[31],BAB[30],BAB[29],BAB[28],BAB[27],BAB[26],BAB[25],BAB[24],BAB[23],BAB[22],BAB[21],BAB[20],BAB[19],BAB[18],BAB[17],BAB[16],BAB[15],BAB[14],BAB[13],BAB[12],BAB[11],BAB[10],BAB[9],BAB[8],BAB[7],BAB[6],BAB[5],BAB[4],BAB[3],BAB[2],BAB[1],BAB[0]}),
        .BAT({BAT[159],BAT[158],BAT[157],BAT[156],BAT[155],BAT[154],BAT[153],BAT[152],BAT[151],BAT[150],BAT[149],BAT[148],BAT[147],BAT[146],BAT[145],BAT[144],BAT[143],BAT[142],BAT[141],BAT[140],BAT[139],BAT[138],BAT[137],BAT[136],BAT[135],BAT[134],BAT[133],BAT[132],BAT[131],BAT[130],BAT[129],BAT[128],BAT[127],BAT[126],BAT[125],BAT[124],BAT[123],BAT[122],BAT[121],BAT[120],BAT[119],BAT[118],BAT[117],BAT[116],BAT[115],BAT[114],BAT[113],BAT[112],BAT[111],BAT[110],BAT[109],BAT[108],BAT[107],BAT[106],BAT[105],BAT[104],BAT[103],BAT[102],BAT[101],BAT[100],BAT[99],BAT[98],BAT[97],BAT[96],BAT[95],BAT[94],BAT[93],BAT[92],BAT[91],BAT[90],BAT[89],BAT[88],BAT[87],BAT[86],BAT[85],BAT[84],BAT[83],BAT[82],BAT[81],BAT[80],BAT[79],BAT[78],BAT[77],BAT[76],BAT[75],BAT[74],BAT[73],BAT[72],BAT[71],BAT[70],BAT[69],BAT[68],BAT[67],BAT[66],BAT[65],BAT[64],BAT[63],BAT[62],BAT[61],BAT[60],BAT[59],BAT[58],BAT[57],BAT[56],BAT[55],BAT[54],BAT[53],BAT[52],BAT[51],BAT[50],BAT[49],BAT[48],BAT[47],BAT[46],BAT[45],BAT[44],BAT[43],BAT[42],BAT[41],BAT[40],BAT[39],BAT[38],BAT[37],BAT[36],BAT[35],BAT[34],BAT[33],BAT[32],BAT[31],BAT[30],BAT[29],BAT[28],BAT[27],BAT[26],BAT[25],BAT[24],BAT[23],BAT[22],BAT[21],BAT[20],BAT[19],BAT[18],BAT[17],BAT[16],BAT[15],BAT[14],BAT[13],BAT[12],BAT[11],BAT[10],BAT[9],BAT[8],BAT[7],BAT[6],BAT[5],BAT[4],BAT[3],BAT[2],BAT[1],BAT[0]}),
        .CENDP(LOG0), .DEF1_RD(DEF1_RD), .DEF1_WR(DEF1_WR),
        .DMY_EDGE_LB({DMY_EDGE_LT[3],DMY_EDGE_LT[2]}),
        .DMY_EDGE_RB({DMY_EDGE_RT[3],DMY_EDGE_RT[2]}), .FAST1_RD(FAST1_RD),
        .FAST1_WR(FAST1_WR), .FAST2_RD(FAST2_RD), .FAST2_WR(FAST2_WR),
        .LCGTL(LCGTL[1]), .LCGTV({LCGTV[1],LCGTV[0]}), .LOG0(LOG0), .LOG1(LOG1),
        .LRWMEB(LRWMEB), .PGIOI(LOG1),
        .QT({QT[159],QT[158],QT[157],QT[156],QT[155],QT[154],QT[153],QT[152],QT[151],QT[150],QT[149],QT[148],QT[147],QT[146],QT[145],QT[144],QT[143],QT[142],QT[141],QT[140],QT[139],QT[138],QT[137],QT[136],QT[135],QT[134],QT[133],QT[132],QT[131],QT[130],QT[129],QT[128],QT[127],QT[126],QT[125],QT[124],QT[123],QT[122],QT[121],QT[120],QT[119],QT[118],QT[117],QT[116],QT[115],QT[114],QT[113],QT[112],QT[111],QT[110],QT[109],QT[108],QT[107],QT[106],QT[105],QT[104],QT[103],QT[102],QT[101],QT[100],QT[99],QT[98],QT[97],QT[96],QT[95],QT[94],QT[93],QT[92],QT[91],QT[90],QT[89],QT[88],QT[87],QT[86],QT[85],QT[84],QT[83],QT[82],QT[81],QT[80],QT[79],QT[78],QT[77],QT[76],QT[75],QT[74],QT[73],QT[72],QT[71],QT[70],QT[69],QT[68],QT[67],QT[66],QT[65],QT[64],QT[63],QT[62],QT[61],QT[60],QT[59],QT[58],QT[57],QT[56],QT[55],QT[54],QT[53],QT[52],QT[51],QT[50],QT[49],QT[48],QT[47],QT[46],QT[45],QT[44],QT[43],QT[42],QT[41],QT[40],QT[39],QT[38],QT[37],QT[36],QT[35],QT[34],QT[33],QT[32],QT[31],QT[30],QT[29],QT[28],QT[27],QT[26],QT[25],QT[24],QT[23],QT[22],QT[21],QT[20],QT[19],QT[18],QT[17],QT[16],QT[15],QT[14],QT[13],QT[12],QT[11],QT[10],QT[9],QT[8],QT[7],QT[6],QT[5],QT[4],QT[3],QT[2],QT[1],QT[0]}),
        .RBL({RBL[159],RBL[158],RBL[157],RBL[156],RBL[155],RBL[154],RBL[153],RBL[152],RBL[151],RBL[150],RBL[149],RBL[148],RBL[147],RBL[146],RBL[145],RBL[144],RBL[143],RBL[142],RBL[141],RBL[140],RBL[139],RBL[138],RBL[137],RBL[136],RBL[135],RBL[134],RBL[133],RBL[132],RBL[131],RBL[130],RBL[129],RBL[128],RBL[127],RBL[126],RBL[125],RBL[124],RBL[123],RBL[122],RBL[121],RBL[120],RBL[119],RBL[118],RBL[117],RBL[116],RBL[115],RBL[114],RBL[113],RBL[112],RBL[111],RBL[110],RBL[109],RBL[108],RBL[107],RBL[106],RBL[105],RBL[104],RBL[103],RBL[102],RBL[101],RBL[100],RBL[99],RBL[98],RBL[97],RBL[96],RBL[95],RBL[94],RBL[93],RBL[92],RBL[91],RBL[90],RBL[89],RBL[88],RBL[87],RBL[86],RBL[85],RBL[84],RBL[83],RBL[82],RBL[81],RBL[80],RBL[79],RBL[78],RBL[77],RBL[76],RBL[75],RBL[74],RBL[73],RBL[72],RBL[71],RBL[70],RBL[69],RBL[68],RBL[67],RBL[66],RBL[65],RBL[64],RBL[63],RBL[62],RBL[61],RBL[60],RBL[59],RBL[58],RBL[57],RBL[56],RBL[55],RBL[54],RBL[53],RBL[52],RBL[51],RBL[50],RBL[49],RBL[48],RBL[47],RBL[46],RBL[45],RBL[44],RBL[43],RBL[42],RBL[41],RBL[40],RBL[39],RBL[38],RBL[37],RBL[36],RBL[35],RBL[34],RBL[33],RBL[32],RBL[31],RBL[30],RBL[29],RBL[28],RBL[27],RBL[26],RBL[25],RBL[24],RBL[23],RBL[22],RBL[21],RBL[20],RBL[19],RBL[18],RBL[17],RBL[16],RBL[15],RBL[14],RBL[13],RBL[12],RBL[11],RBL[10],RBL[9],RBL[8],RBL[7],RBL[6],RBL[5],RBL[4],RBL[3],RBL[2],RBL[1],RBL[0]}),
        .RBLWA(RBLWA), .RDBL(RDBL[1]), .RFLOAT(RFLOAT), .RM3CNT(RM3CNT),
        .RMTRD({RMTRD[3],RMTRD[2],RMTRD[1],RMTRD[0]}),
        .RMTWR({RMTWR[3],RMTWR[2],RMTWR[1],RMTWR[0]}),
        .RWLB_INT_WR(RWLB_INT_WR), .RWLB_RD(RWLB_RD), .RWLB_WR(RWLB_WR),
        .RWLDRD_PASS(RWLDRD_PASS), .RWLRD_INT(RWLRD_INT),
        .RWLRD_PROG(RWLDRD_PASS), .RWL_PROG(RWL_PROG), .T1TRD(T1TRD),
        .T1TWR(T1TWR), .VBN(VBN), .VBP(VBP), .VDDA(VDDA), .VDDAIR1(VDDP),
        .VDDAIR2(VDDP), .VDDAI_SACR1(VDDP), .VDDAI_SACR2(VDDP), .VDDAPI(VDDAPI),
        .VDDF(VDDP), .VDDP(VDDP), .VDDPI(VDDPI), .VDDWL_RD(VDDWL_RD),
        .VDDWL_RD_REBUF(VDDWL_RD_REBUF), .VDDWL_WR(VDDWL_WR),
        .VDDWL_WR_REBUF(VDDWL_WR_REBUF), .VEDGE(VEDGE), .VSS(VSS),
        .VSSWL(VSSWL), .WDBL(WDBL), .WFLOAT(WFLOAT), .WL_VSS(WL_VSS));
    SNPS_RF_DP_HD_256x80_ref_row_dummy X_ref_row_dummy ();
endmodule

module SNPS_RF_DP_HD_256x80_TOP_LAY (.ADRA({ADRA[9], ADRA[8], ADRA[7], ADRA[6],
       ADRA[5], ADRA[3], ADRA[2], ADRA[0]}), .ADRB({ADRB[9], ADRB[8], ADRB[7],
       ADRB[6], ADRB[5], ADRB[3], ADRB[2], ADRB[0]}), CLKA, CLKB, DA, LS, MEA,
       MEB, QB, RMA, RMB, RMEA, RMEB, TEST1A, TEST1B, TEST_RNMA, .VDD({VDD[0]}),
       VNW_N, VPW_P, VSS, WA, WEA, WPULSE);
    input [9:0] ADRA;
    input [9:0] ADRB;
    input CLKA;
    input CLKB;
    input [79:0] DA;
    input LS;
    input MEA;
    input MEB;
    wire [1:0] PROCOM;
    output [79:0] QB;
    wire [1:0] RA;
    input [3:0] RMA;
    input [3:0] RMB;
    input RMEA;
    input RMEB;
    input TEST1A;
    input TEST1B;
    input TEST_RNMA;
    inout [1:0] VDD;
    supply1 [1:0] VDD;
    inout VNW_N;
    supply0 VNW_N;
    inout VPW_P;
    supply0 VPW_P;
    inout VSS;
    supply0 VSS;
    input [1:0] WA;
    input WEA;
    wire [79:0] WEMA;
    input [2:0] WPULSE;
    SNPS_RF_DP_HD_256x80_top X_top (.ARYSD(LOG0), .CLKRD(CLKB), .CLKWR(CLKA),
        .D({DA[79],DA[78],DA[77],DA[76],DA[75],DA[74],DA[73],DA[72],DA[71],DA[70],DA[69],DA[68],DA[67],DA[66],DA[65],DA[64],DA[63],DA[62],DA[61],DA[60],DA[59],DA[58],DA[57],DA[56],DA[55],DA[54],DA[53],DA[52],DA[51],DA[50],DA[49],DA[48],DA[47],DA[46],DA[45],DA[44],DA[43],DA[42],DA[41],DA[40],DA[39],DA[38],DA[37],DA[36],DA[35],DA[34],DA[33],DA[32],DA[31],DA[30],DA[29],DA[28],DA[27],DA[26],DA[25],DA[24],DA[23],DA[22],DA[21],DA[20],DA[19],DA[18],DA[17],DA[16],DA[15],DA[14],DA[13],DA[12],DA[11],DA[10],DA[9],DA[8],DA[7],DA[6],DA[5],DA[4],DA[3],DA[2],DA[1],DA[0]}),
        .DS(LOG0), .FISO(LOG0), .LOG0(LOG0), .LOG1(LOG1), .LS(LS), .MERD(MEB),
        .MEWR(MEA), .PROCOM({LOG1,LOG0}),
        .Q({QB[79],QB[78],QB[77],QB[76],QB[75],QB[74],QB[73],QB[72],QB[71],QB[70],QB[69],QB[68],QB[67],QB[66],QB[65],QB[64],QB[63],QB[62],QB[61],QB[60],QB[59],QB[58],QB[57],QB[56],QB[55],QB[54],QB[53],QB[52],QB[51],QB[50],QB[49],QB[48],QB[47],QB[46],QB[45],QB[44],QB[43],QB[42],QB[41],QB[40],QB[39],QB[38],QB[37],QB[36],QB[35],QB[34],QB[33],QB[32],QB[31],QB[30],QB[29],QB[28],QB[27],QB[26],QB[25],QB[24],QB[23],QB[22],QB[21],QB[20],QB[19],QB[18],QB[17],QB[16],QB[15],QB[14],QB[13],QB[12],QB[11],QB[10],QB[9],QB[8],QB[7],QB[6],QB[5],QB[4],QB[3],QB[2],QB[1],QB[0]}),
        .RA({LOG0,LOG0}), .RMERD(RMEB), .RMEWR(RMEA),
        .RMRD({RMB[3],RMB[2],RMB[1],RMB[0]}),
        .RMWR({RMA[3],RMA[2],RMA[1],RMA[0]}), .ROP(ROP), .TEST1RD(TEST1B),
        .TEST1WR(TEST1A), .TEST_RNM(TEST_RNMA), .VBN(VNW_N), .VBP(VPW_P),
        .VDDA(VDD[0]), .VDDP(VDD[0]), .VDDPI(VDD[0]), .VSS(VSS),
        .WA({WA[1],WA[0]}), .WE(WEA),
        .WEM({LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1,LOG1}),
        .WP({WPULSE[2],WPULSE[1],WPULSE[0]}),
        .XADRRD({ADRB[8],ADRB[7],ADRB[6],ADRB[5],LOG0,ADRB[9],ADRB[3],ADRB[2]}),
        .XADRWR({ADRA[8],ADRA[7],ADRA[6],ADRA[5],LOG0,ADRA[9],ADRA[3],ADRA[2]}),
        .YADRRD({LOG0,ADRB[0]}), .YADRWR({LOG0,ADRA[0]}));
endmodule

module SNPS_RF_DP_HD_256x80 (ADRA, ADRB, CLKA, CLKB, DA, LS, MEA, MEB, QB, RMA,
       RMB, RMEA, RMEB, TEST1A, TEST1B, TEST_RNMA, VDD, VNW_N, VPW_P, VSS, WA,
       WEA, WPULSE);
    input [7:0] ADRA;
    input [7:0] ADRB;
    input CLKA;
    input CLKB;
    input [79:0] DA;
    input LS;
    input MEA;
    input MEB;
    output [79:0] QB;
    input [3:0] RMA;
    input [3:0] RMB;
    input RMEA;
    input RMEB;
    input TEST1A;
    input TEST1B;
    input TEST_RNMA;
    inout VDD;
    supply1 VDD;
    inout VNW_N;
    supply0 VNW_N;
    inout VPW_P;
    supply0 VPW_P;
    inout VSS;
    supply0 VSS;
    input [1:0] WA;
    input WEA;
    input [2:0] WPULSE;
    SNPS_RF_DP_HD_256x80_TOP_LAY X_TOP_LAY
        (.ADRA({ADRA[7],ADRA[6],ADRA[5],ADRA[4],ADRA[3],ADRA[2],ADRA[1],ADRA[0]}),
        .ADRB({ADRB[7],ADRB[6],ADRB[5],ADRB[4],ADRB[3],ADRB[2],ADRB[1],ADRB[0]}),
        .CLKA(CLKA), .CLKB(CLKB),
        .DA({DA[79],DA[78],DA[77],DA[76],DA[75],DA[74],DA[73],DA[72],DA[71],DA[70],DA[69],DA[68],DA[67],DA[66],DA[65],DA[64],DA[63],DA[62],DA[61],DA[60],DA[59],DA[58],DA[57],DA[56],DA[55],DA[54],DA[53],DA[52],DA[51],DA[50],DA[49],DA[48],DA[47],DA[46],DA[45],DA[44],DA[43],DA[42],DA[41],DA[40],DA[39],DA[38],DA[37],DA[36],DA[35],DA[34],DA[33],DA[32],DA[31],DA[30],DA[29],DA[28],DA[27],DA[26],DA[25],DA[24],DA[23],DA[22],DA[21],DA[20],DA[19],DA[18],DA[17],DA[16],DA[15],DA[14],DA[13],DA[12],DA[11],DA[10],DA[9],DA[8],DA[7],DA[6],DA[5],DA[4],DA[3],DA[2],DA[1],DA[0]}),
        .LS(LS), .MEA(MEA), .MEB(MEB),
        .QB({QB[79],QB[78],QB[77],QB[76],QB[75],QB[74],QB[73],QB[72],QB[71],QB[70],QB[69],QB[68],QB[67],QB[66],QB[65],QB[64],QB[63],QB[62],QB[61],QB[60],QB[59],QB[58],QB[57],QB[56],QB[55],QB[54],QB[53],QB[52],QB[51],QB[50],QB[49],QB[48],QB[47],QB[46],QB[45],QB[44],QB[43],QB[42],QB[41],QB[40],QB[39],QB[38],QB[37],QB[36],QB[35],QB[34],QB[33],QB[32],QB[31],QB[30],QB[29],QB[28],QB[27],QB[26],QB[25],QB[24],QB[23],QB[22],QB[21],QB[20],QB[19],QB[18],QB[17],QB[16],QB[15],QB[14],QB[13],QB[12],QB[11],QB[10],QB[9],QB[8],QB[7],QB[6],QB[5],QB[4],QB[3],QB[2],QB[1],QB[0]}),
        .RMA({RMA[3],RMA[2],RMA[1],RMA[0]}),
        .RMB({RMB[3],RMB[2],RMB[1],RMB[0]}), .RMEA(RMEA), .RMEB(RMEB),
        .TEST1A(TEST1A), .TEST1B(TEST1B), .TEST_RNMA(TEST_RNMA), .VDD({VDD}),
        .VNW_N(VNW_N), .VPW_P(VPW_P), .VSS(VSS), .WA({WA[1],WA[0]}), .WEA(WEA),
        .WPULSE({WPULSE[2],WPULSE[1],WPULSE[0]}));
endmodule

